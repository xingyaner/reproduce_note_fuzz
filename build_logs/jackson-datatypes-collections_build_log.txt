[[1;34mINFO[m]   from pcollections/pom.xml
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[90mDownloading from [0mcentral[90m: https://repo.maven.apache.org/maven2/[0morg/pcollections/pcollections/4.0.2/pcollections-4.0.2.pom
Progress (1): 1.0 kB
Progress (1): 1.5 kB
                    
Downloaded[90m from [0mcentral[90m: https://repo.maven.apache.org/maven2/[0morg/pcollections/pcollections/4.0.2/pcollections-4.0.2.pom[90m (1.5 kB at 3.4 kB/s)[0m
[90mDownloading from [0mcentral[90m: https://repo.maven.apache.org/maven2/[0morg/pcollections/pcollections/4.0.2/pcollections-4.0.2.jar
Progress (1): 7.7/74 kB
Progress (1): 16/74 kB 
Progress (1): 32/74 kB
Progress (1): 49/74 kB
Progress (1): 57/74 kB
Progress (1): 74 kB   
                   
Downloaded[90m from [0mcentral[90m: https://repo.maven.apache.org/maven2/[0morg/pcollections/pcollections/4.0.2/pcollections-4.0.2.jar[90m (74 kB at 178 kB/s)[0m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuild-helper:3.6.0:regex-property[m [1m(regex-property)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32menforcer:3.6.2:enforce[m [1m(enforce-java)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Rule 2: org.apache.maven.enforcer.rules.RequirePluginVersions passed
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco:0.8.13:prepare-agent[m [1m(default)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] argLine set to -javaagent:/root/.m2/repository/org/jacoco/org.jacoco.agent/0.8.13/org.jacoco.agent-0.8.13-runtime.jar=destfile=/src/jackson-datatypes-collections/pcollections/target/jacoco.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuild-helper:3.6.0:add-source[m [1m(add-generated-sources)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Source directory: /src/jackson-datatypes-collections/pcollections/target/generated-sources added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mreplacer:1.5.3:replace[m [1m(process-packageVersion)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Replacement run on 1 file.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuild-helper:3.6.0:add-resource[m [1m(add-resource)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mresources:3.3.1:resources[m [1m(default-resources)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 0 resource from  to target/classes/META-INF
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcompiler:3.14.1:compile[m [1m(default-compile)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Recompiling the module because of [1mchanged source code[m.
[[1;34mINFO[m] Compiling 12 source files with javac [debug:lines,source,vars deprecation target 17 module-path] to target/classes
[[1;34mINFO[m] JDK-8318913 workaround: patched module-info.class requires version from [17.0.16] to [null] on 1 JDK modules [java.base]
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbundle:5.1.9:manifest[m [1m(bundle-manifest)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] No MANIFEST.MF file found, generating manifest.
[[1;34mINFO[m] Writing manifest: /src/jackson-datatypes-collections/pcollections/target/classes/META-INF/MANIFEST.MF
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mbuild-helper:3.6.0:add-test-source[m [1m(add-test-sources)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Test Source directory: /src/jackson-datatypes-collections/pcollections/target/generated-test-sources/jpsg added.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mresources:3.3.1:testResources[m [1m(default-testResources)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Not copying test resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcompiler:3.14.1:testCompile[m [1m(default-testCompile)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Not compiling test sources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32msurefire:3.5.4:test[m [1m(default-test)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Tests are skipped.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjar:3.4.2:jar[m [1m(default-jar)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Building jar: /src/jackson-datatypes-collections/pcollections/target/jackson-datatype-pcollections-3.1.0-SNAPSHOT.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32msite:4.0.0-M16:attach-descriptor[m [1m(attach-descriptor)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Skipping because packaging 'jar' is not pom.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mcyclonedx:2.9.1:makeAggregateBom[m [1m(default)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] Skipping CycloneDX goal, because module skips deploy
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mgradle-module-metadata:1.2:gmm[m [1m(default)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mdependency:3.9.0:copy-dependencies[m [1m(default-cli)[m @ [36mjackson-datatype-pcollections[0;1m ---[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mReactor Summary for Jackson datatypes: collections 3.1.0-SNAPSHOT:[m
[[1;34mINFO[m] 
[[1;34mINFO[m] Jackson datatypes: collections ..................... [1;32mSUCCESS[m [02:25 min]
[[1;34mINFO[m] Jackson datatype: Guava ............................ [1;32mSUCCESS[m [ 45.160 s]
[[1;34mINFO[m] Jackson datatype: primitive-collections-base ....... [1;32mSUCCESS[m [  0.307 s]
[[1;34mINFO[m] Jackson datatype: HPPC ............................. [1;32mSUCCESS[m [  1.183 s]
[[1;34mINFO[m] Jackson datatype: eclipse-collections .............. [1;32mSUCCESS[m [ 20.168 s]
[[1;34mINFO[m] Jackson datatype: pcollections ..................... [1;32mSUCCESS[m [  0.998 s]
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  03:37 min
[[1;34mINFO[m] Finished at: 2025-10-27T07:29:05Z
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[0m[0m+ mkdir -p /out/dependency
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/jackson-datatype-eclipse-collections-3.1.0-SNAPSHOT.jar /out/collections.jar
++ find /src/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name '*.jar' '!' -name 'junit*.jar' '!' -name 'hamcrest*.jar'
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/jackson-core-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/apiguardian-api-1.1.2.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/jackson-databind-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/eclipse-collections-11.1.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/jackson-annotations-2.20.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/eclipse-collections-api-11.1.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/eclipse-collections/target/dependency/opentest4j-1.3.0.jar /out/dependency
+ cp /src/jackson-datatypes-collections/guava/target/jackson-datatype-guava-3.1.0-SNAPSHOT.jar /out/guava.jar
++ find /src/jackson-datatypes-collections/guava/target/dependency/ -name '*.jar' '!' -name 'junit*.jar' '!' -name 'hamcrest*.jar'
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/jackson-core-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/failureaccess-1.0.3.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/apiguardian-api-1.1.2.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/jackson-databind-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/jackson-annotations-2.20.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/j2objc-annotations-3.0.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/error_prone_annotations-2.36.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/guava-33.4.8-jre.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/opentest4j-1.3.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/guava/target/dependency/jspecify-1.0.0.jar /out/dependency
+ cp /src/jackson-datatypes-collections/hppc/target/jackson-datatype-hppc-3.1.0-SNAPSHOT.jar /out/hppc.jar
++ find /src/jackson-datatypes-collections/hppc/target/dependency/ -name '*.jar' '!' -name 'junit*.jar' '!' -name 'hamcrest*.jar'
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/jackson-core-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/apiguardian-api-1.1.2.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/jackson-databind-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/jackson-annotations-2.20.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/opentest4j-1.3.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/hppc/target/dependency/hppc-0.10.0.jar /out/dependency
+ cp /src/jackson-datatypes-collections/pcollections/target/jackson-datatype-pcollections-3.1.0-SNAPSHOT.jar /out/pcollections.jar
++ find /src/jackson-datatypes-collections/pcollections/target/dependency/ -name '*.jar' '!' -name 'junit*.jar' '!' -name 'hamcrest*.jar'
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/jackson-core-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/apiguardian-api-1.1.2.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/jackson-databind-3.1.0-SNAPSHOT.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/jackson-annotations-2.20.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/opentest4j-1.3.0.jar /out/dependency
+ for jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)
+ cp /src/jackson-datatypes-collections/pcollections/target/dependency/pcollections-4.0.2.jar /out/dependency
+ ALL_JARS='collections.jar guava.jar hppc.jar pcollections.jar'
++ find /out/dependency -name '*.jar' -printf '%f '
+ ALL_DEPENDENCY='jackson-core-3.1.0-SNAPSHOT.jar listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar failureaccess-1.0.3.jar apiguardian-api-1.1.2.jar jackson-databind-3.1.0-SNAPSHOT.jar eclipse-collections-11.1.0.jar jackson-annotations-2.20.jar jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar j2objc-annotations-3.0.0.jar error_prone_annotations-2.36.0.jar guava-33.4.8-jre.jar eclipse-collections-api-11.1.0.jar opentest4j-1.3.0.jar jspecify-1.0.0.jar pcollections-4.0.2.jar hppc-0.10.0.jar '
++ echo collections.jar guava.jar hppc.jar pcollections.jar
++ xargs printf -- /out/%s:
++ echo jackson-core-3.1.0-SNAPSHOT.jar listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar failureaccess-1.0.3.jar apiguardian-api-1.1.2.jar jackson-databind-3.1.0-SNAPSHOT.jar eclipse-collections-11.1.0.jar jackson-annotations-2.20.jar jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar j2objc-annotations-3.0.0.jar error_prone_annotations-2.36.0.jar guava-33.4.8-jre.jar eclipse-collections-api-11.1.0.jar opentest4j-1.3.0.jar jspecify-1.0.0.jar pcollections-4.0.2.jar hppc-0.10.0.jar
++ xargs printf -- /out/dependency/%s:
+ BUILD_CLASSPATH=/usr/local/lib/jazzer_api_deploy.jar:/out/collections.jar:/out/guava.jar:/out/hppc.jar:/out/pcollections.jar:/out/dependency/jackson-core-3.1.0-SNAPSHOT.jar:/out/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/out/dependency/failureaccess-1.0.3.jar:/out/dependency/apiguardian-api-1.1.2.jar:/out/dependency/jackson-databind-3.1.0-SNAPSHOT.jar:/out/dependency/eclipse-collections-11.1.0.jar:/out/dependency/jackson-annotations-2.20.jar:/out/dependency/jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar:/out/dependency/j2objc-annotations-3.0.0.jar:/out/dependency/error_prone_annotations-2.36.0.jar:/out/dependency/guava-33.4.8-jre.jar:/out/dependency/eclipse-collections-api-11.1.0.jar:/out/dependency/opentest4j-1.3.0.jar:/out/dependency/jspecify-1.0.0.jar:/out/dependency/pcollections-4.0.2.jar:/out/dependency/hppc-0.10.0.jar::/usr/local/lib/jazzer_api_deploy.jar
++ echo collections.jar guava.jar hppc.jar pcollections.jar
++ xargs printf -- '$this_dir/%s:'
++ echo jackson-core-3.1.0-SNAPSHOT.jar listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar failureaccess-1.0.3.jar apiguardian-api-1.1.2.jar jackson-databind-3.1.0-SNAPSHOT.jar eclipse-collections-11.1.0.jar jackson-annotations-2.20.jar jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar j2objc-annotations-3.0.0.jar error_prone_annotations-2.36.0.jar guava-33.4.8-jre.jar eclipse-collections-api-11.1.0.jar opentest4j-1.3.0.jar jspecify-1.0.0.jar pcollections-4.0.2.jar hppc-0.10.0.jar
++ xargs printf -- '$this_dir/dependency/%s:'
+ RUNTIME_CLASSPATH='$this_dir/collections.jar:$this_dir/guava.jar:$this_dir/hppc.jar:$this_dir/pcollections.jar::$this_dir/dependency/jackson-core-3.1.0-SNAPSHOT.jar:$this_dir/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$this_dir/dependency/failureaccess-1.0.3.jar:$this_dir/dependency/apiguardian-api-1.1.2.jar:$this_dir/dependency/jackson-databind-3.1.0-SNAPSHOT.jar:$this_dir/dependency/eclipse-collections-11.1.0.jar:$this_dir/dependency/jackson-annotations-2.20.jar:$this_dir/dependency/jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar:$this_dir/dependency/j2objc-annotations-3.0.0.jar:$this_dir/dependency/error_prone_annotations-2.36.0.jar:$this_dir/dependency/guava-33.4.8-jre.jar:$this_dir/dependency/eclipse-collections-api-11.1.0.jar:$this_dir/dependency/opentest4j-1.3.0.jar:$this_dir/dependency/jspecify-1.0.0.jar:$this_dir/dependency/pcollections-4.0.2.jar:$this_dir/dependency/hppc-0.10.0.jar::$this_dir'
++ find /src -maxdepth 1 -name '*Fuzzer.java'
+ for fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')
++ basename -s .java /src/PCollectionsFuzzer.java
+ fuzzer_basename=PCollectionsFuzzer
+ javac -cp /usr/local/lib/jazzer_api_deploy.jar:/out/collections.jar:/out/guava.jar:/out/hppc.jar:/out/pcollections.jar:/out/dependency/jackson-core-3.1.0-SNAPSHOT.jar:/out/dependency/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/out/dependency/failureaccess-1.0.3.jar:/out/dependency/apiguardian-api-1.1.2.jar:/out/dependency/jackson-databind-3.1.0-SNAPSHOT.jar:/out/dependency/eclipse-collections-11.1.0.jar:/out/dependency/jackson-annotations-2.20.jar:/out/dependency/jackson-datatype-primitive-collections-base-3.1.0-SNAPSHOT.jar:/out/dependency/j2objc-annotations-3.0.0.jar:/out/dependency/error_prone_annotations-2.36.0.jar:/out/dependency/guava-33.4.8-jre.jar:/out/dependency/eclipse-collections-api-11.1.0.jar:/out/dependency/opentest4j-1.3.0.jar:/out/dependency/jspecify-1.0.0.jar:/out/dependency/pcollections-4.0.2.jar:/out/dependency/hppc-0.10.0.jar::/usr/local/lib/jazzer_api_deploy.jar /src/PCollectionsFuzzer.java
/src/PCollectionsFuzzer.java:17: error: package com.fasterxml.jackson.core.type does not exist
import com.fasterxml.jackson.core.type.TypeReference;
                                      ^
/src/PCollectionsFuzzer.java:18: error: package com.fasterxml.jackson.databind does not exist
import com.fasterxml.jackson.databind.ObjectMapper;
                                     ^
/src/PCollectionsFuzzer.java:19: error: package com.fasterxml.jackson.datatype.pcollections does not exist
import com.fasterxml.jackson.datatype.pcollections.PCollectionsModule;
                                                  ^
/src/PCollectionsFuzzer.java:39: error: cannot find symbol
  private static ObjectMapper mapper;
                 ^
  symbol:   class ObjectMapper
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:40: error: cannot find symbol
  private static List<TypeReference> choice;
                      ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:44: error: cannot find symbol
    mapper = new ObjectMapper().registerModule(new PCollectionsModule());
                                                   ^
  symbol:   class PCollectionsModule
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:44: error: cannot find symbol
    mapper = new ObjectMapper().registerModule(new PCollectionsModule());
                 ^
  symbol:   class ObjectMapper
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:51: error: cannot find symbol
      TypeReference type = data.pickValue(choice);
      ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:60: error: cannot find symbol
    choice = new ArrayList<TypeReference>();
                           ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:62: error: cannot find symbol
    choice.add(new TypeReference<ConsPStack<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:63: error: cannot find symbol
    choice.add(new TypeReference<HashPMap<String, Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:64: error: cannot find symbol
    choice.add(new TypeReference<MapPBag<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:65: error: cannot find symbol
    choice.add(new TypeReference<MapPSet<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:66: error: cannot find symbol
    choice.add(new TypeReference<OrderedPSet<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:67: error: cannot find symbol
    choice.add(new TypeReference<PBag<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:68: error: cannot find symbol
    choice.add(new TypeReference<PCollection<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:69: error: cannot find symbol
    choice.add(new TypeReference<PMap<String, Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:70: error: cannot find symbol
    choice.add(new TypeReference<PSequence<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:71: error: cannot find symbol
    choice.add(new TypeReference<PSet<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:72: error: cannot find symbol
    choice.add(new TypeReference<PStack<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:73: error: cannot find symbol
    choice.add(new TypeReference<PVector<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
/src/PCollectionsFuzzer.java:74: error: cannot find symbol
    choice.add(new TypeReference<TreePVector<Integer>>() {});
                   ^
  symbol:   class TypeReference
  location: class PCollectionsFuzzer
22 errors
ERROR:__main__:Building fuzzers failed.
