starting build "e2a71ef8-3f4b-48ce-8fa5-cb044766d1f0"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4"
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Sending build context to Docker daemon  6.144kB
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Step 1/5 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b549f31133a9: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b2dd5275fc2f: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9732d5f6d5c7: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 84303db34e42: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5a500de257b3: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3a0219387046: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7210600a053f: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1be450bb54cb: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f571cb51a2aa: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dcc6bb1a97ec: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 76922dfe3c80: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 62b73f49a11d: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1a65436d69d3: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e4e768af3817: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 84303db34e42: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9efea281fa80: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0473125de6a3: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e95cccbfe3f2: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e60b87897a74: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 83b08c73d85a: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": cf5cd722f9ea: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dd3941c70f74: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3bb6c22106a4: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5a500de257b3: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 47fdd9f6d12a: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 357bba388632: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2d8fa985a917: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3a0219387046: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0180a41dd3f0: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7210600a053f: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": ac8006f65256: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 62b73f49a11d: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dcc6bb1a97ec: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": af57a3488785: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1be450bb54cb: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0473125de6a3: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5c9bf937e1f5: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f571cb51a2aa: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7b1068c632f8: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 76922dfe3c80: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1a65436d69d3: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 23591c9dcf9d: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 29486c5e6529: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c781fb52b6e6: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e4e768af3817: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e60b87897a74: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f51bfcad6434: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 83b08c73d85a: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9efea281fa80: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 82f817917324: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2135b08953fc: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c517dfd78e20: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e95cccbfe3f2: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": ac8006f65256: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2bd3d71b6830: Pulling fs layer
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2d8fa985a917: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": af57a3488785: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": cf5cd722f9ea: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5c9bf937e1f5: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 357bba388632: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f51bfcad6434: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3bb6c22106a4: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dd3941c70f74: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 47fdd9f6d12a: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2bd3d71b6830: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c517dfd78e20: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 82f817917324: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7b1068c632f8: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2135b08953fc: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 29486c5e6529: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c781fb52b6e6: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 23591c9dcf9d: Waiting
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9732d5f6d5c7: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9732d5f6d5c7: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b549f31133a9: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b549f31133a9: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5a500de257b3: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 84303db34e42: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 84303db34e42: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7210600a053f: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7210600a053f: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b2dd5275fc2f: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b2dd5275fc2f: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1be450bb54cb: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b549f31133a9: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dcc6bb1a97ec: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dcc6bb1a97ec: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 76922dfe3c80: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 76922dfe3c80: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 62b73f49a11d: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 62b73f49a11d: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1a65436d69d3: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1a65436d69d3: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f571cb51a2aa: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f571cb51a2aa: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e4e768af3817: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e4e768af3817: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0473125de6a3: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0473125de6a3: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9efea281fa80: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9efea281fa80: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e60b87897a74: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e60b87897a74: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e95cccbfe3f2: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e95cccbfe3f2: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 83b08c73d85a: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 83b08c73d85a: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": cf5cd722f9ea: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": cf5cd722f9ea: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dd3941c70f74: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dd3941c70f74: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3bb6c22106a4: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3bb6c22106a4: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 47fdd9f6d12a: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 47fdd9f6d12a: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 357bba388632: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 357bba388632: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2d8fa985a917: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2d8fa985a917: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0180a41dd3f0: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0180a41dd3f0: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": ac8006f65256: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": ac8006f65256: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": af57a3488785: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": af57a3488785: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": b2dd5275fc2f: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5c9bf937e1f5: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5c9bf937e1f5: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9732d5f6d5c7: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 23591c9dcf9d: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3a0219387046: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3a0219387046: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7b1068c632f8: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7b1068c632f8: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f51bfcad6434: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f51bfcad6434: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c781fb52b6e6: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c781fb52b6e6: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 29486c5e6529: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 29486c5e6529: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2135b08953fc: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2135b08953fc: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 82f817917324: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 82f817917324: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c517dfd78e20: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c517dfd78e20: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2bd3d71b6830: Verifying Checksum
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2bd3d71b6830: Download complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 84303db34e42: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5a500de257b3: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3a0219387046: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7210600a053f: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1be450bb54cb: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f571cb51a2aa: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dcc6bb1a97ec: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 76922dfe3c80: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 62b73f49a11d: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 1a65436d69d3: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e4e768af3817: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 9efea281fa80: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0473125de6a3: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e95cccbfe3f2: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": e60b87897a74: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 83b08c73d85a: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": cf5cd722f9ea: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": dd3941c70f74: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 3bb6c22106a4: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 47fdd9f6d12a: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 357bba388632: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2d8fa985a917: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0180a41dd3f0: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": ac8006f65256: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": af57a3488785: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 5c9bf937e1f5: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 7b1068c632f8: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 23591c9dcf9d: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 29486c5e6529: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c781fb52b6e6: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": f51bfcad6434: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 82f817917324: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2135b08953fc: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": c517dfd78e20: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 2bd3d71b6830: Pull complete
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Digest: sha256:6069d2f25bfc52bce86ab33b5d171160d7a105316fce3283956f931c25d8dd32
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> 7d8844ab3099
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Step 2/5 : RUN apt-get update && apt-get install -y make autoconf automake libtool cmake pkg-config wget libsodium-dev libgtest-dev
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> Running in 9b6e5fbe41b3
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [128 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Fetched 128 kB in 1s (138 kB/s)
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Reading package lists...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Reading package lists...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Building dependency tree...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Reading state information...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": make is already the newest version (4.2.1-1.2).
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": make set to manually installed.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": wget is already the newest version (1.20.3-1ubuntu2.1).
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": The following additional packages will be installed:
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   cmake-data file googletest libarchive13 libglib2.0-0 libglib2.0-data
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   libicu66 libjsoncpp1 libltdl-dev libltdl7 libmagic-mgc libmagic1 librhash0
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   libsodium23 libuv1 libxml2 shared-mime-info xdg-user-dirs
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Suggested packages:
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   autoconf-archive gnu-standards autoconf-doc gettext cmake-doc ninja-build
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   lrzip libtool-doc gfortran | fortran95-compiler gcj-jdk
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": The following NEW packages will be installed:
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   autoconf automake cmake cmake-data file googletest libarchive13 libglib2.0-0
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   libglib2.0-data libgtest-dev libicu66 libjsoncpp1 libltdl-dev libltdl7
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   libmagic-mgc libmagic1 librhash0 libsodium-dev libsodium23 libtool libuv1
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":   libxml2 pkg-config shared-mime-info xdg-user-dirs
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": 0 upgraded, 25 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Need to get 20.9 MB of archives.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": After this operation, 108 MB of additional disk space will be used.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic-mgc amd64 1:5.38-4 [218 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic1 amd64 1:5.38-4 [75.9 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 file amd64 1:5.38-4 [23.3 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-0 amd64 2.64.6-1~ubuntu20.04.9 [1290 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-data all 2.64.6-1~ubuntu20.04.9 [5836 B]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libicu66 amd64 66.1-2ubuntu2.1 [8515 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libsodium23 amd64 1.0.18-1 [150 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libxml2 amd64 2.9.10+dfsg-5ubuntu0.20.04.10 [640 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 shared-mime-info amd64 1.15-1 [430 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 xdg-user-dirs amd64 0.17-2ubuntu1 [48.3 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.5 [80.9 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake-data all 3.16.3-1ubuntu1.20.04.1 [1613 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.5 [327 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:16 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:17 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake amd64 3.16.3-1ubuntu1.20.04.1 [3668 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:19 http://archive.ubuntu.com/ubuntu focal/universe amd64 googletest all 1.10.0-2 [623 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:20 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgtest-dev amd64 1.10.0-2 [1583 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:21 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:22 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:23 http://archive.ubuntu.com/ubuntu focal/main amd64 libsodium-dev amd64 1.0.18-1 [169 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:24 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Get:25 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": [91mdebconf: delaying package configuration, since apt-utils is not installed
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": [0mFetched 20.9 MB in 2s (10.8 MB/s)
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libmagic-mgc.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17483 files and directories currently installed.)
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../00-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libmagic-mgc (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libmagic1:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../01-libmagic1_1%3a5.38-4_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package file.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../02-file_1%3a5.38-4_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking file (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libglib2.0-0:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../03-libglib2.0-0_2.64.6-1~ubuntu20.04.9_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libglib2.0-data.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../04-libglib2.0-data_2.64.6-1~ubuntu20.04.9_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libicu66:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../05-libicu66_66.1-2ubuntu2.1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libsodium23:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../06-libsodium23_1.0.18-1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libsodium23:amd64 (1.0.18-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libxml2:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../07-libxml2_2.9.10+dfsg-5ubuntu0.20.04.10_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package shared-mime-info.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../08-shared-mime-info_1.15-1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking shared-mime-info (1.15-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package xdg-user-dirs.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../09-xdg-user-dirs_0.17-2ubuntu1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libuv1:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../10-libuv1_1.34.2-1ubuntu1.5_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package autoconf.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../11-autoconf_2.69-11.1_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking autoconf (2.69-11.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package automake.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../12-automake_1%3a1.16.1-4ubuntu6_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package cmake-data.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../13-cmake-data_3.16.3-1ubuntu1.20.04.1_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libarchive13:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../14-libarchive13_3.4.0-2ubuntu1.5_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libjsoncpp1:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../15-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package librhash0:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../16-librhash0_1.3.9-1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package cmake.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../17-cmake_3.16.3-1ubuntu1.20.04.1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package googletest.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../18-googletest_1.10.0-2_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking googletest (1.10.0-2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libgtest-dev:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../19-libgtest-dev_1.10.0-2_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libgtest-dev:amd64 (1.10.0-2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libltdl7:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../20-libltdl7_2.4.6-14_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libltdl-dev:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../21-libltdl-dev_2.4.6-14_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libsodium-dev:amd64.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../22-libsodium-dev_1.0.18-1_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libsodium-dev:amd64 (1.0.18-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package libtool.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../23-libtool_2.4.6-14_all.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking libtool (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Selecting previously unselected package pkg-config.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Preparing to unpack .../24-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Unpacking pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libsodium23:amd64 (1.0.18-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libmagic-mgc (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": No schema files found: doing nothing.
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up file (1:5.38-4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up googletest (1.10.0-2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libsodium-dev:amd64 (1.0.18-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up autoconf (2.69-11.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libgtest-dev:amd64 (1.10.0-2) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libtool (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up shared-mime-info (1.15-1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Setting up cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Processing triggers for libc-bin (2.31-0ubuntu9.18) ...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Removing intermediate container 9b6e5fbe41b3
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> 9942594cef93
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Step 3/5 : RUN git clone --depth 1 https://github.com/BehaviorTree/BehaviorTree.CPP.git behaviortreecpp
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> Running in bd227fc59c91
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": [91mCloning into 'behaviortreecpp'...
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": [0mRemoving intermediate container bd227fc59c91
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> 18c1dc74890a
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Step 4/5 : WORKDIR behaviortreecpp
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> Running in 8fbf5974b537
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Removing intermediate container 8fbf5974b537
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> 96d2f5ffa01b
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Step 5/5 : COPY build.sh $SRC/
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4":  ---> 59034f96411e
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Successfully built 59034f96411e
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Successfully tagged gcr.io/oss-fuzz/behaviortreecpp:latest
Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/behaviortreecpp:latest
Finished Step #1 - "build-c43ee60b-c09c-42fc-8383-c56d23c014c4"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/behaviortreecpp
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/file7Aj0bP
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/behaviortreecpp/.git
Step #2 - "srcmap": + GIT_DIR=/src/behaviortreecpp
Step #2 - "srcmap": + cd /src/behaviortreecpp
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/BehaviorTree/BehaviorTree.CPP.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=d8c16098a49b7fd2718d1916c4d5df74173a859a
Step #2 - "srcmap": + jq_inplace /tmp/file7Aj0bP '."/src/behaviortreecpp" = { type: "git", url: "https://github.com/BehaviorTree/BehaviorTree.CPP.git", rev: "d8c16098a49b7fd2718d1916c4d5df74173a859a" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/fileYHDapb
Step #2 - "srcmap": + cat /tmp/file7Aj0bP
Step #2 - "srcmap": + jq '."/src/behaviortreecpp" = { type: "git", url: "https://github.com/BehaviorTree/BehaviorTree.CPP.git", rev: "d8c16098a49b7fd2718d1916c4d5df74173a859a" }'
Step #2 - "srcmap": + mv /tmp/fileYHDapb /tmp/file7Aj0bP
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/file7Aj0bP
Step #2 - "srcmap": + rm /tmp/file7Aj0bP
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/behaviortreecpp": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/BehaviorTree/BehaviorTree.CPP.git",
Step #2 - "srcmap":     "rev": "d8c16098a49b7fd2718d1916c4d5df74173a859a"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #3 - "compile-afl-address-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #3 - "compile-afl-address-x86_64": + SQLITE_VER=sqlite-autoconf-3480000
Step #3 - "compile-afl-address-x86_64": + wget https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #3 - "compile-afl-address-x86_64": --2025-10-06 06:21:06--  https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #3 - "compile-afl-address-x86_64": Resolving www.sqlite.org (www.sqlite.org)... 194.195.208.62, 2600:3c02::f03c:95ff:fe07:695
Step #3 - "compile-afl-address-x86_64": Connecting to www.sqlite.org (www.sqlite.org)|194.195.208.62|:443... connected.
Step #3 - "compile-afl-address-x86_64": HTTP request sent, awaiting response... 200 OK
Step #3 - "compile-afl-address-x86_64": Length: 3337615 (3.2M) [application/x-gzip]
Step #3 - "compile-afl-address-x86_64": Saving to: 'sqlite-autoconf-3480000.tar.gz'
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":           sqlite-au   0%[                    ]       0  --.-KB/s                        sqlite-aut  99%[==================> ]   3.18M  15.7MB/s               sqlite-autoconf-348 100%[===================>]   3.18M  15.8MB/s    in 0.2s    
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": 2025-10-06 06:21:07 (15.8 MB/s) - 'sqlite-autoconf-3480000.tar.gz' saved [3337615/3337615]
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": + tar xzf sqlite-autoconf-3480000.tar.gz
Step #3 - "compile-afl-address-x86_64": + cd sqlite-autoconf-3480000
Step #3 - "compile-afl-address-x86_64": + ./configure --enable-static --disable-shared
Step #3 - "compile-afl-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #3 - "compile-afl-address-x86_64": checking whether build environment is sane... yes
Step #3 - "compile-afl-address-x86_64": checking for a race-free mkdir -p... /usr/bin/mkdir -p
Step #3 - "compile-afl-address-x86_64": checking for gawk... no
Step #3 - "compile-afl-address-x86_64": checking for mawk... mawk
Step #3 - "compile-afl-address-x86_64": checking whether make sets $(MAKE)... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #3 - "compile-afl-address-x86_64": checking for gcc... /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether the C compiler works... yes
Step #3 - "compile-afl-address-x86_64": checking for C compiler default output file name... a.out
Step #3 - "compile-afl-address-x86_64": checking for suffix of executables... 
Step #3 - "compile-afl-address-x86_64": checking whether we are cross compiling... no
Step #3 - "compile-afl-address-x86_64": checking for suffix of object files... o
Step #3 - "compile-afl-address-x86_64": checking whether the compiler supports GNU C... yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to enable C11 features... none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... gcc3
Step #3 - "compile-afl-address-x86_64": checking for special C compiler options needed for large files... no
Step #3 - "compile-afl-address-x86_64": checking for _FILE_OFFSET_BITS value needed for large files... no
Step #3 - "compile-afl-address-x86_64": checking for gcc... (cached) /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether the compiler supports GNU C... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to enable C11 features... (cached) none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... (cached) gcc3
Step #3 - "compile-afl-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking how to print strings... printf
Step #3 - "compile-afl-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #3 - "compile-afl-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #3 - "compile-afl-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #3 - "compile-afl-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast... /usr/bin/ld
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #3 - "compile-afl-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #3 - "compile-afl-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #3 - "compile-afl-address-x86_64": checking whether ln -s works... yes
Step #3 - "compile-afl-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #3 - "compile-afl-address-x86_64": checking for file... file
Step #3 - "compile-afl-address-x86_64": checking for objdump... objdump
Step #3 - "compile-afl-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #3 - "compile-afl-address-x86_64": checking for dlltool... no
Step #3 - "compile-afl-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #3 - "compile-afl-address-x86_64": checking for ar... ar
Step #3 - "compile-afl-address-x86_64": checking for archiver @FILE support... @
Step #3 - "compile-afl-address-x86_64": checking for strip... strip
Step #3 - "compile-afl-address-x86_64": checking for ranlib... ranlib
Step #3 - "compile-afl-address-x86_64": checking command to parse /usr/bin/nm -B output from /src/aflplusplus/afl-clang-fast object... ok
Step #3 - "compile-afl-address-x86_64": checking for sysroot... no
Step #3 - "compile-afl-address-x86_64": checking for a working dd... /usr/bin/dd
Step #3 - "compile-afl-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #3 - "compile-afl-address-x86_64": checking for mt... no
Step #3 - "compile-afl-address-x86_64": checking if : is a manifest tool... no
Step #3 - "compile-afl-address-x86_64": checking for stdio.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdlib.h... yes
Step #3 - "compile-afl-address-x86_64": checking for string.h... yes
Step #3 - "compile-afl-address-x86_64": checking for inttypes.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdint.h... yes
Step #3 - "compile-afl-address-x86_64": checking for strings.h... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/stat.h... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/types.h... yes
Step #3 - "compile-afl-address-x86_64": checking for unistd.h... yes
Step #3 - "compile-afl-address-x86_64": checking for dlfcn.h... yes
Step #3 - "compile-afl-address-x86_64": checking for objdir... .libs
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -fno-rtti -fno-exceptions... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to produce PIC... -fPIC -DPIC
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast PIC flag -fPIC -DPIC works... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast static flag -static works... no
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #3 - "compile-afl-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #3 - "compile-afl-address-x86_64": checking whether stripping libraries is possible... yes
Step #3 - "compile-afl-address-x86_64": checking if libtool supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking whether to build shared libraries... no
Step #3 - "compile-afl-address-x86_64": checking whether to build static libraries... yes
Step #3 - "compile-afl-address-x86_64": checking for fdatasync... yes
Step #3 - "compile-afl-address-x86_64": checking for usleep... yes
Step #3 - "compile-afl-address-x86_64": checking for fullfsync... no
Step #3 - "compile-afl-address-x86_64": checking for localtime_r... yes
Step #3 - "compile-afl-address-x86_64": checking for gmtime_r... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast options needed to detect all undeclared functions... -fno-builtin
Step #3 - "compile-afl-address-x86_64": checking whether strerror_r is declared... yes
Step #3 - "compile-afl-address-x86_64": checking whether strerror_r returns char *... no
Step #3 - "compile-afl-address-x86_64": checking for editline/readline.h... no
Step #3 - "compile-afl-address-x86_64": checking for readline/readline.h... no
Step #3 - "compile-afl-address-x86_64": checking for library containing pthread_create... none required
Step #3 - "compile-afl-address-x86_64": checking for library containing pthread_mutexattr_init... none required
Step #3 - "compile-afl-address-x86_64": checking for library containing dlopen... none required
Step #3 - "compile-afl-address-x86_64": checking for whether to support dynamic extensions... yes
Step #3 - "compile-afl-address-x86_64": checking SQL math functions... enabled
Step #3 - "compile-afl-address-x86_64": checking for library containing ceil... none required
Step #3 - "compile-afl-address-x86_64": checking FTS4 extension... enabled
Step #3 - "compile-afl-address-x86_64": checking FTS3 extension... disabled
Step #3 - "compile-afl-address-x86_64": checking FTS5 extension... enabled
Step #3 - "compile-afl-address-x86_64": checking for library containing log... none required
Step #3 - "compile-afl-address-x86_64": checking RTREE extension... enabled
Step #3 - "compile-afl-address-x86_64": checking Session extension... disabled
Step #3 - "compile-afl-address-x86_64": checking Build type... release
Step #3 - "compile-afl-address-x86_64": checking for posix_fallocate... yes
Step #3 - "compile-afl-address-x86_64": checking for zlib.h... no
Step #3 - "compile-afl-address-x86_64": checking for library containing system... none required
Step #3 - "compile-afl-address-x86_64": checking that generated files are newer than configure... done
Step #3 - "compile-afl-address-x86_64": configure: creating ./config.status
Step #3 - "compile-afl-address-x86_64": config.status: creating Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating sqlite3.pc
Step #3 - "compile-afl-address-x86_64": config.status: executing depfiles commands
Step #3 - "compile-afl-address-x86_64": config.status: executing libtool commands
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": /src/aflplusplus/afl-clang-fast -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT sqlite3-shell.o -MD -MP -MF .deps/sqlite3-shell.Tpo -c -o sqlite3-shell.o `test -f 'shell.c' || echo './'`shell.c
Step #3 - "compile-afl-address-x86_64": /src/aflplusplus/afl-clang-fast -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT sqlite3-sqlite3.o -MD -MP -MF .deps/sqlite3-sqlite3.Tpo -c -o sqlite3-sqlite3.o `test -f 'sqlite3.c' || echo './'`sqlite3.c
Step #3 - "compile-afl-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=compile /src/aflplusplus/afl-clang-fast -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c -o sqlite3.lo sqlite3.c
Step #3 - "compile-afl-address-x86_64": libtool: compile:  /src/aflplusplus/afl-clang-fast -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" "-DPACKAGE_STRING=\"sqlite 3.48.0\"" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I. -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c sqlite3.c -o sqlite3.o
Step #3 - "compile-afl-address-x86_64": mv -f .deps/sqlite3-shell.Tpo .deps/sqlite3-shell.Po
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": mv -f .deps/sqlite3.Tpo .deps/sqlite3.Plo
Step #3 - "compile-afl-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link /src/aflplusplus/afl-clang-fast -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -no-undefined -version-info 8:6:8  -o libsqlite3.la -rpath /usr/local/lib sqlite3.lo  
Step #3 - "compile-afl-address-x86_64": libtool: link: ar cr .libs/libsqlite3.a  sqlite3.o
Step #3 - "compile-afl-address-x86_64": libtool: link: ranlib .libs/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": libtool: link: ( cd ".libs" && rm -f "libsqlite3.la" && ln -s "../libsqlite3.la" "libsqlite3.la" )
Step #3 - "compile-afl-address-x86_64": mv -f .deps/sqlite3-sqlite3.Tpo .deps/sqlite3-sqlite3.Po
Step #3 - "compile-afl-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link /src/aflplusplus/afl-clang-fast -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope    -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o  
Step #3 - "compile-afl-address-x86_64": libtool: link: /src/aflplusplus/afl-clang-fast -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o 
Step #3 - "compile-afl-address-x86_64": + make install
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/usr/local/lib'
Step #3 - "compile-afl-address-x86_64":  /bin/bash ./libtool   --mode=install /usr/bin/install -c   libsqlite3.la '/usr/local/lib'
Step #3 - "compile-afl-address-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.lai /usr/local/lib/libsqlite3.la
Step #3 - "compile-afl-address-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.a /usr/local/lib/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": libtool: install: chmod 644 /usr/local/lib/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": libtool: install: ranlib /usr/local/lib/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /usr/local/lib
Step #3 - "compile-afl-address-x86_64": ----------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": Libraries have been installed in:
Step #3 - "compile-afl-address-x86_64":    /usr/local/lib
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": If you ever happen to want to link against installed libraries
Step #3 - "compile-afl-address-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #3 - "compile-afl-address-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #3 - "compile-afl-address-x86_64": flag during linking and do at least one of the following:
Step #3 - "compile-afl-address-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #3 - "compile-afl-address-x86_64":      during execution
Step #3 - "compile-afl-address-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #3 - "compile-afl-address-x86_64":      during linking
Step #3 - "compile-afl-address-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #3 - "compile-afl-address-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": See any operating system documentation about shared libraries for
Step #3 - "compile-afl-address-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #3 - "compile-afl-address-x86_64": ----------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/usr/local/bin'
Step #3 - "compile-afl-address-x86_64":   /bin/bash ./libtool   --mode=install /usr/bin/install -c sqlite3 '/usr/local/bin'
Step #3 - "compile-afl-address-x86_64": libtool: install: /usr/bin/install -c sqlite3 /usr/local/bin/sqlite3
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/usr/local/include'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.h sqlite3ext.h '/usr/local/include'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/usr/local/share/man/man1'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.1 '/usr/local/share/man/man1'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/usr/local/lib/pkgconfig'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.pc '/usr/local/lib/pkgconfig'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #3 - "compile-afl-address-x86_64": + cd ..
Step #3 - "compile-afl-address-x86_64": + git clone https://github.com/zeromq/libzmq.git
Step #3 - "compile-afl-address-x86_64": Cloning into 'libzmq'...
Step #3 - "compile-afl-address-x86_64": remote: Enumerating objects: 48514, done.[K
Step #3 - "compile-afl-address-x86_64": remote: Counting objects:   2% (1/44)[Kremote: Counting objects:   4% (2/44)[Kremote: Counting objects:   6% (3/44)[Kremote: Counting objects:   9% (4/44)[Kremote: Counting objects:  11% (5/44)[Kremote: Counting objects:  13% (6/44)[Kremote: Counting objects:  15% (7/44)[Kremote: Counting objects:  18% (8/44)[Kremote: Counting objects:  20% (9/44)[Kremote: Counting objects:  22% (10/44)[Kremote: Counting objects:  25% (11/44)[Kremote: Counting objects:  27% (12/44)[Kremote: Counting objects:  29% (13/44)[Kremote: Counting objects:  31% (14/44)[Kremote: Counting objects:  34% (15/44)[Kremote: Counting objects:  36% (16/44)[Kremote: Counting objects:  38% (17/44)[Kremote: Counting objects:  40% (18/44)[Kremote: Counting objects:  43% (19/44)[Kremote: Counting objects:  45% (20/44)[Kremote: Counting objects:  47% (21/44)[Kremote: Counting objects:  50% (22/44)[Kremote: Counting objects:  52% (23/44)[Kremote: Counting objects:  54% (24/44)[Kremote: Counting objects:  56% (25/44)[Kremote: Counting objects:  59% (26/44)[Kremote: Counting objects:  61% (27/44)[Kremote: Counting objects:  63% (28/44)[Kremote: Counting objects:  65% (29/44)[Kremote: Counting objects:  68% (30/44)[Kremote: Counting objects:  70% (31/44)[Kremote: Counting objects:  72% (32/44)[Kremote: Counting objects:  75% (33/44)[Kremote: Counting objects:  77% (34/44)[Kremote: Counting objects:  79% (35/44)[Kremote: Counting objects:  81% (36/44)[Kremote: Counting objects:  84% (37/44)[Kremote: Counting objects:  86% (38/44)[Kremote: Counting objects:  88% (39/44)[Kremote: Counting objects:  90% (40/44)[Kremote: Counting objects:  93% (41/44)[Kremote: Counting objects:  95% (42/44)[Kremote: Counting objects:  97% (43/44)[Kremote: Counting objects: 100% (44/44)[Kremote: Counting objects: 100% (44/44), done.[K
Step #3 - "compile-afl-address-x86_64": remote: Compressing objects:   2% (1/36)[Kremote: Compressing objects:   5% (2/36)[Kremote: Compressing objects:   8% (3/36)[Kremote: Compressing objects:  11% (4/36)[Kremote: Compressing objects:  13% (5/36)[Kremote: Compressing objects:  16% (6/36)[Kremote: Compressing objects:  19% (7/36)[Kremote: Compressing objects:  22% (8/36)[Kremote: Compressing objects:  25% (9/36)[Kremote: Compressing objects:  27% (10/36)[Kremote: Compressing objects:  30% (11/36)[Kremote: Compressing objects:  33% (12/36)[Kremote: Compressing objects:  36% (13/36)[Kremote: Compressing objects:  38% (14/36)[Kremote: Compressing objects:  41% (15/36)[Kremote: Compressing objects:  44% (16/36)[Kremote: Compressing objects:  47% (17/36)[Kremote: Compressing objects:  50% (18/36)[Kremote: Compressing objects:  52% (19/36)[Kremote: Compressing objects:  55% (20/36)[Kremote: Compressing objects:  58% (21/36)[Kremote: Compressing objects:  61% (22/36)[Kremote: Compressing objects:  63% (23/36)[Kremote: Compressing objects:  66% (24/36)[Kremote: Compressing objects:  69% (25/36)[Kremote: Compressing objects:  72% (26/36)[Kremote: Compressing objects:  75% (27/36)[Kremote: Compressing objects:  77% (28/36)[Kremote: Compressing objects:  80% (29/36)[Kremote: Compressing objects:  83% (30/36)[Kremote: Compressing objects:  86% (31/36)[Kremote: Compressing objects:  88% (32/36)[Kremote: Compressing objects:  91% (33/36)[Kremote: Compressing objects:  94% (34/36)[Kremote: Compressing objects:  97% (35/36)[Kremote: Compressing objects: 100% (36/36)[Kremote: Compressing objects: 100% (36/36), done.[K
Step #3 - "compile-afl-address-x86_64": Receiving objects:   0% (1/48514)Receiving objects:   1% (486/48514)Receiving objects:   2% (971/48514)Receiving objects:   3% (1456/48514)Receiving objects:   4% (1941/48514)Receiving objects:   5% (2426/48514)Receiving objects:   6% (2911/48514)Receiving objects:   7% (3396/48514)Receiving objects:   8% (3882/48514)Receiving objects:   9% (4367/48514)Receiving objects:  10% (4852/48514)Receiving objects:  11% (5337/48514)Receiving objects:  12% (5822/48514)Receiving objects:  13% (6307/48514)Receiving objects:  14% (6792/48514)Receiving objects:  15% (7278/48514)Receiving objects:  16% (7763/48514)Receiving objects:  17% (8248/48514)Receiving objects:  18% (8733/48514)Receiving objects:  19% (9218/48514)Receiving objects:  20% (9703/48514)Receiving objects:  21% (10188/48514)Receiving objects:  22% (10674/48514)Receiving objects:  23% (11159/48514)Receiving objects:  24% (11644/48514)Receiving objects:  25% (12129/48514)Receiving objects:  26% (12614/48514)Receiving objects:  27% (13099/48514)Receiving objects:  28% (13584/48514)Receiving objects:  29% (14070/48514)Receiving objects:  30% (14555/48514)Receiving objects:  31% (15040/48514)Receiving objects:  32% (15525/48514)Receiving objects:  33% (16010/48514)Receiving objects:  34% (16495/48514)Receiving objects:  35% (16980/48514)Receiving objects:  36% (17466/48514)Receiving objects:  37% (17951/48514)Receiving objects:  38% (18436/48514)Receiving objects:  39% (18921/48514)Receiving objects:  40% (19406/48514)Receiving objects:  41% (19891/48514)Receiving objects:  42% (20376/48514)Receiving objects:  43% (20862/48514)Receiving objects:  44% (21347/48514)Receiving objects:  45% (21832/48514)Receiving objects:  46% (22317/48514)Receiving objects:  47% (22802/48514)Receiving objects:  48% (23287/48514)Receiving objects:  49% (23772/48514)Receiving objects:  50% (24257/48514)Receiving objects:  51% (24743/48514)Receiving objects:  52% (25228/48514)Receiving objects:  53% (25713/48514)Receiving objects:  54% (26198/48514)Receiving objects:  55% (26683/48514)Receiving objects:  56% (27168/48514)Receiving objects:  57% (27653/48514)Receiving objects:  58% (28139/48514)Receiving objects:  59% (28624/48514)Receiving objects:  60% (29109/48514)Receiving objects:  61% (29594/48514)Receiving objects:  62% (30079/48514)Receiving objects:  63% (30564/48514)Receiving objects:  64% (31049/48514)Receiving objects:  65% (31535/48514)Receiving objects:  66% (32020/48514)Receiving objects:  67% (32505/48514)Receiving objects:  68% (32990/48514)Receiving objects:  69% (33475/48514)Receiving objects:  70% (33960/48514)Receiving objects:  71% (34445/48514)Receiving objects:  72% (34931/48514)Receiving objects:  73% (35416/48514)Receiving objects:  74% (35901/48514)Receiving objects:  75% (36386/48514)Receiving objects:  76% (36871/48514)Receiving objects:  77% (37356/48514)Receiving objects:  78% (37841/48514)Receiving objects:  79% (38327/48514)Receiving objects:  80% (38812/48514)Receiving objects:  81% (39297/48514)Receiving objects:  82% (39782/48514)Receiving objects:  83% (40267/48514)Receiving objects:  84% (40752/48514)Receiving objects:  85% (41237/48514)Receiving objects:  86% (41723/48514)Receiving objects:  87% (42208/48514)Receiving objects:  88% (42693/48514)Receiving objects:  89% (43178/48514)Receiving objects:  90% (43663/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  91% (44148/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  92% (44633/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  93% (45119/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  94% (45604/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  95% (46089/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  96% (46574/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  97% (47059/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  98% (47544/48514), 19.35 MiB | 38.69 MiB/sReceiving objects:  99% (48029/48514), 19.35 MiB | 38.69 MiB/sremote: Total 48514 (delta 18), reused 8 (delta 8), pack-reused 48470 (from 2)[K
Step #3 - "compile-afl-address-x86_64": Receiving objects: 100% (48514/48514), 19.35 MiB | 38.69 MiB/sReceiving objects: 100% (48514/48514), 23.52 MiB | 38.97 MiB/s, done.
Step #3 - "compile-afl-address-x86_64": Resolving deltas:   0% (0/35150)Resolving deltas:   1% (366/35150)Resolving deltas:   2% (715/35150)Resolving deltas:   3% (1062/35150)Resolving deltas:   4% (1501/35150)Resolving deltas:   5% (1758/35150)Resolving deltas:   6% (2137/35150)Resolving deltas:   7% (2462/35150)Resolving deltas:   8% (2822/35150)Resolving deltas:   9% (3191/35150)Resolving deltas:  10% (3520/35150)Resolving deltas:  11% (3876/35150)Resolving deltas:  12% (4228/35150)Resolving deltas:  13% (4577/35150)Resolving deltas:  14% (4939/35150)Resolving deltas:  15% (5279/35150)Resolving deltas:  16% (5629/35150)Resolving deltas:  17% (5990/35150)Resolving deltas:  18% (6343/35150)Resolving deltas:  19% (6734/35150)Resolving deltas:  20% (7130/35150)Resolving deltas:  21% (7402/35150)Resolving deltas:  22% (7784/35150)Resolving deltas:  23% (8085/35150)Resolving deltas:  24% (8482/35150)Resolving deltas:  25% (8883/35150)Resolving deltas:  26% (9162/35150)Resolving deltas:  27% (9498/35150)Resolving deltas:  28% (9891/35150)Resolving deltas:  29% (10198/35150)Resolving deltas:  30% (10644/35150)Resolving deltas:  31% (11018/35150)Resolving deltas:  32% (11359/35150)Resolving deltas:  33% (11618/35150)Resolving deltas:  34% (11999/35150)Resolving deltas:  35% (12479/35150)Resolving deltas:  36% (12678/35150)Resolving deltas:  37% (13028/35150)Resolving deltas:  38% (13436/35150)Resolving deltas:  39% (13721/35150)Resolving deltas:  40% (14069/35150)Resolving deltas:  41% (14579/35150)Resolving deltas:  42% (14779/35150)Resolving deltas:  43% (15130/35150)Resolving deltas:  44% (15476/35150)Resolving deltas:  45% (15839/35150)Resolving deltas:  46% (16222/35150)Resolving deltas:  47% (16531/35150)Resolving deltas:  48% (16924/35150)Resolving deltas:  49% (17269/35150)Resolving deltas:  50% (17625/35150)Resolving deltas:  51% (17944/35150)Resolving deltas:  52% (18304/35150)Resolving deltas:  53% (18641/35150)Resolving deltas:  54% (19075/35150)Resolving deltas:  55% (19340/35150)Resolving deltas:  56% (19718/35150)Resolving deltas:  57% (20142/35150)Resolving deltas:  58% (20394/35150)Resolving deltas:  59% (20882/35150)Resolving deltas:  60% (21116/35150)Resolving deltas:  62% (21913/35150)Resolving deltas:  63% (22147/35150)Resolving deltas:  64% (22509/35150)Resolving deltas:  65% (22860/35150)Resolving deltas:  66% (23207/35150)Resolving deltas:  68% (23928/35150)Resolving deltas:  69% (24254/35150)Resolving deltas:  70% (24607/35150)Resolving deltas:  71% (24978/35150)Resolving deltas:  72% (25309/35150)Resolving deltas:  73% (25674/35150)Resolving deltas:  74% (26011/35150)Resolving deltas:  75% (26368/35150)Resolving deltas:  76% (26752/35150)Resolving deltas:  77% (27068/35150)Resolving deltas:  78% (27436/35150)Resolving deltas:  79% (27869/35150)Resolving deltas:  80% (28131/35150)Resolving deltas:  81% (28473/35150)Resolving deltas:  82% (28857/35150)Resolving deltas:  83% (29177/35150)Resolving deltas:  84% (29563/35150)Resolving deltas:  85% (29911/35150)Resolving deltas:  86% (30240/35150)Resolving deltas:  87% (30603/35150)Resolving deltas:  88% (30966/35150)Resolving deltas:  89% (31346/35150)Resolving deltas:  90% (31647/35150)Resolving deltas:  91% (31993/35150)Resolving deltas:  92% (32347/35150)Resolving deltas:  93% (32713/35150)Resolving deltas:  94% (33077/35150)Resolving deltas:  95% (33414/35150)Resolving deltas:  96% (33755/35150)Resolving deltas:  97% (34109/35150)Resolving deltas:  98% (34451/35150)Resolving deltas:  99% (34800/35150)Resolving deltas: 100% (35150/35150)Resolving deltas: 100% (35150/35150), done.
Step #3 - "compile-afl-address-x86_64": + cd libzmq
Step #3 - "compile-afl-address-x86_64": + mkdir build
Step #3 - "compile-afl-address-x86_64": + cd build
Step #3 - "compile-afl-address-x86_64": + cmake .. -DBUILD_SHARED=OFF -DBUILD_STATIC=ON -DZMQ_BUILD_TESTS=OFF
Step #3 - "compile-afl-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working C compiler: /src/aflplusplus/afl-clang-fast - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working CXX compiler: /src/aflplusplus/afl-clang-fast++ - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #3 - "compile-afl-address-x86_64": -- Found Threads: TRUE
Step #3 - "compile-afl-address-x86_64": -- Detected ZMQ Version - 4.3.6
Step #3 - "compile-afl-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #3 - "compile-afl-address-x86_64": -- Performing Test COMPILER_SUPPORTS_C11
Step #3 - "compile-afl-address-x86_64": -- Performing Test COMPILER_SUPPORTS_C11 - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING
Step #3 - "compile-afl-address-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test CC_HAS_TAUT_WARNING
Step #3 - "compile-afl-address-x86_64": -- Performing Test CC_HAS_TAUT_WARNING - Success
Step #3 - "compile-afl-address-x86_64": -- Building draft classes and methods
Step #3 - "compile-afl-address-x86_64": -- Using radix tree implementation to manage subscriptions
Step #3 - "compile-afl-address-x86_64": -- Enable WebSocket transport
Step #3 - "compile-afl-address-x86_64": -- Could NOT find GnuTLS (missing: GNUTLS_LIBRARY GNUTLS_INCLUDE_DIR) (Required is at least version "3.6.7")
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning at CMakeLists.txt:215 (message):
Step #3 - "compile-afl-address-x86_64":   No WSS support, you may want to install GnuTLS and run cmake again
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Using builtin sha1
Step #3 - "compile-afl-address-x86_64": -- Checking for module 'libbsd'
Step #3 - "compile-afl-address-x86_64": --   No package 'libbsd' found
Step #3 - "compile-afl-address-x86_64": -- Looking for strlcpy
Step #3 - "compile-afl-address-x86_64": -- Looking for strlcpy - not found
Step #3 - "compile-afl-address-x86_64": -- CURVE security is disabled
Step #3 - "compile-afl-address-x86_64": -- Looking for kqueue
Step #3 - "compile-afl-address-x86_64": -- Looking for kqueue - not found
Step #3 - "compile-afl-address-x86_64": -- Looking for epoll_create
Step #3 - "compile-afl-address-x86_64": -- Looking for epoll_create - found
Step #3 - "compile-afl-address-x86_64": -- Looking for epoll_create1
Step #3 - "compile-afl-address-x86_64": -- Looking for epoll_create1 - found
Step #3 - "compile-afl-address-x86_64": -- Using polling method in I/O threads: epoll
Step #3 - "compile-afl-address-x86_64": -- Using polling method in zmq_poll(er)_* API: poll
Step #3 - "compile-afl-address-x86_64": -- Looking for pselect
Step #3 - "compile-afl-address-x86_64": -- Looking for pselect - found
Step #3 - "compile-afl-address-x86_64": -- Using 64 bytes alignment for lock-free data structures
Step #3 - "compile-afl-address-x86_64": -- Looking for posix_memalign
Step #3 - "compile-afl-address-x86_64": -- Looking for posix_memalign - found
Step #3 - "compile-afl-address-x86_64": -- Looking for include file windows.h
Step #3 - "compile-afl-address-x86_64": -- Looking for include file windows.h - not found
Step #3 - "compile-afl-address-x86_64": -- Looking for include file condition_variable
Step #3 - "compile-afl-address-x86_64": -- Looking for include file condition_variable - found
Step #3 - "compile-afl-address-x86_64": -- Using condition_variable_t implementation: stl11
Step #3 - "compile-afl-address-x86_64": -- Looking for include file ifaddrs.h
Step #3 - "compile-afl-address-x86_64": -- Looking for include file ifaddrs.h - found
Step #3 - "compile-afl-address-x86_64": -- Looking for include file sys/uio.h
Step #3 - "compile-afl-address-x86_64": -- Looking for include file sys/uio.h - found
Step #3 - "compile-afl-address-x86_64": -- Looking for include file sys/eventfd.h
Step #3 - "compile-afl-address-x86_64": -- Looking for include file sys/eventfd.h - found
Step #3 - "compile-afl-address-x86_64": -- Checking whether EFD_CLOEXEC is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC - Success
Step #3 - "compile-afl-address-x86_64": -- Looking for if_nametoindex
Step #3 - "compile-afl-address-x86_64": -- Looking for if_nametoindex - found
Step #3 - "compile-afl-address-x86_64": -- Looking for SO_PEERCRED
Step #3 - "compile-afl-address-x86_64": -- Looking for SO_PEERCRED - found
Step #3 - "compile-afl-address-x86_64": -- Looking for LOCAL_PEERCRED
Step #3 - "compile-afl-address-x86_64": -- Looking for LOCAL_PEERCRED - not found
Step #3 - "compile-afl-address-x86_64": -- Looking for SO_BUSY_POLL
Step #3 - "compile-afl-address-x86_64": -- Looking for SO_BUSY_POLL - found
Step #3 - "compile-afl-address-x86_64": -- Looking for clock_gettime
Step #3 - "compile-afl-address-x86_64": -- Looking for clock_gettime - found
Step #3 - "compile-afl-address-x86_64": -- Looking for fork
Step #3 - "compile-afl-address-x86_64": -- Looking for fork - found
Step #3 - "compile-afl-address-x86_64": -- Looking for gethrtime
Step #3 - "compile-afl-address-x86_64": -- Looking for gethrtime - not found
Step #3 - "compile-afl-address-x86_64": -- Looking for mkdtemp
Step #3 - "compile-afl-address-x86_64": -- Looking for mkdtemp - found
Step #3 - "compile-afl-address-x86_64": -- Looking for accept4
Step #3 - "compile-afl-address-x86_64": -- Looking for accept4 - found
Step #3 - "compile-afl-address-x86_64": -- Looking for strnlen
Step #3 - "compile-afl-address-x86_64": -- Looking for strnlen - found
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wall
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wall - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wextra
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wextra - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-pedantic
Step #3 - "compile-afl-address-x86_64": -- Performing Test HAVE_FLAG_-pedantic - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether noexcept is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT - Success
Step #3 - "compile-afl-address-x86_64": -- Checking pthread_setname signature
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1 - Failed
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2 - Success
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3 - Failed
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME - Failed
Step #3 - "compile-afl-address-x86_64": -- Checking pthread_setaffinity signature
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether SOCK_CLOEXEC is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether O_CLOEXEC is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether SO_BINDTODEVICE is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether SO_KEEPALIVE is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether SO_PRIORITY is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether TCP_KEEPCNT is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether TCP_KEEPIDLE is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether TCP_KEEPINTVL is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether TCP_KEEPALIVE is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE - Failed
Step #3 - "compile-afl-address-x86_64": -- Checking whether TIPC is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TIPC
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_TIPC - Success
Step #3 - "compile-afl-address-x86_64": -- Checking whether getrandom is supported
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM
Step #3 - "compile-afl-address-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM - Success
Step #3 - "compile-afl-address-x86_64": -- Could NOT find AsciiDoctor (missing: ASCIIDOCTOR_EXECUTABLE) 
Step #3 - "compile-afl-address-x86_64": -- Configuring done (9.9s)
Step #3 - "compile-afl-address-x86_64": -- Generating done (0.0s)
Step #3 - "compile-afl-address-x86_64": -- Build files have been written to: /src/behaviortreecpp/libzmq/build
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_decoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_connecter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_encoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_listener.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_engine.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/objects.dir/src/precompiled.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  8%] [32mBuilding CXX object CMakeFiles/objects.dir/src/address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  8%] [32mBuilding C object CMakeFiles/objects.dir/external/sha1/sha1.c.o[0m
Step #3 - "compile-afl-address-x86_64": [  9%] [32mBuilding CXX object CMakeFiles/objects.dir/src/channel.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/objects.dir/src/client.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/objects.dir/src/clock.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_mechanism_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ctx.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_client.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_server.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dealer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/objects.dir/src/devpoll.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dist.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dgram.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/endpoint.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/epoll.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/objects.dir/src/err.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 21%] [32mBuilding CXX object CMakeFiles/objects.dir/src/fq.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_object.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_thread.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 25%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_connecter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_listener.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/objects.dir/src/kqueue.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/objects.dir/src/lb.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 29%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox_safe.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 31%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/metadata.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/msg.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mtrie.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/objects.dir/src/norm_engine.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/objects.dir/src/object.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 37%] [32mBuilding CXX object CMakeFiles/objects.dir/src/options.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/objects.dir/src/own.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 39%] [32mBuilding CXX object CMakeFiles/objects.dir/src/null_mechanism.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pair.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/peer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_receiver.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_sender.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_socket.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pipe.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_client.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_server.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poll.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poller_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/polling_util.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 49%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pollset.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/objects.dir/src/proxy.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 51%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pub.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pull.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 53%] [32mBuilding CXX object CMakeFiles/objects.dir/src/random.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/objects.dir/src/push.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 55%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_encoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_decoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_engine.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 57%] [32mBuilding CXX object CMakeFiles/objects.dir/src/reaper.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 58%] [32mBuilding CXX object CMakeFiles/objects.dir/src/rep.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 59%] [32mBuilding CXX object CMakeFiles/objects.dir/src/req.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 60%] [32mBuilding CXX object CMakeFiles/objects.dir/src/router.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 61%] [32mBuilding CXX object CMakeFiles/objects.dir/src/select.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/server.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/session_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] [32mBuilding CXX object CMakeFiles/objects.dir/src/signaler.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 64%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 65%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 66%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks_connecter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 67%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 68%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_engine_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/sub.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_connecter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 72%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_listener.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 73%] [32mBuilding CXX object CMakeFiles/objects.dir/src/thread.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 74%] [32mBuilding CXX object CMakeFiles/objects.dir/src/trie.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 75%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radix_tree.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_decoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_encoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 77%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_decoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 78%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_encoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 79%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v3_1_encoder.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 80%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xpub.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xsub.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 82%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq_utils.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/decoder_allocators.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 84%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_poller.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 85%] [32mBuilding CXX object CMakeFiles/objects.dir/src/timers.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 86%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radio.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 87%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dish.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 88%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_engine.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 89%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/scatter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/gather.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 91%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip_resolver.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zap_client.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 93%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmtp_engine.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 94%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_connecter_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 95%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_listener_base.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 96%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_address.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 97%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_connecter.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 98%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_listener.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 98%] Built target objects
Step #3 - "compile-afl-address-x86_64": [100%] [32m[1mLinking CXX static library lib/libzmq.a[0m
Step #3 - "compile-afl-address-x86_64": [100%] Built target libzmq-static
Step #3 - "compile-afl-address-x86_64": + make install
Step #3 - "compile-afl-address-x86_64": [ 98%] Built target objects
Step #3 - "compile-afl-address-x86_64": [100%] Built target libzmq-static
Step #3 - "compile-afl-address-x86_64": [36mInstall the project...[0m
Step #3 - "compile-afl-address-x86_64": -- Install configuration: "Release"
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/pkgconfig/libzmq.pc
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/libzmq.a
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/include/zmq.h
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/include/zmq_utils.h
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/share/zmq/AUTHORS.txt
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/share/zmq/LICENSE.txt
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/share/zmq/NEWS.txt
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets.cmake
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets-release.cmake
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfig.cmake
Step #3 - "compile-afl-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfigVersion.cmake
Step #3 - "compile-afl-address-x86_64": + cd ../..
Step #3 - "compile-afl-address-x86_64": + mkdir build
Step #3 - "compile-afl-address-x86_64": + cd build
Step #3 - "compile-afl-address-x86_64": + CMAKE_FLAGS=("-DCMAKE_BUILD_TYPE=Release" "-DENABLE_FUZZING=ON" "-DFORCE_STATIC_LINKING=ON")
Step #3 - "compile-afl-address-x86_64": + cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_FUZZING=ON -DFORCE_STATIC_LINKING=ON
Step #3 - "compile-afl-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working C compiler: /src/aflplusplus/afl-clang-fast - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working CXX compiler: /src/aflplusplus/afl-clang-fast++ - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-afl-address-x86_64": -- OSS-Fuzz environment detected
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #3 - "compile-afl-address-x86_64": -- Found Threads: TRUE
Step #3 - "compile-afl-address-x86_64": -- ------------------------------------------
Step #3 - "compile-afl-address-x86_64": -- BehaviorTree is being built with conan.
Step #3 - "compile-afl-address-x86_64": -- ------------------------------------------
Step #3 - "compile-afl-address-x86_64": -- Found ZeroMQ: /usr/local/lib/libzmq.a
Step #3 - "compile-afl-address-x86_64": -- ZeroMQ_LIBRARIES: /usr/local/lib/libzmq.a
Step #3 - "compile-afl-address-x86_64": -- Found SQLite3: /usr/local/include (found version "3.48.0")
Step #3 - "compile-afl-address-x86_64": -- SQLite3_LIBRARIES: /usr/local/lib/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": -- BTCPP_EXTRA_LIBRARIES: /usr/local/lib/libzmq.a;/usr/local/lib/libsqlite3.a
Step #3 - "compile-afl-address-x86_64": -- BTCPP_LIB_DESTINATION:   lib 
Step #3 - "compile-afl-address-x86_64": -- BTCPP_INCLUDE_DESTINATION: include 
Step #3 - "compile-afl-address-x86_64": -- BUILD_TESTING:   ON 
Step #3 - "compile-afl-address-x86_64": -- Found GTest: /usr/lib/x86_64-linux-gnu/libgtest.a
Step #3 - "compile-afl-address-x86_64": -- Configuring done (1.4s)
Step #3 - "compile-afl-address-x86_64": -- Generating done (0.0s)
Step #3 - "compile-afl-address-x86_64": -- Build files have been written to: /src/behaviortreecpp/build
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": [  1%] [32mBuilding CXX object CMakeFiles/minitrace.dir/3rdparty/minitrace/minitrace.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  2%] [32mBuilding CXX object 3rdparty/lexy/src/CMakeFiles/lexy_file.dir/input/file.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  3%] [32m[1mLinking CXX static library liblexy_file.a[0m
Step #3 - "compile-afl-address-x86_64": [  3%] Built target lexy_file
Step #3 - "compile-afl-address-x86_64": [  4%] [32m[1mLinking CXX static library libminitrace.a[0m
Step #3 - "compile-afl-address-x86_64": [  4%] Built target minitrace
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/action_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/behavior_tree.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/basic_types.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  8%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/blackboard.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/bt_factory.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorator_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/control_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/condition_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/tree_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/script_parser.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/json_export.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/xml_parsing.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/test_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/updated_action.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/sleep_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/delay_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/inverter_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 25%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/repeat_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/retry_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/subtree_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/timeout_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/updated_decorator.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/fallback_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/if_then_else_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_all_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_sequence.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_with_memory_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_fallback.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/switch_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/while_do_else_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 42%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_cout_logger.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_file_logger_v2.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_minitrace_logger.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_observer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/3rdparty/tinyxml2/tinyxml2.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/groot2_publisher.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_sqlite_logger.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library_UNIX.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:6:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove constructor of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:38: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                     ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                     delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:16: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m               ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove assignment operator of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:49: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_minitrace_logger.cpp:2:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_minitrace_logger.h:3:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_observer.cpp:1:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_cout_logger.cpp:1:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_cout_logger.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove constructor of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                        ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:46: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                             ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                             delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:20: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                   ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove assignment operator of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                        ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:57: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                        ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                        delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_sqlite_logger.cpp:1:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_sqlite_logger.h:4:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0m2 warnings generated.
Step #3 - "compile-afl-address-x86_64": 2 warnings generated.
Step #3 - "compile-afl-address-x86_64": 4 warnings generated.
Step #3 - "compile-afl-address-x86_64": 2 warnings generated.
Step #3 - "compile-afl-address-x86_64": 2 warnings generated.
Step #3 - "compile-afl-address-x86_64": 4 warnings generated.
Step #3 - "compile-afl-address-x86_64": [ 51%] [32m[1mLinking CXX static library libbehaviortree_cpp.a[0m
Step #3 - "compile-afl-address-x86_64": [ 51%] Built target behaviortree_cpp
Step #3 - "compile-afl-address-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/bt_fuzzer.dir/fuzzing/bt_fuzzer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/script_fuzzer.dir/fuzzing/script_fuzzer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/bb_fuzzer.dir/fuzzing/bb_fuzzer.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/crossdoor_nodes.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/dummy_nodes.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 58%] [32mBuilding CXX object sample_nodes/CMakeFiles/crossdoor_nodes_dyn.dir/crossdoor_nodes.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 58%] [32mBuilding CXX object sample_nodes/CMakeFiles/dummy_nodes_dyn.dir/dummy_nodes.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 61%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/movebase_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 61%] [32mBuilding CXX object sample_nodes/CMakeFiles/movebase_node_dyn.dir/movebase_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/fuzzing/script_fuzzer.cpp:57:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":    57 |           env.vars->get([0;32m"result"[0m, read_back);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:96:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":    96 |           bb->get<[0;34mint[0m>(generateKey());[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~ ~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:114:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   114 |             bb->getEntry(existing_key);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:117:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   117 |             bb->get<[0;34mint[0m>(existing_key);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:120:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   120 |             bb->get<[0;34mdouble[0m>(existing_key);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:123:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   123 |             bb->get<std::string>(existing_key);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:79:9: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":    79 |         factory.createTreeFromText(random_xml);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:106:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   106 |           factory.createTreeFromText(xml, blackboard);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:115:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   115 |             factory.createTree(factory.registeredBehaviorTrees().front(), blackboard);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[ 62%] [32m[1mLinking CXX shared library bin/libcrossdoor_nodes_dyn.so[0m
Step #3 - "compile-afl-address-x86_64": 3 warnings generated.
Step #3 - "compile-afl-address-x86_64": [ 63%] [32m[1mLinking CXX executable bt_fuzzer[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] Built target crossdoor_nodes_dyn
Step #3 - "compile-afl-address-x86_64": [ 64%] [32m[1mLinking CXX static library lib/libbt_sample_nodes.a[0m
Step #3 - "compile-afl-address-x86_64": [ 64%] Built target bt_sample_nodes
Step #3 - "compile-afl-address-x86_64": [ 65%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/action_test_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 67%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/condition_test_node.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 67%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_any.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 68%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_blackboard.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_coroutines.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_decorator.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 72%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_enums.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 73%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_factory.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 74%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_fallback.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 75%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_parallel.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_preconditions.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 77%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_ports.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 78%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_postconditions.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 80%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_match.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_json.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 83%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 83%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive_backchaining.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 84%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_skipping.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 85%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_sequence.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 87%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_subtree.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 87%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_substitution.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 88%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_switch.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 90%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_tree.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_wakeup.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_updates.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 93%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_interface.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 94%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/script_parser_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 94%] Built target bt_fuzzer
Step #3 - "compile-afl-address-x86_64": [ 95%] [32m[1mLinking CXX shared library bin/libmovebase_node_dyn.so[0m
Step #3 - "compile-afl-address-x86_64": 1 warning generated.
Step #3 - "compile-afl-address-x86_64": [ 96%] [32m[1mLinking CXX executable script_fuzzer[0m
Step #3 - "compile-afl-address-x86_64": [ 96%] Built target movebase_node_dyn
Step #3 - "compile-afl-address-x86_64": [ 97%] [32m[1mLinking CXX shared library bin/libdummy_nodes_dyn.so[0m
Step #3 - "compile-afl-address-x86_64": [ 97%] Built target script_fuzzer
Step #3 - "compile-afl-address-x86_64": [ 97%] Built target dummy_nodes_dyn
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/tests/gtest_reactive.cpp:4:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/tests/gtest_reactive_backchaining.cpp:2:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0mIn file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:16:
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #3 - "compile-afl-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                   delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                      ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #3 - "compile-afl-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m             ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #3 - "compile-afl-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m           ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #3 - "compile-afl-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m      | [0;32m                                                              delete
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_factory.cpp:109:20: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #3 - "compile-afl-address-x86_64":   109 |   ASSERT_ANY_THROW(factory.createTreeFromText(xml_text));[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/include/gtest/gtest.h:1963:25: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT_ANY_THROW'[0m
Step #3 - "compile-afl-address-x86_64":  1963 |   GTEST_TEST_ANY_THROW_(statement, GTEST_FATAL_FAILURE_)[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                        ^~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1305:54: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_TEST_ANY_THROW_'[0m
Step #3 - "compile-afl-address-x86_64":  1305 |       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                     ^~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1258:44: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_'[0m
Step #3 - "compile-afl-address-x86_64":  1258 |   [0;34mif[0m (::testing::internal::AlwaysTrue()) { statement; }[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                           ^~~~~~~~~
Step #3 - "compile-afl-address-x86_64": [0m2 warnings generated.
Step #3 - "compile-afl-address-x86_64": In file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:14:
Step #3 - "compile-afl-address-x86_64": In file included from /usr/include/gtest/gtest.h:57:
Step #3 - "compile-afl-address-x86_64": In file included from /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/memory:80:
Step #3 - "compile-afl-address-x86_64": [1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/unique_ptr.h:857:34: [0m[0;1;35mwarning: [0m[1m'TestNode' is deprecated: prefer the constructor with std::shared_ptr<TestNodeConfig> [-Wdeprecated-declarations][0m
Step #3 - "compile-afl-address-x86_64":   857 |     { [0;34mreturn[0m unique_ptr<_Tp>([0;34mnew[0m _Tp(std::forward<_Args>(__args)...)); }[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                 ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/tree_node.h:369:19: [0m[0;1;36mnote: [0min instantiation of function template specialization 'std::make_unique<BT::TestNode, const std::basic_string<char> &, const BT::NodeConfig &, BT::TestNodeConfig &>' requested here[0m
Step #3 - "compile-afl-address-x86_64":   369 |       [0;34mreturn[0m std::make_unique<DerivedT>(name, config, args...);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:37:22: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::TreeNode::Instantiate<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #3 - "compile-afl-address-x86_64":    37 |     [0;34mreturn[0m TreeNode::Instantiate<T, Args...>(name, config, args...);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                     ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:352:51: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::CreateBuilder<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #3 - "compile-afl-address-x86_64":   352 |     registerBuilder(CreateManifest<T>(ID, ports), CreateBuilder<T>(args...));[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m                                                  ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:388:5: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #3 - "compile-afl-address-x86_64":   388 |     registerNodeType<T>(ID, getProvidedPorts<T>(), args...);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_parallel.cpp:419:11: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #3 - "compile-afl-address-x86_64":   419 |   factory.registerNodeType<BT::TestNode>([0;32m"GoodTest"[0m, good_config);[0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m          ^
Step #3 - "compile-afl-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/actions/test_node.h:70:5: [0m[0;1;36mnote: [0m'TestNode' has been explicitly marked deprecated here[0m
Step #3 - "compile-afl-address-x86_64":    70 |   [[deprecated([0;32m"prefer the constructor with std::shared_ptr<TestNodeConfig>"[0m)]] TestNode([0m
Step #3 - "compile-afl-address-x86_64":       | [0;1;32m    ^
Step #3 - "compile-afl-address-x86_64": [0m2 warnings generated.
Step #3 - "compile-afl-address-x86_64": 5 warnings generated.
Step #3 - "compile-afl-address-x86_64": [ 98%] [32m[1mLinking CXX executable bb_fuzzer[0m
Step #3 - "compile-afl-address-x86_64": 1 warning generated.
Step #3 - "compile-afl-address-x86_64": [ 98%] Built target bb_fuzzer
Step #3 - "compile-afl-address-x86_64": 3 warnings generated.
Step #3 - "compile-afl-address-x86_64": [100%] [32m[1mLinking CXX executable behaviortree_cpp_test[0m
Step #3 - "compile-afl-address-x86_64": [100%] Built target behaviortree_cpp_test
Step #3 - "compile-afl-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #3 - "compile-afl-address-x86_64": + cp bt_fuzzer /workspace/out/afl-address-x86_64/
Step #3 - "compile-afl-address-x86_64": + '[' -d ../fuzzing/corpus/bt_fuzzer ']'
Step #3 - "compile-afl-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #3 - "compile-afl-address-x86_64": + cp script_fuzzer /workspace/out/afl-address-x86_64/
Step #3 - "compile-afl-address-x86_64": + '[' -d ../fuzzing/corpus/script_fuzzer ']'
Step #3 - "compile-afl-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #3 - "compile-afl-address-x86_64": + cp bb_fuzzer /workspace/out/afl-address-x86_64/
Step #3 - "compile-afl-address-x86_64": + '[' -d ../fuzzing/corpus/bb_fuzzer ']'
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": b2dd5275fc2f: Already exists
Step #4 - "build-check-afl-address-x86_64": 9732d5f6d5c7: Already exists
Step #4 - "build-check-afl-address-x86_64": d7302bc0ecfd: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": aeb2034a4c71: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b1af8c3433ae: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 94d2d3a72375: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": ffb0c50e5210: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 16c024c37214: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 55b631e5c62d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": da7ac648accd: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 7ddea04e35dc: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 05925d5b621a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b4e412837c40: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": e808c51c1a20: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 23dd1d2e7007: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": d1b1aba7626c: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 714478507f98: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 3f72398e0e48: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 70d64167a632: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c99b6dedfd85: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 3cd2ccc0e354: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 38701a81bc7a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b6f1a7b9f8f8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 28a8f12c0f62: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": aac5290a3341: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 55b631e5c62d: Waiting
Step #4 - "build-check-afl-address-x86_64": da7ac648accd: Waiting
Step #4 - "build-check-afl-address-x86_64": 23dd1d2e7007: Waiting
Step #4 - "build-check-afl-address-x86_64": 7ddea04e35dc: Waiting
Step #4 - "build-check-afl-address-x86_64": d1b1aba7626c: Waiting
Step #4 - "build-check-afl-address-x86_64": 05925d5b621a: Waiting
Step #4 - "build-check-afl-address-x86_64": 714478507f98: Waiting
Step #4 - "build-check-afl-address-x86_64": b4e412837c40: Waiting
Step #4 - "build-check-afl-address-x86_64": 3f72398e0e48: Waiting
Step #4 - "build-check-afl-address-x86_64": e808c51c1a20: Waiting
Step #4 - "build-check-afl-address-x86_64": 70d64167a632: Waiting
Step #4 - "build-check-afl-address-x86_64": c99b6dedfd85: Waiting
Step #4 - "build-check-afl-address-x86_64": 94d2d3a72375: Waiting
Step #4 - "build-check-afl-address-x86_64": 3cd2ccc0e354: Waiting
Step #4 - "build-check-afl-address-x86_64": ffb0c50e5210: Waiting
Step #4 - "build-check-afl-address-x86_64": 38701a81bc7a: Waiting
Step #4 - "build-check-afl-address-x86_64": b6f1a7b9f8f8: Waiting
Step #4 - "build-check-afl-address-x86_64": 28a8f12c0f62: Waiting
Step #4 - "build-check-afl-address-x86_64": aac5290a3341: Waiting
Step #4 - "build-check-afl-address-x86_64": 16c024c37214: Waiting
Step #4 - "build-check-afl-address-x86_64": b1af8c3433ae: Download complete
Step #4 - "build-check-afl-address-x86_64": d7302bc0ecfd: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": d7302bc0ecfd: Download complete
Step #4 - "build-check-afl-address-x86_64": aeb2034a4c71: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": aeb2034a4c71: Download complete
Step #4 - "build-check-afl-address-x86_64": ffb0c50e5210: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": ffb0c50e5210: Download complete
Step #4 - "build-check-afl-address-x86_64": d7302bc0ecfd: Pull complete
Step #4 - "build-check-afl-address-x86_64": 94d2d3a72375: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 94d2d3a72375: Download complete
Step #4 - "build-check-afl-address-x86_64": 55b631e5c62d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 55b631e5c62d: Download complete
Step #4 - "build-check-afl-address-x86_64": 7ddea04e35dc: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 7ddea04e35dc: Download complete
Step #4 - "build-check-afl-address-x86_64": aeb2034a4c71: Pull complete
Step #4 - "build-check-afl-address-x86_64": b1af8c3433ae: Pull complete
Step #4 - "build-check-afl-address-x86_64": b4e412837c40: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": b4e412837c40: Download complete
Step #4 - "build-check-afl-address-x86_64": 16c024c37214: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 16c024c37214: Download complete
Step #4 - "build-check-afl-address-x86_64": e808c51c1a20: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": e808c51c1a20: Download complete
Step #4 - "build-check-afl-address-x86_64": 94d2d3a72375: Pull complete
Step #4 - "build-check-afl-address-x86_64": 23dd1d2e7007: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 23dd1d2e7007: Download complete
Step #4 - "build-check-afl-address-x86_64": ffb0c50e5210: Pull complete
Step #4 - "build-check-afl-address-x86_64": 714478507f98: Download complete
Step #4 - "build-check-afl-address-x86_64": 05925d5b621a: Download complete
Step #4 - "build-check-afl-address-x86_64": 70d64167a632: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 70d64167a632: Download complete
Step #4 - "build-check-afl-address-x86_64": c99b6dedfd85: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": c99b6dedfd85: Download complete
Step #4 - "build-check-afl-address-x86_64": d1b1aba7626c: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": d1b1aba7626c: Download complete
Step #4 - "build-check-afl-address-x86_64": 3cd2ccc0e354: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 3cd2ccc0e354: Download complete
Step #4 - "build-check-afl-address-x86_64": 38701a81bc7a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 38701a81bc7a: Download complete
Step #4 - "build-check-afl-address-x86_64": b6f1a7b9f8f8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": b6f1a7b9f8f8: Download complete
Step #4 - "build-check-afl-address-x86_64": aac5290a3341: Download complete
Step #4 - "build-check-afl-address-x86_64": 3f72398e0e48: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 3f72398e0e48: Download complete
Step #4 - "build-check-afl-address-x86_64": 28a8f12c0f62: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 28a8f12c0f62: Download complete
Step #4 - "build-check-afl-address-x86_64": 16c024c37214: Pull complete
Step #4 - "build-check-afl-address-x86_64": 55b631e5c62d: Pull complete
Step #4 - "build-check-afl-address-x86_64": da7ac648accd: Pull complete
Step #4 - "build-check-afl-address-x86_64": 7ddea04e35dc: Pull complete
Step #4 - "build-check-afl-address-x86_64": 05925d5b621a: Pull complete
Step #4 - "build-check-afl-address-x86_64": b4e412837c40: Pull complete
Step #4 - "build-check-afl-address-x86_64": e808c51c1a20: Pull complete
Step #4 - "build-check-afl-address-x86_64": 23dd1d2e7007: Pull complete
Step #4 - "build-check-afl-address-x86_64": d1b1aba7626c: Pull complete
Step #4 - "build-check-afl-address-x86_64": 714478507f98: Pull complete
Step #4 - "build-check-afl-address-x86_64": 3f72398e0e48: Pull complete
Step #4 - "build-check-afl-address-x86_64": 70d64167a632: Pull complete
Step #4 - "build-check-afl-address-x86_64": c99b6dedfd85: Pull complete
Step #4 - "build-check-afl-address-x86_64": 3cd2ccc0e354: Pull complete
Step #4 - "build-check-afl-address-x86_64": 38701a81bc7a: Pull complete
Step #4 - "build-check-afl-address-x86_64": b6f1a7b9f8f8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 28a8f12c0f62: Pull complete
Step #4 - "build-check-afl-address-x86_64": aac5290a3341: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:21571ca236923fe5b51fcab277e8f8496de8e3f8473fe7b1e8ef28af767a6a79
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpztagnrkt/script_fuzzer
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpztagnrkt/bb_fuzzer
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpztagnrkt/bt_fuzzer
Finished Step #4 - "build-check-afl-address-x86_64"
Starting Step #5
Step #5: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #5
Starting Step #6
Step #6: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Step #6:   adding: SanitizerCoverageLTO.so (deflated 69%)
Step #6:   adding: SanitizerCoveragePCGUARD.so (deflated 70%)
Step #6:   adding: afl-addseeds (deflated 57%)
Step #6:   adding: afl-analyze (deflated 55%)
Step #6:   adding: afl-c++ (deflated 57%)
Step #6:   adding: afl-c++.8 (deflated 55%)
Step #6:   adding: afl-cc (deflated 57%)
Step #6:   adding: afl-cc.8 (deflated 55%)
Step #6:   adding: afl-clang (deflated 57%)
Step #6:   adding: afl-clang++ (deflated 57%)
Step #6:   adding: afl-clang-fast (deflated 57%)
Step #6:   adding: afl-clang-fast++ (deflated 57%)
Step #6:   adding: afl-clang-fast++.8 (deflated 55%)
Step #6:   adding: afl-clang-fast.8 (deflated 55%)
Step #6:   adding: afl-clang-lto (deflated 57%)
Step #6:   adding: afl-clang-lto++ (deflated 57%)
Step #6:   adding: afl-clang-lto++.8 (deflated 55%)
Step #6:   adding: afl-clang-lto.8 (deflated 55%)
Step #6:   adding: afl-cmin (deflated 70%)
Step #6:   adding: afl-cmin.bash (deflated 65%)
Step #6:   adding: afl-cmin.py (deflated 71%)
Step #6:   adding: afl-compiler-rt-32.o (deflated 54%)
Step #6:   adding: afl-compiler-rt-64.o (deflated 67%)
Step #6:   adding: afl-compiler-rt.o (deflated 67%)
Step #6:   adding: afl-fuzz (deflated 55%)
Step #6:   adding: afl-g++ (deflated 57%)
Step #6:   adding: afl-gcc (deflated 57%)
Step #6:   adding: afl-gotcpu (deflated 62%)
Step #6:   adding: afl-ld-lto (deflated 62%)
Step #6:   adding: afl-llvm-dict2file.so (deflated 69%)
Step #6:   adding: afl-llvm-lto-instrumentlist.so (deflated 71%)
Step #6:   adding: afl-llvm-pass.so (deflated 69%)
Step #6:   adding: afl-llvm-rt-lto-32.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto-64.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto.o (deflated 20%)
Step #6:   adding: afl-lto (deflated 57%)
Step #6:   adding: afl-lto++ (deflated 57%)
Step #6:   adding: afl-lto++.8 (deflated 55%)
Step #6:   adding: afl-lto.8 (deflated 55%)
Step #6:   adding: afl-persistent-config (deflated 59%)
Step #6:   adding: afl-plot (deflated 65%)
Step #6:   adding: afl-showmap (deflated 55%)
Step #6:   adding: afl-system-config (deflated 63%)
Step #6:   adding: afl-tmin (deflated 55%)
Step #6:   adding: afl-whatsup (deflated 69%)
Step #6:   adding: afl-wine-trace (deflated 70%)
Step #6:   adding: afl_options.txt (deflated 20%)
Step #6:   adding: bb_fuzzer (deflated 68%)
Step #6:   adding: bt_fuzzer (deflated 69%)
Step #6:   adding: cmplog-instructions-pass.so (deflated 71%)
Step #6:   adding: cmplog-routines-pass.so (deflated 70%)
Step #6:   adding: cmplog-switches-pass.so (deflated 70%)
Step #6:   adding: compare-transform-pass.so (deflated 69%)
Step #6:   adding: dynamic_list.txt (deflated 76%)
Step #6:   adding: injection-pass.so (deflated 70%)
Step #6:   adding: libAFLDriver.a (deflated 64%)
Step #6:   adding: libAFLQemuDriver.a (deflated 65%)
Step #6:   adding: llvm-symbolizer (deflated 65%)
Step #6:   adding: script_fuzzer (deflated 70%)
Step #6:   adding: split-compares-pass.so (deflated 69%)
Step #6:   adding: split-switches-pass.so (deflated 70%)
Finished Step #6
Starting Step #7
Step #7: Pulling image: gcr.io/oss-fuzz-base/uploader
Step #7: Using default tag: latest
Step #7: latest: Pulling from oss-fuzz-base/uploader
Step #7: c62795f78da9: Pulling fs layer
Step #7: d4fceeeb758e: Pulling fs layer
Step #7: 5c9125a401ae: Pulling fs layer
Step #7: 0062f774e994: Pulling fs layer
Step #7: 6b33fd031fac: Pulling fs layer
Step #7: 7eb39101e508: Pulling fs layer
Step #7: 89257482f398: Pulling fs layer
Step #7: 6b33fd031fac: Waiting
Step #7: 7eb39101e508: Waiting
Step #7: 89257482f398: Waiting
Step #7: 0062f774e994: Waiting
Step #7: 5c9125a401ae: Verifying Checksum
Step #7: 5c9125a401ae: Download complete
Step #7: d4fceeeb758e: Verifying Checksum
Step #7: d4fceeeb758e: Download complete
Step #7: 0062f774e994: Download complete
Step #7: 6b33fd031fac: Verifying Checksum
Step #7: 6b33fd031fac: Download complete
Step #7: 89257482f398: Verifying Checksum
Step #7: 89257482f398: Download complete
Step #7: c62795f78da9: Download complete
Step #7: 7eb39101e508: Verifying Checksum
Step #7: 7eb39101e508: Download complete
Step #7: c62795f78da9: Pull complete
Step #7: d4fceeeb758e: Pull complete
Step #7: 5c9125a401ae: Pull complete
Step #7: 0062f774e994: Pull complete
Step #7: 6b33fd031fac: Pull complete
Step #7: 7eb39101e508: Pull complete
Step #7: 89257482f398: Pull complete
Step #7: Digest: sha256:5717ba63d13b5515063e2a6ccad09fb5bf32a86c8e0798a363d81c2be522e411
Step #7: Status: Downloaded newer image for gcr.io/oss-fuzz-base/uploader:latest
Step #7: gcr.io/oss-fuzz-base/uploader:latest
Step #7:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #7:                                  Dload  Upload   Total   Spent    Left  Speed
Step #7:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   176    0     0  100   176      0    938 --:--:-- --:--:-- --:--:--   941
Finished Step #7
Starting Step #8
Step #8: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #8:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #8:                                  Dload  Upload   Total   Spent    Left  Speed
Step #8:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 23.9M    0     0  100 23.9M      0  66.4M --:--:-- --:--:-- --:--:-- 66.6M
Finished Step #8
Starting Step #9
Step #9: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #9:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #9:                                  Dload  Upload   Total   Spent    Left  Speed
Step #9:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    123 --:--:-- --:--:-- --:--:--   123
Finished Step #9
Starting Step #10
Step #10: Already have image (with digest): gcr.io/cloud-builders/curl
Step #10:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #10:                                  Dload  Upload   Total   Spent    Left  Speed
Step #10:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    40    0     0  100    40      0    201 --:--:-- --:--:-- --:--:--   202
Finished Step #10
Starting Step #11
Step #11: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Finished Step #11
Starting Step #12 - "compile-libfuzzer-address-x86_64"
Step #12 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #12 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #12 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #12 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": CC=clang
Step #12 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #12 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #12 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #12 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #12 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #12 - "compile-libfuzzer-address-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #12 - "compile-libfuzzer-address-x86_64": + SQLITE_VER=sqlite-autoconf-3480000
Step #12 - "compile-libfuzzer-address-x86_64": + wget https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #12 - "compile-libfuzzer-address-x86_64": --2025-10-06 06:25:57--  https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #12 - "compile-libfuzzer-address-x86_64": Resolving www.sqlite.org (www.sqlite.org)... 194.195.208.62, 2600:3c02::f03c:95ff:fe07:695
Step #12 - "compile-libfuzzer-address-x86_64": Connecting to www.sqlite.org (www.sqlite.org)|194.195.208.62|:443... connected.
Step #12 - "compile-libfuzzer-address-x86_64": HTTP request sent, awaiting response... 200 OK
Step #12 - "compile-libfuzzer-address-x86_64": Length: 3337615 (3.2M) [application/x-gzip]
Step #12 - "compile-libfuzzer-address-x86_64": Saving to: 'sqlite-autoconf-3480000.tar.gz'
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64":           sqlite-au   0%[                    ]       0  --.-KB/s                        sqlite-aut  99%[==================> ]   3.18M  14.6MB/s               sqlite-autoconf-348 100%[===================>]   3.18M  14.6MB/s    in 0.2s    
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64": 2025-10-06 06:25:57 (14.6 MB/s) - 'sqlite-autoconf-3480000.tar.gz' saved [3337615/3337615]
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64": + tar xzf sqlite-autoconf-3480000.tar.gz
Step #12 - "compile-libfuzzer-address-x86_64": + cd sqlite-autoconf-3480000
Step #12 - "compile-libfuzzer-address-x86_64": + ./configure --enable-static --disable-shared
Step #12 - "compile-libfuzzer-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #12 - "compile-libfuzzer-address-x86_64": checking whether build environment is sane... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for a race-free mkdir -p... /usr/bin/mkdir -p
Step #12 - "compile-libfuzzer-address-x86_64": checking for gawk... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for mawk... mawk
Step #12 - "compile-libfuzzer-address-x86_64": checking whether make sets $(MAKE)... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #12 - "compile-libfuzzer-address-x86_64": checking for gcc... clang
Step #12 - "compile-libfuzzer-address-x86_64": checking whether the C compiler works... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for C compiler default output file name... a.out
Step #12 - "compile-libfuzzer-address-x86_64": checking for suffix of executables... 
Step #12 - "compile-libfuzzer-address-x86_64": checking whether we are cross compiling... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for suffix of object files... o
Step #12 - "compile-libfuzzer-address-x86_64": checking whether the compiler supports GNU C... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for clang option to enable C11 features... none needed
Step #12 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... gcc3
Step #12 - "compile-libfuzzer-address-x86_64": checking for special C compiler options needed for large files... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for _FILE_OFFSET_BITS value needed for large files... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for gcc... (cached) clang
Step #12 - "compile-libfuzzer-address-x86_64": checking whether the compiler supports GNU C... (cached) yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for clang option to enable C11 features... (cached) none needed
Step #12 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #12 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... (cached) gcc3
Step #12 - "compile-libfuzzer-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #12 - "compile-libfuzzer-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #12 - "compile-libfuzzer-address-x86_64": checking how to print strings... printf
Step #12 - "compile-libfuzzer-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #12 - "compile-libfuzzer-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #12 - "compile-libfuzzer-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #12 - "compile-libfuzzer-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #12 - "compile-libfuzzer-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #12 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #12 - "compile-libfuzzer-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #12 - "compile-libfuzzer-address-x86_64": checking whether ln -s works... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #12 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #12 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #12 - "compile-libfuzzer-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #12 - "compile-libfuzzer-address-x86_64": checking for file... file
Step #12 - "compile-libfuzzer-address-x86_64": checking for objdump... objdump
Step #12 - "compile-libfuzzer-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #12 - "compile-libfuzzer-address-x86_64": checking for dlltool... no
Step #12 - "compile-libfuzzer-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #12 - "compile-libfuzzer-address-x86_64": checking for ar... ar
Step #12 - "compile-libfuzzer-address-x86_64": checking for archiver @FILE support... @
Step #12 - "compile-libfuzzer-address-x86_64": checking for strip... strip
Step #12 - "compile-libfuzzer-address-x86_64": checking for ranlib... ranlib
Step #12 - "compile-libfuzzer-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #12 - "compile-libfuzzer-address-x86_64": checking for sysroot... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for a working dd... /usr/bin/dd
Step #12 - "compile-libfuzzer-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #12 - "compile-libfuzzer-address-x86_64": checking for mt... no
Step #12 - "compile-libfuzzer-address-x86_64": checking if : is a manifest tool... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for stdio.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for stdlib.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for string.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for inttypes.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for stdint.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for strings.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for sys/stat.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for sys/types.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for unistd.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for dlfcn.h... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for objdir... .libs
Step #12 - "compile-libfuzzer-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #12 - "compile-libfuzzer-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking if clang static flag -static works... no
Step #12 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #12 - "compile-libfuzzer-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #12 - "compile-libfuzzer-address-x86_64": checking whether stripping libraries is possible... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking if libtool supports shared libraries... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether to build shared libraries... no
Step #12 - "compile-libfuzzer-address-x86_64": checking whether to build static libraries... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for fdatasync... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for usleep... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for fullfsync... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for localtime_r... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for gmtime_r... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for clang options needed to detect all undeclared functions... -fno-builtin
Step #12 - "compile-libfuzzer-address-x86_64": checking whether strerror_r is declared... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking whether strerror_r returns char *... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for editline/readline.h... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for readline/readline.h... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing pthread_create... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing pthread_mutexattr_init... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing dlopen... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking for whether to support dynamic extensions... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking SQL math functions... enabled
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing ceil... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking FTS4 extension... enabled
Step #12 - "compile-libfuzzer-address-x86_64": checking FTS3 extension... disabled
Step #12 - "compile-libfuzzer-address-x86_64": checking FTS5 extension... enabled
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing log... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking RTREE extension... enabled
Step #12 - "compile-libfuzzer-address-x86_64": checking Session extension... disabled
Step #12 - "compile-libfuzzer-address-x86_64": checking Build type... release
Step #12 - "compile-libfuzzer-address-x86_64": checking for posix_fallocate... yes
Step #12 - "compile-libfuzzer-address-x86_64": checking for zlib.h... no
Step #12 - "compile-libfuzzer-address-x86_64": checking for library containing system... none required
Step #12 - "compile-libfuzzer-address-x86_64": checking that generated files are newer than configure... done
Step #12 - "compile-libfuzzer-address-x86_64": configure: creating ./config.status
Step #12 - "compile-libfuzzer-address-x86_64": config.status: creating Makefile
Step #12 - "compile-libfuzzer-address-x86_64": config.status: creating sqlite3.pc
Step #12 - "compile-libfuzzer-address-x86_64": config.status: executing depfiles commands
Step #12 - "compile-libfuzzer-address-x86_64": config.status: executing libtool commands
Step #12 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #12 - "compile-libfuzzer-address-x86_64": + make -j32
Step #12 - "compile-libfuzzer-address-x86_64": clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT sqlite3-shell.o -MD -MP -MF .deps/sqlite3-shell.Tpo -c -o sqlite3-shell.o `test -f 'shell.c' || echo './'`shell.c
Step #12 - "compile-libfuzzer-address-x86_64": clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT sqlite3-sqlite3.o -MD -MP -MF .deps/sqlite3-sqlite3.Tpo -c -o sqlite3-sqlite3.o `test -f 'sqlite3.c' || echo './'`sqlite3.c
Step #12 - "compile-libfuzzer-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=compile clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c -o sqlite3.lo sqlite3.c
Step #12 - "compile-libfuzzer-address-x86_64": libtool: compile:  clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" "-DPACKAGE_STRING=\"sqlite 3.48.0\"" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I. -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c sqlite3.c -o sqlite3.o
Step #12 - "compile-libfuzzer-address-x86_64": mv -f .deps/sqlite3-shell.Tpo .deps/sqlite3-shell.Po
Step #12 - "compile-libfuzzer-address-x86_64": mv -f .deps/sqlite3.Tpo .deps/sqlite3.Plo
Step #12 - "compile-libfuzzer-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -no-undefined -version-info 8:6:8  -o libsqlite3.la -rpath /usr/local/lib sqlite3.lo  
Step #12 - "compile-libfuzzer-address-x86_64": libtool: link: ar cr .libs/libsqlite3.a  sqlite3.o
Step #12 - "compile-libfuzzer-address-x86_64": libtool: link: ranlib .libs/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": libtool: link: ( cd ".libs" && rm -f "libsqlite3.la" && ln -s "../libsqlite3.la" "libsqlite3.la" )
Step #12 - "compile-libfuzzer-address-x86_64": mv -f .deps/sqlite3-sqlite3.Tpo .deps/sqlite3-sqlite3.Po
Step #12 - "compile-libfuzzer-address-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o  
Step #12 - "compile-libfuzzer-address-x86_64": libtool: link: clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o 
Step #12 - "compile-libfuzzer-address-x86_64": + make install
Step #12 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/usr/local/lib'
Step #12 - "compile-libfuzzer-address-x86_64":  /bin/bash ./libtool   --mode=install /usr/bin/install -c   libsqlite3.la '/usr/local/lib'
Step #12 - "compile-libfuzzer-address-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.lai /usr/local/lib/libsqlite3.la
Step #12 - "compile-libfuzzer-address-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.a /usr/local/lib/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": libtool: install: chmod 644 /usr/local/lib/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": libtool: install: ranlib /usr/local/lib/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /usr/local/lib
Step #12 - "compile-libfuzzer-address-x86_64": ----------------------------------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": Libraries have been installed in:
Step #12 - "compile-libfuzzer-address-x86_64":    /usr/local/lib
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64": If you ever happen to want to link against installed libraries
Step #12 - "compile-libfuzzer-address-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #12 - "compile-libfuzzer-address-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #12 - "compile-libfuzzer-address-x86_64": flag during linking and do at least one of the following:
Step #12 - "compile-libfuzzer-address-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #12 - "compile-libfuzzer-address-x86_64":      during execution
Step #12 - "compile-libfuzzer-address-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #12 - "compile-libfuzzer-address-x86_64":      during linking
Step #12 - "compile-libfuzzer-address-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #12 - "compile-libfuzzer-address-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64": See any operating system documentation about shared libraries for
Step #12 - "compile-libfuzzer-address-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #12 - "compile-libfuzzer-address-x86_64": ----------------------------------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/usr/local/bin'
Step #12 - "compile-libfuzzer-address-x86_64":   /bin/bash ./libtool   --mode=install /usr/bin/install -c sqlite3 '/usr/local/bin'
Step #12 - "compile-libfuzzer-address-x86_64": libtool: install: /usr/bin/install -c sqlite3 /usr/local/bin/sqlite3
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/usr/local/include'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.h sqlite3ext.h '/usr/local/include'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/usr/local/share/man/man1'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.1 '/usr/local/share/man/man1'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/usr/local/lib/pkgconfig'
Step #12 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 sqlite3.pc '/usr/local/lib/pkgconfig'
Step #12 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #12 - "compile-libfuzzer-address-x86_64": + cd ..
Step #12 - "compile-libfuzzer-address-x86_64": + git clone https://github.com/zeromq/libzmq.git
Step #12 - "compile-libfuzzer-address-x86_64": Cloning into 'libzmq'...
Step #12 - "compile-libfuzzer-address-x86_64": remote: Enumerating objects: 48514, done.[K
Step #12 - "compile-libfuzzer-address-x86_64": remote: Counting objects:   2% (1/41)[Kremote: Counting objects:   4% (2/41)[Kremote: Counting objects:   7% (3/41)[Kremote: Counting objects:   9% (4/41)[Kremote: Counting objects:  12% (5/41)[Kremote: Counting objects:  14% (6/41)[Kremote: Counting objects:  17% (7/41)[Kremote: Counting objects:  19% (8/41)[Kremote: Counting objects:  21% (9/41)[Kremote: Counting objects:  24% (10/41)[Kremote: Counting objects:  26% (11/41)[Kremote: Counting objects:  29% (12/41)[Kremote: Counting objects:  31% (13/41)[Kremote: Counting objects:  34% (14/41)[Kremote: Counting objects:  36% (15/41)[Kremote: Counting objects:  39% (16/41)[Kremote: Counting objects:  41% (17/41)[Kremote: Counting objects:  43% (18/41)[Kremote: Counting objects:  46% (19/41)[Kremote: Counting objects:  48% (20/41)[Kremote: Counting objects:  51% (21/41)[Kremote: Counting objects:  53% (22/41)[Kremote: Counting objects:  56% (23/41)[Kremote: Counting objects:  58% (24/41)[Kremote: Counting objects:  60% (25/41)[Kremote: Counting objects:  63% (26/41)[Kremote: Counting objects:  65% (27/41)[Kremote: Counting objects:  68% (28/41)[Kremote: Counting objects:  70% (29/41)[Kremote: Counting objects:  73% (30/41)[Kremote: Counting objects:  75% (31/41)[Kremote: Counting objects:  78% (32/41)[Kremote: Counting objects:  80% (33/41)[Kremote: Counting objects:  82% (34/41)[Kremote: Counting objects:  85% (35/41)[Kremote: Counting objects:  87% (36/41)[Kremote: Counting objects:  90% (37/41)[Kremote: Counting objects:  92% (38/41)[Kremote: Counting objects:  95% (39/41)[Kremote: Counting objects:  97% (40/41)[Kremote: Counting objects: 100% (41/41)[Kremote: Counting objects: 100% (41/41), done.[K
Step #12 - "compile-libfuzzer-address-x86_64": remote: Compressing objects:   2% (1/34)[Kremote: Compressing objects:   5% (2/34)[Kremote: Compressing objects:   8% (3/34)[Kremote: Compressing objects:  11% (4/34)[Kremote: Compressing objects:  14% (5/34)[Kremote: Compressing objects:  17% (6/34)[Kremote: Compressing objects:  20% (7/34)[Kremote: Compressing objects:  23% (8/34)[Kremote: Compressing objects:  26% (9/34)[Kremote: Compressing objects:  29% (10/34)[Kremote: Compressing objects:  32% (11/34)[Kremote: Compressing objects:  35% (12/34)[Kremote: Compressing objects:  38% (13/34)[Kremote: Compressing objects:  41% (14/34)[Kremote: Compressing objects:  44% (15/34)[Kremote: Compressing objects:  47% (16/34)[Kremote: Compressing objects:  50% (17/34)[Kremote: Compressing objects:  52% (18/34)[Kremote: Compressing objects:  55% (19/34)[Kremote: Compressing objects:  58% (20/34)[Kremote: Compressing objects:  61% (21/34)[Kremote: Compressing objects:  64% (22/34)[Kremote: Compressing objects:  67% (23/34)[Kremote: Compressing objects:  70% (24/34)[Kremote: Compressing objects:  73% (25/34)[Kremote: Compressing objects:  76% (26/34)[Kremote: Compressing objects:  79% (27/34)[Kremote: Compressing objects:  82% (28/34)[Kremote: Compressing objects:  85% (29/34)[Kremote: Compressing objects:  88% (30/34)[Kremote: Compressing objects:  91% (31/34)[Kremote: Compressing objects:  94% (32/34)[Kremote: Compressing objects:  97% (33/34)[Kremote: Compressing objects: 100% (34/34)[Kremote: Compressing objects: 100% (34/34), done.[K
Step #12 - "compile-libfuzzer-address-x86_64": Receiving objects:   0% (1/48514)Receiving objects:   1% (486/48514)Receiving objects:   2% (971/48514)Receiving objects:   3% (1456/48514)Receiving objects:   4% (1941/48514)Receiving objects:   5% (2426/48514)Receiving objects:   6% (2911/48514)Receiving objects:   7% (3396/48514)Receiving objects:   8% (3882/48514)Receiving objects:   9% (4367/48514)Receiving objects:  10% (4852/48514)Receiving objects:  11% (5337/48514)Receiving objects:  12% (5822/48514)Receiving objects:  13% (6307/48514)Receiving objects:  14% (6792/48514)Receiving objects:  15% (7278/48514)Receiving objects:  16% (7763/48514)Receiving objects:  17% (8248/48514)Receiving objects:  18% (8733/48514)Receiving objects:  19% (9218/48514)Receiving objects:  20% (9703/48514)Receiving objects:  21% (10188/48514)Receiving objects:  22% (10674/48514)Receiving objects:  23% (11159/48514)Receiving objects:  24% (11644/48514)Receiving objects:  25% (12129/48514)Receiving objects:  26% (12614/48514)Receiving objects:  27% (13099/48514)Receiving objects:  28% (13584/48514)Receiving objects:  29% (14070/48514)Receiving objects:  30% (14555/48514)Receiving objects:  31% (15040/48514)Receiving objects:  32% (15525/48514)Receiving objects:  33% (16010/48514)Receiving objects:  34% (16495/48514)Receiving objects:  35% (16980/48514)Receiving objects:  36% (17466/48514)Receiving objects:  37% (17951/48514)Receiving objects:  38% (18436/48514)Receiving objects:  39% (18921/48514)Receiving objects:  40% (19406/48514)Receiving objects:  41% (19891/48514)Receiving objects:  42% (20376/48514)Receiving objects:  43% (20862/48514)Receiving objects:  44% (21347/48514)Receiving objects:  45% (21832/48514)Receiving objects:  46% (22317/48514)Receiving objects:  47% (22802/48514)Receiving objects:  48% (23287/48514)Receiving objects:  49% (23772/48514)Receiving objects:  50% (24257/48514)Receiving objects:  51% (24743/48514)Receiving objects:  52% (25228/48514)Receiving objects:  53% (25713/48514)Receiving objects:  54% (26198/48514)Receiving objects:  55% (26683/48514)Receiving objects:  56% (27168/48514)Receiving objects:  57% (27653/48514)Receiving objects:  58% (28139/48514)Receiving objects:  59% (28624/48514)Receiving objects:  60% (29109/48514)Receiving objects:  61% (29594/48514)Receiving objects:  62% (30079/48514)Receiving objects:  63% (30564/48514)Receiving objects:  64% (31049/48514)Receiving objects:  65% (31535/48514)Receiving objects:  66% (32020/48514)Receiving objects:  67% (32505/48514)Receiving objects:  68% (32990/48514)Receiving objects:  69% (33475/48514)Receiving objects:  70% (33960/48514)Receiving objects:  71% (34445/48514)Receiving objects:  72% (34931/48514)Receiving objects:  73% (35416/48514)Receiving objects:  74% (35901/48514)Receiving objects:  75% (36386/48514)Receiving objects:  76% (36871/48514)Receiving objects:  77% (37356/48514)Receiving objects:  78% (37841/48514)Receiving objects:  79% (38327/48514)Receiving objects:  80% (38812/48514)Receiving objects:  81% (39297/48514)Receiving objects:  82% (39782/48514)Receiving objects:  83% (40267/48514)Receiving objects:  84% (40752/48514)Receiving objects:  85% (41237/48514)Receiving objects:  86% (41723/48514)Receiving objects:  87% (42208/48514)Receiving objects:  88% (42693/48514)Receiving objects:  89% (43178/48514)Receiving objects:  90% (43663/48514)Receiving objects:  91% (44148/48514)Receiving objects:  92% (44633/48514)Receiving objects:  93% (45119/48514)Receiving objects:  94% (45604/48514)Receiving objects:  95% (46089/48514)Receiving objects:  96% (46574/48514)Receiving objects:  97% (47059/48514)Receiving objects:  98% (47544/48514)Receiving objects:  99% (48029/48514)remote: Total 48514 (delta 16), reused 7 (delta 7), pack-reused 48473 (from 2)[K
Step #12 - "compile-libfuzzer-address-x86_64": Receiving objects: 100% (48514/48514)Receiving objects: 100% (48514/48514), 23.53 MiB | 48.67 MiB/s, done.
Step #12 - "compile-libfuzzer-address-x86_64": Resolving deltas:   0% (0/35149)Resolving deltas:   1% (364/35149)Resolving deltas:   2% (720/35149)Resolving deltas:   3% (1055/35149)Resolving deltas:   4% (1500/35149)Resolving deltas:   5% (1758/35149)Resolving deltas:   6% (2138/35149)Resolving deltas:   7% (2464/35149)Resolving deltas:   8% (2829/35149)Resolving deltas:   9% (3193/35149)Resolving deltas:  10% (3517/35149)Resolving deltas:  11% (3878/35149)Resolving deltas:  12% (4221/35149)Resolving deltas:  13% (4579/35149)Resolving deltas:  14% (4939/35149)Resolving deltas:  15% (5280/35149)Resolving deltas:  16% (5632/35149)Resolving deltas:  17% (6024/35149)Resolving deltas:  18% (6355/35149)Resolving deltas:  19% (6710/35149)Resolving deltas:  20% (7134/35149)Resolving deltas:  21% (7410/35149)Resolving deltas:  22% (7796/35149)Resolving deltas:  23% (8087/35149)Resolving deltas:  24% (8437/35149)Resolving deltas:  25% (8893/35149)Resolving deltas:  26% (9154/35149)Resolving deltas:  27% (9495/35149)Resolving deltas:  28% (9844/35149)Resolving deltas:  29% (10209/35149)Resolving deltas:  30% (10634/35149)Resolving deltas:  31% (11053/35149)Resolving deltas:  32% (11339/35149)Resolving deltas:  33% (11647/35149)Resolving deltas:  34% (12020/35149)Resolving deltas:  35% (12310/35149)Resolving deltas:  36% (12684/35149)Resolving deltas:  37% (13031/35149)Resolving deltas:  38% (13434/35149)Resolving deltas:  39% (13729/35149)Resolving deltas:  40% (14076/35149)Resolving deltas:  41% (14584/35149)Resolving deltas:  42% (14773/35149)Resolving deltas:  43% (15159/35149)Resolving deltas:  44% (15470/35149)Resolving deltas:  45% (15831/35149)Resolving deltas:  46% (16213/35149)Resolving deltas:  47% (16523/35149)Resolving deltas:  48% (16941/35149)Resolving deltas:  49% (17261/35149)Resolving deltas:  50% (17625/35149)Resolving deltas:  51% (17946/35149)Resolving deltas:  52% (18306/35149)Resolving deltas:  53% (18629/35149)Resolving deltas:  54% (19086/35149)Resolving deltas:  55% (19401/35149)Resolving deltas:  56% (19699/35149)Resolving deltas:  57% (20097/35149)Resolving deltas:  58% (20506/35149)Resolving deltas:  59% (20865/35149)Resolving deltas:  60% (21090/35149)Resolving deltas:  61% (21457/35149)Resolving deltas:  62% (21825/35149)Resolving deltas:  63% (22209/35149)Resolving deltas:  64% (22562/35149)Resolving deltas:  65% (22867/35149)Resolving deltas:  66% (23208/35149)Resolving deltas:  68% (23920/35149)Resolving deltas:  69% (24259/35149)Resolving deltas:  70% (24635/35149)Resolving deltas:  71% (24957/35149)Resolving deltas:  72% (25316/35149)Resolving deltas:  73% (25673/35149)Resolving deltas:  74% (26015/35149)Resolving deltas:  75% (26469/35149)Resolving deltas:  76% (26718/35149)Resolving deltas:  77% (27074/35149)Resolving deltas:  78% (27433/35149)Resolving deltas:  79% (27808/35149)Resolving deltas:  80% (28145/35149)Resolving deltas:  81% (28482/35149)Resolving deltas:  82% (28837/35149)Resolving deltas:  83% (29187/35149)Resolving deltas:  84% (29530/35149)Resolving deltas:  85% (29887/35149)Resolving deltas:  86% (30241/35149)Resolving deltas:  87% (30616/35149)Resolving deltas:  88% (30970/35149)Resolving deltas:  89% (31289/35149)Resolving deltas:  90% (31660/35149)Resolving deltas:  91% (32015/35149)Resolving deltas:  92% (32370/35149)Resolving deltas:  93% (32696/35149)Resolving deltas:  94% (33065/35149)Resolving deltas:  95% (33404/35149)Resolving deltas:  96% (33746/35149)Resolving deltas:  97% (34109/35149)Resolving deltas:  98% (34448/35149)Resolving deltas:  99% (34800/35149)Resolving deltas: 100% (35149/35149)Resolving deltas: 100% (35149/35149), done.
Step #12 - "compile-libfuzzer-address-x86_64": + cd libzmq
Step #12 - "compile-libfuzzer-address-x86_64": + mkdir build
Step #12 - "compile-libfuzzer-address-x86_64": + cd build
Step #12 - "compile-libfuzzer-address-x86_64": + cmake .. -DBUILD_SHARED=OFF -DBUILD_STATIC=ON -DZMQ_BUILD_TESTS=OFF
Step #12 - "compile-libfuzzer-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #12 - "compile-libfuzzer-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Found Threads: TRUE
Step #12 - "compile-libfuzzer-address-x86_64": -- Detected ZMQ Version - 4.3.6
Step #12 - "compile-libfuzzer-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test COMPILER_SUPPORTS_C11
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test COMPILER_SUPPORTS_C11 - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CC_HAS_TAUT_WARNING
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CC_HAS_TAUT_WARNING - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Building draft classes and methods
Step #12 - "compile-libfuzzer-address-x86_64": -- Using radix tree implementation to manage subscriptions
Step #12 - "compile-libfuzzer-address-x86_64": -- Enable WebSocket transport
Step #12 - "compile-libfuzzer-address-x86_64": -- Could NOT find GnuTLS (missing: GNUTLS_LIBRARY GNUTLS_INCLUDE_DIR) (Required is at least version "3.6.7")
Step #12 - "compile-libfuzzer-address-x86_64": [33mCMake Warning at CMakeLists.txt:215 (message):
Step #12 - "compile-libfuzzer-address-x86_64":   No WSS support, you may want to install GnuTLS and run cmake again
Step #12 - "compile-libfuzzer-address-x86_64": 
Step #12 - "compile-libfuzzer-address-x86_64": [0m
Step #12 - "compile-libfuzzer-address-x86_64": -- Using builtin sha1
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking for module 'libbsd'
Step #12 - "compile-libfuzzer-address-x86_64": --   No package 'libbsd' found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for strlcpy
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for strlcpy - not found
Step #12 - "compile-libfuzzer-address-x86_64": -- CURVE security is disabled
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for kqueue
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for kqueue - not found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for epoll_create
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for epoll_create - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for epoll_create1
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for epoll_create1 - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Using polling method in I/O threads: epoll
Step #12 - "compile-libfuzzer-address-x86_64": -- Using polling method in zmq_poll(er)_* API: poll
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for pselect
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for pselect - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Using 64 bytes alignment for lock-free data structures
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for posix_memalign
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for posix_memalign - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file windows.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file windows.h - not found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file condition_variable
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file condition_variable - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Using condition_variable_t implementation: stl11
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file ifaddrs.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file ifaddrs.h - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file sys/uio.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file sys/uio.h - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file sys/eventfd.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for include file sys/eventfd.h - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether EFD_CLOEXEC is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for if_nametoindex
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for if_nametoindex - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for SO_PEERCRED
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for SO_PEERCRED - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for LOCAL_PEERCRED
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for LOCAL_PEERCRED - not found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for SO_BUSY_POLL
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for SO_BUSY_POLL - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for clock_gettime
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for clock_gettime - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for fork
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for fork - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for gethrtime
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for gethrtime - not found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for mkdtemp
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for mkdtemp - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for accept4
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for accept4 - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for strnlen
Step #12 - "compile-libfuzzer-address-x86_64": -- Looking for strnlen - found
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wall
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wall - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wextra
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wextra - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-pedantic
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test HAVE_FLAG_-pedantic - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether noexcept is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking pthread_setname signature
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1 - Failed
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2 - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3 - Failed
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME - Failed
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking pthread_setaffinity signature
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether SOCK_CLOEXEC is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether O_CLOEXEC is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether SO_BINDTODEVICE is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether SO_KEEPALIVE is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether SO_PRIORITY is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether TCP_KEEPCNT is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether TCP_KEEPIDLE is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether TCP_KEEPINTVL is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether TCP_KEEPALIVE is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE - Failed
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether TIPC is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TIPC
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_TIPC - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Checking whether getrandom is supported
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Could NOT find AsciiDoctor (missing: ASCIIDOCTOR_EXECUTABLE) 
Step #12 - "compile-libfuzzer-address-x86_64": -- Configuring done (9.5s)
Step #12 - "compile-libfuzzer-address-x86_64": -- Generating done (0.0s)
Step #12 - "compile-libfuzzer-address-x86_64": -- Build files have been written to: /src/behaviortreecpp/libzmq/build
Step #12 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #12 - "compile-libfuzzer-address-x86_64": + make -j32
Step #12 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_connecter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_decoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  4%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_encoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_engine.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object CMakeFiles/objects.dir/external/sha1/sha1.c.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_listener.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/objects.dir/src/precompiled.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  8%] [32mBuilding CXX object CMakeFiles/objects.dir/src/address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/objects.dir/src/client.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/objects.dir/src/channel.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/objects.dir/src/clock.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ctx.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_mechanism_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_client.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_server.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/objects.dir/src/devpoll.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dealer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dgram.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 18%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dist.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/endpoint.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/epoll.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/objects.dir/src/err.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_object.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/objects.dir/src/fq.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_thread.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_connecter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_listener.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/objects.dir/src/kqueue.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/objects.dir/src/lb.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 29%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox_safe.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/metadata.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/msg.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mtrie.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/objects.dir/src/norm_engine.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/objects.dir/src/object.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding CXX object CMakeFiles/objects.dir/src/options.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/objects.dir/src/own.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding CXX object CMakeFiles/objects.dir/src/null_mechanism.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pair.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/peer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_receiver.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_sender.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_socket.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pipe.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_client.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_server.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poll.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poller_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/polling_util.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 49%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pollset.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/objects.dir/src/proxy.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pub.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pull.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding CXX object CMakeFiles/objects.dir/src/push.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/objects.dir/src/random.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_encoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_decoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 56%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_engine.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 57%] [32mBuilding CXX object CMakeFiles/objects.dir/src/reaper.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 58%] [32mBuilding CXX object CMakeFiles/objects.dir/src/rep.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding CXX object CMakeFiles/objects.dir/src/req.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 60%] [32mBuilding CXX object CMakeFiles/objects.dir/src/router.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 61%] [32mBuilding CXX object CMakeFiles/objects.dir/src/select.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/server.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/session_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 63%] [32mBuilding CXX object CMakeFiles/objects.dir/src/signaler.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 64%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 65%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks_connecter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 67%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 68%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_engine_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/sub.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 71%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_connecter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 72%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_listener.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding CXX object CMakeFiles/objects.dir/src/thread.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 74%] [32mBuilding CXX object CMakeFiles/objects.dir/src/trie.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 75%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radix_tree.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_decoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_encoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 77%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_decoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 78%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_encoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 79%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v3_1_encoder.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xpub.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 81%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xsub.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 82%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq_utils.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/decoder_allocators.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 84%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_poller.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding CXX object CMakeFiles/objects.dir/src/timers.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 86%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radio.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 87%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dish.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_engine.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 89%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/scatter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/gather.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 91%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip_resolver.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 92%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zap_client.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmtp_engine.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 94%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_connecter_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 95%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_listener_base.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 96%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_address.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 97%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_connecter.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 98%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_listener.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 98%] Built target objects
Step #12 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking CXX static library lib/libzmq.a[0m
Step #12 - "compile-libfuzzer-address-x86_64": [100%] Built target libzmq-static
Step #12 - "compile-libfuzzer-address-x86_64": + make install
Step #12 - "compile-libfuzzer-address-x86_64": [ 98%] Built target objects
Step #12 - "compile-libfuzzer-address-x86_64": [100%] Built target libzmq-static
Step #12 - "compile-libfuzzer-address-x86_64": [36mInstall the project...[0m
Step #12 - "compile-libfuzzer-address-x86_64": -- Install configuration: "Release"
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/pkgconfig/libzmq.pc
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/libzmq.a
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/include/zmq.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/include/zmq_utils.h
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/share/zmq/AUTHORS.txt
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/share/zmq/LICENSE.txt
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/share/zmq/NEWS.txt
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets.cmake
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets-release.cmake
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfig.cmake
Step #12 - "compile-libfuzzer-address-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfigVersion.cmake
Step #12 - "compile-libfuzzer-address-x86_64": + cd ../..
Step #12 - "compile-libfuzzer-address-x86_64": + mkdir build
Step #12 - "compile-libfuzzer-address-x86_64": + cd build
Step #12 - "compile-libfuzzer-address-x86_64": + CMAKE_FLAGS=("-DCMAKE_BUILD_TYPE=Release" "-DENABLE_FUZZING=ON" "-DFORCE_STATIC_LINKING=ON")
Step #12 - "compile-libfuzzer-address-x86_64": + cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_FUZZING=ON -DFORCE_STATIC_LINKING=ON
Step #12 - "compile-libfuzzer-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #12 - "compile-libfuzzer-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #12 - "compile-libfuzzer-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features
Step #12 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features - done
Step #12 - "compile-libfuzzer-address-x86_64": -- OSS-Fuzz environment detected
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #12 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #12 - "compile-libfuzzer-address-x86_64": -- Found Threads: TRUE
Step #12 - "compile-libfuzzer-address-x86_64": -- ------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": -- BehaviorTree is being built with conan.
Step #12 - "compile-libfuzzer-address-x86_64": -- ------------------------------------------
Step #12 - "compile-libfuzzer-address-x86_64": -- Found ZeroMQ: /usr/local/lib/libzmq.a
Step #12 - "compile-libfuzzer-address-x86_64": -- ZeroMQ_LIBRARIES: /usr/local/lib/libzmq.a
Step #12 - "compile-libfuzzer-address-x86_64": -- Found SQLite3: /usr/local/include (found version "3.48.0")
Step #12 - "compile-libfuzzer-address-x86_64": -- SQLite3_LIBRARIES: /usr/local/lib/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": -- BTCPP_EXTRA_LIBRARIES: /usr/local/lib/libzmq.a;/usr/local/lib/libsqlite3.a
Step #12 - "compile-libfuzzer-address-x86_64": -- BTCPP_LIB_DESTINATION:   lib 
Step #12 - "compile-libfuzzer-address-x86_64": -- BTCPP_INCLUDE_DESTINATION: include 
Step #12 - "compile-libfuzzer-address-x86_64": -- BUILD_TESTING:   ON 
Step #12 - "compile-libfuzzer-address-x86_64": -- Found GTest: /usr/lib/x86_64-linux-gnu/libgtest.a
Step #12 - "compile-libfuzzer-address-x86_64": -- Configuring done (1.3s)
Step #12 - "compile-libfuzzer-address-x86_64": -- Generating done (0.0s)
Step #12 - "compile-libfuzzer-address-x86_64": -- Build files have been written to: /src/behaviortreecpp/build
Step #12 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #12 - "compile-libfuzzer-address-x86_64": + make -j32
Step #12 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/minitrace.dir/3rdparty/minitrace/minitrace.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object 3rdparty/lexy/src/CMakeFiles/lexy_file.dir/input/file.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  3%] [32m[1mLinking CXX static library liblexy_file.a[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  3%] Built target lexy_file
Step #12 - "compile-libfuzzer-address-x86_64": [  4%] [32m[1mLinking CXX static library libminitrace.a[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  4%] Built target minitrace
Step #12 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/action_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/basic_types.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/behavior_tree.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/blackboard.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/bt_factory.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorator_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/condition_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/control_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/tree_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/script_parser.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/json_export.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 18%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/xml_parsing.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/test_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/sleep_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/updated_action.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/delay_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/inverter_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/repeat_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/retry_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/subtree_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/timeout_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/updated_decorator.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/if_then_else_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/fallback_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_all_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_sequence.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_fallback.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_with_memory_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/switch_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/while_do_else_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_cout_logger.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_minitrace_logger.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_file_logger_v2.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_observer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/3rdparty/tinyxml2/tinyxml2.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/groot2_publisher.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_sqlite_logger.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library_UNIX.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/src/loggers/bt_cout_logger.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_cout_logger.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_sqlite_logger.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_sqlite_logger.h:4:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_observer.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:6:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove constructor of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:38: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                     ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                     delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:16: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m               ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove assignment operator of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:49: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_minitrace_logger.cpp:2:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_minitrace_logger.h:3:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove constructor of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                        ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:46: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                             ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                             delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:20: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                   ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove assignment operator of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                        ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:57: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                        ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                        delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 4 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 4 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": [ 51%] [32m[1mLinking CXX static library libbehaviortree_cpp.a[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 51%] Built target behaviortree_cpp
Step #12 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/bt_fuzzer.dir/fuzzing/bt_fuzzer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding CXX object CMakeFiles/script_fuzzer.dir/fuzzing/script_fuzzer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/bb_fuzzer.dir/fuzzing/bb_fuzzer.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding CXX object sample_nodes/CMakeFiles/crossdoor_nodes_dyn.dir/crossdoor_nodes.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 56%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/crossdoor_nodes.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 57%] [32mBuilding CXX object sample_nodes/CMakeFiles/dummy_nodes_dyn.dir/dummy_nodes.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 58%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/dummy_nodes.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 60%] [32mBuilding CXX object sample_nodes/CMakeFiles/movebase_node_dyn.dir/movebase_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 61%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/movebase_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:96:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":    96 |           bb->get<[0;34mint[0m>(generateKey());[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~ ~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/script_fuzzer.cpp:57:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":    57 |           env.vars->get([0;32m"result"[0m, read_back);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:114:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   114 |             bb->getEntry(existing_key);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:117:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   117 |             bb->get<[0;34mint[0m>(existing_key);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:120:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   120 |             bb->get<[0;34mdouble[0m>(existing_key);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:123:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   123 |             bb->get<std::string>(existing_key);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:79:9: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":    79 |         factory.createTreeFromText(random_xml);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:106:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   106 |           factory.createTreeFromText(xml, blackboard);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:115:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   115 |             factory.createTree(factory.registeredBehaviorTrees().front(), blackboard);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[ 62%] [32m[1mLinking CXX shared library bin/libcrossdoor_nodes_dyn.so[0m
Step #12 - "compile-libfuzzer-address-x86_64": 3 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": [ 63%] [32m[1mLinking CXX executable bt_fuzzer[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 63%] Built target crossdoor_nodes_dyn
Step #12 - "compile-libfuzzer-address-x86_64": [ 64%] [32m[1mLinking CXX static library lib/libbt_sample_nodes.a[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 64%] Built target bt_sample_nodes
Step #12 - "compile-libfuzzer-address-x86_64": [ 65%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/action_test_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/condition_test_node.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_blackboard.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_coroutines.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_any.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 71%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_decorator.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 72%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_enums.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 74%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_factory.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 74%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_fallback.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 75%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_parallel.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 76%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_preconditions.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 77%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_ports.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 78%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_postconditions.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_match.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 81%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_json.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 82%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 83%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive_backchaining.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 84%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_sequence.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_skipping.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 86%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_subtree.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 87%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_substitution.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 91%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_tree.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 91%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_updates.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 91%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_switch.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 92%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_wakeup.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_interface.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 94%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/script_parser_test.cpp.o[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 94%] Built target bt_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": 1 warning generated.
Step #12 - "compile-libfuzzer-address-x86_64": [ 95%] [32m[1mLinking CXX executable script_fuzzer[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 96%] [32m[1mLinking CXX shared library bin/libmovebase_node_dyn.so[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 97%] [32m[1mLinking CXX shared library bin/libdummy_nodes_dyn.so[0m
Step #12 - "compile-libfuzzer-address-x86_64": [ 97%] Built target movebase_node_dyn
Step #12 - "compile-libfuzzer-address-x86_64": [ 97%] Built target script_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": [ 97%] Built target dummy_nodes_dyn
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:16:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_factory.cpp:109:20: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #12 - "compile-libfuzzer-address-x86_64":   109 |   ASSERT_ANY_THROW(factory.createTreeFromText(xml_text));[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/include/gtest/gtest.h:1963:25: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT_ANY_THROW'[0m
Step #12 - "compile-libfuzzer-address-x86_64":  1963 |   GTEST_TEST_ANY_THROW_(statement, GTEST_FATAL_FAILURE_)[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                        ^~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1305:54: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_TEST_ANY_THROW_'[0m
Step #12 - "compile-libfuzzer-address-x86_64":  1305 |       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                     ^~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1258:44: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_'[0m
Step #12 - "compile-libfuzzer-address-x86_64":  1258 |   [0;34mif[0m (::testing::internal::AlwaysTrue()) { statement; }[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                           ^~~~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/tests/gtest_reactive_backchaining.cpp:2:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0mIn file included from /src/behaviortreecpp/tests/gtest_reactive.cpp:4:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                   delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                      ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #12 - "compile-libfuzzer-address-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m             ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m           ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #12 - "compile-libfuzzer-address-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #12 - "compile-libfuzzer-address-x86_64": [0m      | [0;32m                                                              delete
Step #12 - "compile-libfuzzer-address-x86_64": [0m5 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": [ 98%] [32m[1mLinking CXX executable bb_fuzzer[0m
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:14:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /usr/include/gtest/gtest.h:57:
Step #12 - "compile-libfuzzer-address-x86_64": In file included from /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/memory:80:
Step #12 - "compile-libfuzzer-address-x86_64": [1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/unique_ptr.h:857:34: [0m[0;1;35mwarning: [0m[1m'TestNode' is deprecated: prefer the constructor with std::shared_ptr<TestNodeConfig> [-Wdeprecated-declarations][0m
Step #12 - "compile-libfuzzer-address-x86_64":   857 |     { [0;34mreturn[0m unique_ptr<_Tp>([0;34mnew[0m _Tp(std::forward<_Args>(__args)...)); }[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                 ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/tree_node.h:369:19: [0m[0;1;36mnote: [0min instantiation of function template specialization 'std::make_unique<BT::TestNode, const std::basic_string<char> &, const BT::NodeConfig &, BT::TestNodeConfig &>' requested here[0m
Step #12 - "compile-libfuzzer-address-x86_64":   369 |       [0;34mreturn[0m std::make_unique<DerivedT>(name, config, args...);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:37:22: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::TreeNode::Instantiate<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    37 |     [0;34mreturn[0m TreeNode::Instantiate<T, Args...>(name, config, args...);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                     ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:352:51: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::CreateBuilder<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #12 - "compile-libfuzzer-address-x86_64":   352 |     registerBuilder(CreateManifest<T>(ID, ports), CreateBuilder<T>(args...));[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                                                  ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:388:5: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #12 - "compile-libfuzzer-address-x86_64":   388 |     registerNodeType<T>(ID, getProvidedPorts<T>(), args...);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_parallel.cpp:419:11: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #12 - "compile-libfuzzer-address-x86_64":   419 |   factory.registerNodeType<BT::TestNode>([0;32m"GoodTest"[0m, good_config);[0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m          ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/actions/test_node.h:70:5: [0m[0;1;36mnote: [0m'TestNode' has been explicitly marked deprecated here[0m
Step #12 - "compile-libfuzzer-address-x86_64":    70 |   [[deprecated([0;32m"prefer the constructor with std::shared_ptr<TestNodeConfig>"[0m)]] TestNode([0m
Step #12 - "compile-libfuzzer-address-x86_64":       | [0;1;32m    ^
Step #12 - "compile-libfuzzer-address-x86_64": [0m[ 98%] Built target bb_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": 2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 3 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 2 warnings generated.
Step #12 - "compile-libfuzzer-address-x86_64": 1 warning generated.
Step #12 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking CXX executable behaviortree_cpp_test[0m
Step #12 - "compile-libfuzzer-address-x86_64": [100%] Built target behaviortree_cpp_test
Step #12 - "compile-libfuzzer-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": + cp bt_fuzzer /workspace/out/libfuzzer-address-x86_64/
Step #12 - "compile-libfuzzer-address-x86_64": + '[' -d ../fuzzing/corpus/bt_fuzzer ']'
Step #12 - "compile-libfuzzer-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": + cp script_fuzzer /workspace/out/libfuzzer-address-x86_64/
Step #12 - "compile-libfuzzer-address-x86_64": + '[' -d ../fuzzing/corpus/script_fuzzer ']'
Step #12 - "compile-libfuzzer-address-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #12 - "compile-libfuzzer-address-x86_64": + cp bb_fuzzer /workspace/out/libfuzzer-address-x86_64/
Step #12 - "compile-libfuzzer-address-x86_64": + '[' -d ../fuzzing/corpus/bb_fuzzer ']'
Finished Step #12 - "compile-libfuzzer-address-x86_64"
Starting Step #13 - "build-check-libfuzzer-address-x86_64"
Step #13 - "build-check-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #13 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp2f802dnp/script_fuzzer
Step #13 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp2f802dnp/bb_fuzzer
Step #13 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp2f802dnp/bt_fuzzer
Finished Step #13 - "build-check-libfuzzer-address-x86_64"
Starting Step #14
Step #14: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #14
Starting Step #15
Step #15: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Step #15:   adding: bb_fuzzer (deflated 66%)
Step #15:   adding: bt_fuzzer (deflated 68%)
Step #15:   adding: llvm-symbolizer (deflated 65%)
Step #15:   adding: script_fuzzer (deflated 68%)
Finished Step #15
Starting Step #16
Step #16: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #16:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #16:                                  Dload  Upload   Total   Spent    Left  Speed
Step #16:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   176    0     0  100   176      0    928 --:--:-- --:--:-- --:--:--   931
Finished Step #16
Starting Step #17
Step #17: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #17:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #17:                                  Dload  Upload   Total   Spent    Left  Speed
Step #17:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 13.3M    0     0  100 13.3M      0  65.1M --:--:-- --:--:-- --:--:-- 65.0M100 13.3M    0     0  100 13.3M      0  45.7M --:--:-- --:--:-- --:--:-- 45.6M
Finished Step #17
Starting Step #18
Step #18: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #18:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #18:                                  Dload  Upload   Total   Spent    Left  Speed
Step #18:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    141 --:--:-- --:--:-- --:--:--   142
Finished Step #18
Starting Step #19
Step #19: Already have image (with digest): gcr.io/cloud-builders/curl
Step #19:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #19:                                  Dload  Upload   Total   Spent    Left  Speed
Step #19:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    40    0     0  100    40      0    215 --:--:-- --:--:-- --:--:--   215
Finished Step #19
Starting Step #20
Step #20: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Finished Step #20
Starting Step #21 - "compile-libfuzzer-undefined-x86_64"
Step #21 - "compile-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #21 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": vm.mmap_rnd_bits = 28
Step #21 - "compile-libfuzzer-undefined-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #21 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": CC=clang
Step #21 - "compile-libfuzzer-undefined-x86_64": CXX=clang++
Step #21 - "compile-libfuzzer-undefined-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function
Step #21 - "compile-libfuzzer-undefined-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++
Step #21 - "compile-libfuzzer-undefined-x86_64": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #21 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #21 - "compile-libfuzzer-undefined-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++17 -stdlib=libstdc++'
Step #21 - "compile-libfuzzer-undefined-x86_64": + SQLITE_VER=sqlite-autoconf-3480000
Step #21 - "compile-libfuzzer-undefined-x86_64": + wget https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #21 - "compile-libfuzzer-undefined-x86_64": --2025-10-06 06:28:30--  https://www.sqlite.org/2025/sqlite-autoconf-3480000.tar.gz
Step #21 - "compile-libfuzzer-undefined-x86_64": Resolving www.sqlite.org (www.sqlite.org)... 194.195.208.62, 2600:3c02::f03c:95ff:fe07:695
Step #21 - "compile-libfuzzer-undefined-x86_64": Connecting to www.sqlite.org (www.sqlite.org)|194.195.208.62|:443... connected.
Step #21 - "compile-libfuzzer-undefined-x86_64": HTTP request sent, awaiting response... 200 OK
Step #21 - "compile-libfuzzer-undefined-x86_64": Length: 3337615 (3.2M) [application/x-gzip]
Step #21 - "compile-libfuzzer-undefined-x86_64": Saving to: 'sqlite-autoconf-3480000.tar.gz'
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64":           sqlite-au   0%[                    ]       0  --.-KB/s                        sqlite-aut  99%[==================> ]   3.18M  15.4MB/s               sqlite-autoconf-348 100%[===================>]   3.18M  15.4MB/s    in 0.2s    
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64": 2025-10-06 06:28:30 (15.4 MB/s) - 'sqlite-autoconf-3480000.tar.gz' saved [3337615/3337615]
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64": + tar xzf sqlite-autoconf-3480000.tar.gz
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd sqlite-autoconf-3480000
Step #21 - "compile-libfuzzer-undefined-x86_64": + ./configure --enable-static --disable-shared
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether build environment is sane... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for a race-free mkdir -p... /usr/bin/mkdir -p
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for gawk... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for mawk... mawk
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether make sets $(MAKE)... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for gcc... clang
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether the C compiler works... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for C compiler default output file name... a.out
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for suffix of executables... 
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether we are cross compiling... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for suffix of object files... o
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether the compiler supports GNU C... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for clang option to enable C11 features... none needed
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... gcc3
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for special C compiler options needed for large files... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for _FILE_OFFSET_BITS value needed for large files... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for gcc... (cached) clang
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether the compiler supports GNU C... (cached) yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... (cached) yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for clang option to enable C11 features... (cached) none needed
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... (cached) gcc3
Step #21 - "compile-libfuzzer-undefined-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-undefined-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to print strings... printf
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for egrep... /usr/bin/grep -E
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for fgrep... /usr/bin/grep -F
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang... /usr/bin/ld
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #21 - "compile-libfuzzer-undefined-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether ln -s works... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking the maximum length of command line arguments... 1572864
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for file... file
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for objdump... objdump
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to recognize dependent libraries... pass_all
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for dlltool... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for ar... ar
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for archiver @FILE support... @
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for strip... strip
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for ranlib... ranlib
Step #21 - "compile-libfuzzer-undefined-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for sysroot... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for a working dd... /usr/bin/dd
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for mt... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if : is a manifest tool... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for stdio.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for stdlib.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for string.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for inttypes.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for stdint.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for strings.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for sys/stat.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for sys/types.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for unistd.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for dlfcn.h... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for objdir... .libs
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -fno-rtti -fno-exceptions... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if clang static flag -static works... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #21 - "compile-libfuzzer-undefined-x86_64": checking how to hardcode library paths into programs... immediate
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether stripping libraries is possible... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking if libtool supports shared libraries... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether to build shared libraries... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether to build static libraries... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for fdatasync... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for usleep... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for fullfsync... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for localtime_r... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for gmtime_r... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for clang options needed to detect all undeclared functions... -fno-builtin
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether strerror_r is declared... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking whether strerror_r returns char *... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for editline/readline.h... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for readline/readline.h... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing pthread_create... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing pthread_mutexattr_init... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing dlopen... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for whether to support dynamic extensions... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking SQL math functions... enabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing ceil... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking FTS4 extension... enabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking FTS3 extension... disabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking FTS5 extension... enabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing log... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking RTREE extension... enabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking Session extension... disabled
Step #21 - "compile-libfuzzer-undefined-x86_64": checking Build type... release
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for posix_fallocate... yes
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for zlib.h... no
Step #21 - "compile-libfuzzer-undefined-x86_64": checking for library containing system... none required
Step #21 - "compile-libfuzzer-undefined-x86_64": checking that generated files are newer than configure... done
Step #21 - "compile-libfuzzer-undefined-x86_64": configure: creating ./config.status
Step #21 - "compile-libfuzzer-undefined-x86_64": config.status: creating Makefile
Step #21 - "compile-libfuzzer-undefined-x86_64": config.status: creating sqlite3.pc
Step #21 - "compile-libfuzzer-undefined-x86_64": config.status: executing depfiles commands
Step #21 - "compile-libfuzzer-undefined-x86_64": config.status: executing libtool commands
Step #21 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #21 - "compile-libfuzzer-undefined-x86_64": clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT sqlite3-shell.o -MD -MP -MF .deps/sqlite3-shell.Tpo -c -o sqlite3-shell.o `test -f 'shell.c' || echo './'`shell.c
Step #21 - "compile-libfuzzer-undefined-x86_64": clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT sqlite3-sqlite3.o -MD -MP -MF .deps/sqlite3-sqlite3.Tpo -c -o sqlite3-sqlite3.o `test -f 'sqlite3.c' || echo './'`sqlite3.c
Step #21 - "compile-libfuzzer-undefined-x86_64": /bin/bash ./libtool  --tag=CC   --mode=compile clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" -DPACKAGE_STRING=\"sqlite\ 3.48.0\" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I.    -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c -o sqlite3.lo sqlite3.c
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: compile:  clang -DPACKAGE_NAME=\"sqlite\" -DPACKAGE_TARNAME=\"sqlite\" -DPACKAGE_VERSION=\"3.48.0\" "-DPACKAGE_STRING=\"sqlite 3.48.0\"" -DPACKAGE_BUGREPORT=\"http://www.sqlite.org\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sqlite\" -DVERSION=\"3.48.0\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_FDATASYNC=1 -DHAVE_USLEEP=1 -DHAVE_LOCALTIME_R=1 -DHAVE_GMTIME_R=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DHAVE_POSIX_FALLOCATE=1 -I. -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT sqlite3.lo -MD -MP -MF .deps/sqlite3.Tpo -c sqlite3.c -o sqlite3.o
Step #21 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/sqlite3-shell.Tpo .deps/sqlite3-shell.Po
Step #21 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/sqlite3.Tpo .deps/sqlite3.Plo
Step #21 - "compile-libfuzzer-undefined-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -no-undefined -version-info 8:6:8  -o libsqlite3.la -rpath /usr/local/lib sqlite3.lo  
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: link: ar cr .libs/libsqlite3.a  sqlite3.o
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: link: ranlib .libs/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: link: ( cd ".libs" && rm -f "libsqlite3.la" && ln -s "../libsqlite3.la" "libsqlite3.la" )
Step #21 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/sqlite3-sqlite3.Tpo .deps/sqlite3-sqlite3.Po
Step #21 - "compile-libfuzzer-undefined-x86_64": /bin/bash ./libtool  --tag=CC   --mode=link clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY  -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB  -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function   -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o  
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: link: clang -D_REENTRANT=1 -DSQLITE_THREADSAFE=1 -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_GEOPOLY -DSQLITE_ENABLE_EXPLAIN_COMMENTS -DSQLITE_DQS=0 -DSQLITE_ENABLE_DBPAGE_VTAB -DSQLITE_ENABLE_STMTVTAB -DSQLITE_ENABLE_DBSTAT_VTAB -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -o sqlite3 sqlite3-shell.o sqlite3-sqlite3.o 
Step #21 - "compile-libfuzzer-undefined-x86_64": + make install
Step #21 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/usr/local/lib'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /bin/bash ./libtool   --mode=install /usr/bin/install -c   libsqlite3.la '/usr/local/lib'
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.lai /usr/local/lib/libsqlite3.la
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: install: /usr/bin/install -c .libs/libsqlite3.a /usr/local/lib/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: install: chmod 644 /usr/local/lib/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: install: ranlib /usr/local/lib/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /usr/local/lib
Step #21 - "compile-libfuzzer-undefined-x86_64": ----------------------------------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": Libraries have been installed in:
Step #21 - "compile-libfuzzer-undefined-x86_64":    /usr/local/lib
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64": If you ever happen to want to link against installed libraries
Step #21 - "compile-libfuzzer-undefined-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #21 - "compile-libfuzzer-undefined-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #21 - "compile-libfuzzer-undefined-x86_64": flag during linking and do at least one of the following:
Step #21 - "compile-libfuzzer-undefined-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #21 - "compile-libfuzzer-undefined-x86_64":      during execution
Step #21 - "compile-libfuzzer-undefined-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #21 - "compile-libfuzzer-undefined-x86_64":      during linking
Step #21 - "compile-libfuzzer-undefined-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #21 - "compile-libfuzzer-undefined-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64": See any operating system documentation about shared libraries for
Step #21 - "compile-libfuzzer-undefined-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #21 - "compile-libfuzzer-undefined-x86_64": ----------------------------------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/usr/local/bin'
Step #21 - "compile-libfuzzer-undefined-x86_64":   /bin/bash ./libtool   --mode=install /usr/bin/install -c sqlite3 '/usr/local/bin'
Step #21 - "compile-libfuzzer-undefined-x86_64": libtool: install: /usr/bin/install -c sqlite3 /usr/local/bin/sqlite3
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/usr/local/include'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 sqlite3.h sqlite3ext.h '/usr/local/include'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/usr/local/share/man/man1'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 sqlite3.1 '/usr/local/share/man/man1'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/usr/local/lib/pkgconfig'
Step #21 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 sqlite3.pc '/usr/local/lib/pkgconfig'
Step #21 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/behaviortreecpp/sqlite-autoconf-3480000'
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd ..
Step #21 - "compile-libfuzzer-undefined-x86_64": + git clone https://github.com/zeromq/libzmq.git
Step #21 - "compile-libfuzzer-undefined-x86_64": Cloning into 'libzmq'...
Step #21 - "compile-libfuzzer-undefined-x86_64": remote: Enumerating objects: 48514, done.[K
Step #21 - "compile-libfuzzer-undefined-x86_64": remote: Counting objects:   2% (1/42)[Kremote: Counting objects:   4% (2/42)[Kremote: Counting objects:   7% (3/42)[Kremote: Counting objects:   9% (4/42)[Kremote: Counting objects:  11% (5/42)[Kremote: Counting objects:  14% (6/42)[Kremote: Counting objects:  16% (7/42)[Kremote: Counting objects:  19% (8/42)[Kremote: Counting objects:  21% (9/42)[Kremote: Counting objects:  23% (10/42)[Kremote: Counting objects:  26% (11/42)[Kremote: Counting objects:  28% (12/42)[Kremote: Counting objects:  30% (13/42)[Kremote: Counting objects:  33% (14/42)[Kremote: Counting objects:  35% (15/42)[Kremote: Counting objects:  38% (16/42)[Kremote: Counting objects:  40% (17/42)[Kremote: Counting objects:  42% (18/42)[Kremote: Counting objects:  45% (19/42)[Kremote: Counting objects:  47% (20/42)[Kremote: Counting objects:  50% (21/42)[Kremote: Counting objects:  52% (22/42)[Kremote: Counting objects:  54% (23/42)[Kremote: Counting objects:  57% (24/42)[Kremote: Counting objects:  59% (25/42)[Kremote: Counting objects:  61% (26/42)[Kremote: Counting objects:  64% (27/42)[Kremote: Counting objects:  66% (28/42)[Kremote: Counting objects:  69% (29/42)[Kremote: Counting objects:  71% (30/42)[Kremote: Counting objects:  73% (31/42)[Kremote: Counting objects:  76% (32/42)[Kremote: Counting objects:  78% (33/42)[Kremote: Counting objects:  80% (34/42)[Kremote: Counting objects:  83% (35/42)[Kremote: Counting objects:  85% (36/42)[Kremote: Counting objects:  88% (37/42)[Kremote: Counting objects:  90% (38/42)[Kremote: Counting objects:  92% (39/42)[Kremote: Counting objects:  95% (40/42)[Kremote: Counting objects:  97% (41/42)[Kremote: Counting objects: 100% (42/42)[Kremote: Counting objects: 100% (42/42), done.[K
Step #21 - "compile-libfuzzer-undefined-x86_64": remote: Compressing objects:   2% (1/34)[Kremote: Compressing objects:   5% (2/34)[Kremote: Compressing objects:   8% (3/34)[Kremote: Compressing objects:  11% (4/34)[Kremote: Compressing objects:  14% (5/34)[Kremote: Compressing objects:  17% (6/34)[Kremote: Compressing objects:  20% (7/34)[Kremote: Compressing objects:  23% (8/34)[Kremote: Compressing objects:  26% (9/34)[Kremote: Compressing objects:  29% (10/34)[Kremote: Compressing objects:  32% (11/34)[Kremote: Compressing objects:  35% (12/34)[Kremote: Compressing objects:  38% (13/34)[Kremote: Compressing objects:  41% (14/34)[Kremote: Compressing objects:  44% (15/34)[Kremote: Compressing objects:  47% (16/34)[Kremote: Compressing objects:  50% (17/34)[Kremote: Compressing objects:  52% (18/34)[Kremote: Compressing objects:  55% (19/34)[Kremote: Compressing objects:  58% (20/34)[Kremote: Compressing objects:  61% (21/34)[Kremote: Compressing objects:  64% (22/34)[Kremote: Compressing objects:  67% (23/34)[Kremote: Compressing objects:  70% (24/34)[Kremote: Compressing objects:  73% (25/34)[Kremote: Compressing objects:  76% (26/34)[Kremote: Compressing objects:  79% (27/34)[Kremote: Compressing objects:  82% (28/34)[Kremote: Compressing objects:  85% (29/34)[Kremote: Compressing objects:  88% (30/34)[Kremote: Compressing objects:  91% (31/34)[Kremote: Compressing objects:  94% (32/34)[Kremote: Compressing objects:  97% (33/34)[Kremote: Compressing objects: 100% (34/34)[Kremote: Compressing objects: 100% (34/34), done.[K
Step #21 - "compile-libfuzzer-undefined-x86_64": Receiving objects:   0% (1/48514)Receiving objects:   1% (486/48514)Receiving objects:   2% (971/48514)Receiving objects:   3% (1456/48514)Receiving objects:   4% (1941/48514)Receiving objects:   5% (2426/48514)Receiving objects:   6% (2911/48514)Receiving objects:   7% (3396/48514)Receiving objects:   8% (3882/48514)Receiving objects:   9% (4367/48514)Receiving objects:  10% (4852/48514)Receiving objects:  11% (5337/48514)Receiving objects:  12% (5822/48514)Receiving objects:  13% (6307/48514)Receiving objects:  14% (6792/48514)Receiving objects:  15% (7278/48514)Receiving objects:  16% (7763/48514)Receiving objects:  17% (8248/48514)Receiving objects:  18% (8733/48514)Receiving objects:  19% (9218/48514)Receiving objects:  20% (9703/48514)Receiving objects:  21% (10188/48514)Receiving objects:  22% (10674/48514)Receiving objects:  23% (11159/48514)Receiving objects:  24% (11644/48514)Receiving objects:  25% (12129/48514)Receiving objects:  26% (12614/48514)Receiving objects:  27% (13099/48514)Receiving objects:  28% (13584/48514)Receiving objects:  29% (14070/48514)Receiving objects:  30% (14555/48514)Receiving objects:  31% (15040/48514)Receiving objects:  32% (15525/48514)Receiving objects:  33% (16010/48514)Receiving objects:  34% (16495/48514)Receiving objects:  35% (16980/48514)Receiving objects:  36% (17466/48514)Receiving objects:  37% (17951/48514)Receiving objects:  38% (18436/48514)Receiving objects:  39% (18921/48514)Receiving objects:  40% (19406/48514)Receiving objects:  41% (19891/48514)Receiving objects:  42% (20376/48514)Receiving objects:  43% (20862/48514)Receiving objects:  44% (21347/48514)Receiving objects:  45% (21832/48514)Receiving objects:  46% (22317/48514)Receiving objects:  47% (22802/48514)Receiving objects:  48% (23287/48514)Receiving objects:  49% (23772/48514)Receiving objects:  50% (24257/48514)Receiving objects:  51% (24743/48514)Receiving objects:  52% (25228/48514)Receiving objects:  53% (25713/48514)Receiving objects:  54% (26198/48514)Receiving objects:  55% (26683/48514)Receiving objects:  56% (27168/48514)Receiving objects:  57% (27653/48514)Receiving objects:  58% (28139/48514)Receiving objects:  59% (28624/48514)Receiving objects:  60% (29109/48514)Receiving objects:  61% (29594/48514)Receiving objects:  62% (30079/48514)Receiving objects:  63% (30564/48514)Receiving objects:  64% (31049/48514)Receiving objects:  65% (31535/48514)Receiving objects:  66% (32020/48514)Receiving objects:  67% (32505/48514)Receiving objects:  68% (32990/48514)Receiving objects:  69% (33475/48514)Receiving objects:  70% (33960/48514)Receiving objects:  71% (34445/48514)Receiving objects:  72% (34931/48514)Receiving objects:  73% (35416/48514)Receiving objects:  74% (35901/48514)Receiving objects:  75% (36386/48514)Receiving objects:  76% (36871/48514)Receiving objects:  77% (37356/48514)Receiving objects:  78% (37841/48514)Receiving objects:  79% (38327/48514)Receiving objects:  80% (38812/48514)Receiving objects:  81% (39297/48514)Receiving objects:  82% (39782/48514)Receiving objects:  83% (40267/48514)Receiving objects:  84% (40752/48514)Receiving objects:  85% (41237/48514)Receiving objects:  86% (41723/48514)Receiving objects:  87% (42208/48514)Receiving objects:  88% (42693/48514)Receiving objects:  89% (43178/48514)Receiving objects:  90% (43663/48514)Receiving objects:  91% (44148/48514)Receiving objects:  92% (44633/48514)Receiving objects:  93% (45119/48514)Receiving objects:  94% (45604/48514)Receiving objects:  95% (46089/48514)Receiving objects:  96% (46574/48514)Receiving objects:  97% (47059/48514)Receiving objects:  98% (47544/48514)Receiving objects:  99% (48029/48514)remote: Total 48514 (delta 16), reused 8 (delta 8), pack-reused 48472 (from 2)[K
Step #21 - "compile-libfuzzer-undefined-x86_64": Receiving objects: 100% (48514/48514)Receiving objects: 100% (48514/48514), 23.52 MiB | 47.98 MiB/s, done.
Step #21 - "compile-libfuzzer-undefined-x86_64": Resolving deltas:   0% (0/35150)Resolving deltas:   1% (362/35150)Resolving deltas:   2% (718/35150)Resolving deltas:   3% (1061/35150)Resolving deltas:   4% (1498/35150)Resolving deltas:   5% (1759/35150)Resolving deltas:   6% (2137/35150)Resolving deltas:   7% (2462/35150)Resolving deltas:   8% (2825/35150)Resolving deltas:   9% (3191/35150)Resolving deltas:  10% (3521/35150)Resolving deltas:  11% (3869/35150)Resolving deltas:  12% (4218/35150)Resolving deltas:  13% (4575/35150)Resolving deltas:  14% (4941/35150)Resolving deltas:  15% (5279/35150)Resolving deltas:  16% (5631/35150)Resolving deltas:  17% (6014/35150)Resolving deltas:  18% (6328/35150)Resolving deltas:  19% (6683/35150)Resolving deltas:  20% (7075/35150)Resolving deltas:  21% (7387/35150)Resolving deltas:  22% (7733/35150)Resolving deltas:  23% (8096/35150)Resolving deltas:  24% (8452/35150)Resolving deltas:  25% (8842/35150)Resolving deltas:  26% (9218/35150)Resolving deltas:  27% (9493/35150)Resolving deltas:  28% (9843/35150)Resolving deltas:  29% (10199/35150)Resolving deltas:  30% (10639/35150)Resolving deltas:  31% (11030/35150)Resolving deltas:  32% (11346/35150)Resolving deltas:  33% (11607/35150)Resolving deltas:  34% (12028/35150)Resolving deltas:  35% (12320/35150)Resolving deltas:  36% (12654/35150)Resolving deltas:  37% (13029/35150)Resolving deltas:  38% (13430/35150)Resolving deltas:  39% (13714/35150)Resolving deltas:  40% (14075/35150)Resolving deltas:  41% (14583/35150)Resolving deltas:  42% (14766/35150)Resolving deltas:  43% (15159/35150)Resolving deltas:  44% (15485/35150)Resolving deltas:  45% (15829/35150)Resolving deltas:  46% (16217/35150)Resolving deltas:  47% (16531/35150)Resolving deltas:  48% (16919/35150)Resolving deltas:  49% (17266/35150)Resolving deltas:  50% (17624/35150)Resolving deltas:  51% (17941/35150)Resolving deltas:  52% (18295/35150)Resolving deltas:  53% (18639/35150)Resolving deltas:  54% (19045/35150)Resolving deltas:  55% (19403/35150)Resolving deltas:  56% (19701/35150)Resolving deltas:  57% (20134/35150)Resolving deltas:  58% (20451/35150)Resolving deltas:  59% (20875/35150)Resolving deltas:  60% (21108/35150)Resolving deltas:  62% (21886/35150)Resolving deltas:  63% (22158/35150)Resolving deltas:  64% (22563/35150)Resolving deltas:  65% (22850/35150)Resolving deltas:  66% (23205/35150)Resolving deltas:  68% (23927/35150)Resolving deltas:  69% (24259/35150)Resolving deltas:  70% (24654/35150)Resolving deltas:  71% (24971/35150)Resolving deltas:  72% (25315/35150)Resolving deltas:  73% (25683/35150)Resolving deltas:  74% (26024/35150)Resolving deltas:  75% (26437/35150)Resolving deltas:  76% (26720/35150)Resolving deltas:  77% (27068/35150)Resolving deltas:  78% (27422/35150)Resolving deltas:  79% (27874/35150)Resolving deltas:  80% (28128/35150)Resolving deltas:  81% (28504/35150)Resolving deltas:  82% (28855/35150)Resolving deltas:  83% (29180/35150)Resolving deltas:  84% (29573/35150)Resolving deltas:  85% (29957/35150)Resolving deltas:  86% (30238/35150)Resolving deltas:  87% (30593/35150)Resolving deltas:  88% (30966/35150)Resolving deltas:  89% (31340/35150)Resolving deltas:  90% (31644/35150)Resolving deltas:  91% (32072/35150)Resolving deltas:  92% (32360/35150)Resolving deltas:  93% (32707/35150)Resolving deltas:  94% (33090/35150)Resolving deltas:  95% (33394/35150)Resolving deltas:  96% (33746/35150)Resolving deltas:  97% (34099/35150)Resolving deltas:  98% (34452/35150)Resolving deltas:  99% (34803/35150)Resolving deltas: 100% (35150/35150)Resolving deltas: 100% (35150/35150), done.
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd libzmq
Step #21 - "compile-libfuzzer-undefined-x86_64": + mkdir build
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd build
Step #21 - "compile-libfuzzer-undefined-x86_64": + cmake .. -DBUILD_SHARED=OFF -DBUILD_STATIC=ON -DZMQ_BUILD_TESTS=OFF
Step #21 - "compile-libfuzzer-undefined-x86_64": -- The C compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-undefined-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found Threads: TRUE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detected ZMQ Version - 4.3.6
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test COMPILER_SUPPORTS_C11
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test COMPILER_SUPPORTS_C11 - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CXX_HAS_TAUT_WARNING - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CC_HAS_TAUT_WARNING
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CC_HAS_TAUT_WARNING - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Building draft classes and methods
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using radix tree implementation to manage subscriptions
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Enable WebSocket transport
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Could NOT find GnuTLS (missing: GNUTLS_LIBRARY GNUTLS_INCLUDE_DIR) (Required is at least version "3.6.7")
Step #21 - "compile-libfuzzer-undefined-x86_64": [33mCMake Warning at CMakeLists.txt:215 (message):
Step #21 - "compile-libfuzzer-undefined-x86_64":   No WSS support, you may want to install GnuTLS and run cmake again
Step #21 - "compile-libfuzzer-undefined-x86_64": 
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using builtin sha1
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking for module 'libbsd'
Step #21 - "compile-libfuzzer-undefined-x86_64": --   No package 'libbsd' found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for strlcpy
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for strlcpy - not found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- CURVE security is disabled
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for kqueue
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for kqueue - not found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for epoll_create
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for epoll_create - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for epoll_create1
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for epoll_create1 - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using polling method in I/O threads: epoll
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using polling method in zmq_poll(er)_* API: poll
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for pselect
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for pselect - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using 64 bytes alignment for lock-free data structures
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for posix_memalign
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for posix_memalign - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file windows.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file windows.h - not found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file condition_variable
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file condition_variable - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Using condition_variable_t implementation: stl11
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file ifaddrs.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file ifaddrs.h - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file sys/uio.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file sys/uio.h - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file sys/eventfd.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for include file sys/eventfd.h - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether EFD_CLOEXEC is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_EVENTFD_CLOEXEC - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for if_nametoindex
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for if_nametoindex - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for SO_PEERCRED
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for SO_PEERCRED - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for LOCAL_PEERCRED
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for LOCAL_PEERCRED - not found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for SO_BUSY_POLL
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for SO_BUSY_POLL - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for clock_gettime
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for clock_gettime - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for fork
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for fork - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for gethrtime
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for gethrtime - not found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for mkdtemp
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for mkdtemp - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for accept4
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for accept4 - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for strnlen
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Looking for strnlen - found
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wall
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wall - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wextra
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wextra - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wno-long-long - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-Wno-uninitialized - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-pedantic
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test HAVE_FLAG_-pedantic - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether noexcept is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_NOEXCEPT - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking pthread_setname signature
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_1 - Failed
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_2 - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SETNAME_3 - Failed
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_NAME - Failed
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking pthread_setaffinity signature
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_PTHREAD_SET_AFFINITY - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether SOCK_CLOEXEC is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SOCK_CLOEXEC - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether O_CLOEXEC is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_O_CLOEXEC - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether SO_BINDTODEVICE is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_BINDTODEVICE - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether SO_KEEPALIVE is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_KEEPALIVE - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether SO_PRIORITY is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_SO_PRIORITY - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether TCP_KEEPCNT is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPCNT - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether TCP_KEEPIDLE is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPIDLE - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether TCP_KEEPINTVL is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPINTVL - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether TCP_KEEPALIVE is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TCP_KEEPALIVE - Failed
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether TIPC is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TIPC
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_TIPC - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Checking whether getrandom is supported
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test ZMQ_HAVE_GETRANDOM - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Could NOT find AsciiDoctor (missing: ASCIIDOCTOR_EXECUTABLE) 
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Configuring done (6.5s)
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Generating done (0.0s)
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Build files have been written to: /src/behaviortreecpp/libzmq/build
Step #21 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #21 - "compile-libfuzzer-undefined-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_connecter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_decoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_engine.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_encoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ws_listener.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  6%] [32mBuilding C object CMakeFiles/objects.dir/external/sha1/sha1.c.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/objects.dir/src/address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  8%] [32mBuilding CXX object CMakeFiles/objects.dir/src/precompiled.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  9%] [32mBuilding CXX object CMakeFiles/objects.dir/src/channel.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/objects.dir/src/client.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/objects.dir/src/clock.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ctx.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_mechanism_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_client.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dealer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/objects.dir/src/curve_server.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/objects.dir/src/devpoll.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dgram.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/endpoint.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dist.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 19%] [32mBuilding CXX object CMakeFiles/objects.dir/src/epoll.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/objects.dir/src/err.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 21%] [32mBuilding CXX object CMakeFiles/objects.dir/src/fq.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_thread.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/objects.dir/src/io_object.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 25%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_connecter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/objects.dir/src/kqueue.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ipc_listener.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/objects.dir/src/lb.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 29%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mailbox_safe.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 31%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mechanism_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/metadata.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 33%] [32mBuilding CXX object CMakeFiles/objects.dir/src/msg.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/objects.dir/src/mtrie.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/objects.dir/src/norm_engine.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/objects.dir/src/object.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 37%] [32mBuilding CXX object CMakeFiles/objects.dir/src/options.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/objects.dir/src/own.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 39%] [32mBuilding CXX object CMakeFiles/objects.dir/src/null_mechanism.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pair.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/objects.dir/src/peer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_receiver.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 42%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_sender.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pgm_socket.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pipe.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_client.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/objects.dir/src/plain_server.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poll.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/poller_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/objects.dir/src/polling_util.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 49%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pollset.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/objects.dir/src/proxy.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pub.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/objects.dir/src/pull.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 53%] [32mBuilding CXX object CMakeFiles/objects.dir/src/push.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/objects.dir/src/random.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 55%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_encoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 55%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_decoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 56%] [32mBuilding CXX object CMakeFiles/objects.dir/src/raw_engine.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 57%] [32mBuilding CXX object CMakeFiles/objects.dir/src/reaper.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 58%] [32mBuilding CXX object CMakeFiles/objects.dir/src/rep.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 59%] [32mBuilding CXX object CMakeFiles/objects.dir/src/req.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 60%] [32mBuilding CXX object CMakeFiles/objects.dir/src/router.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 61%] [32mBuilding CXX object CMakeFiles/objects.dir/src/select.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/server.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 62%] [32mBuilding CXX object CMakeFiles/objects.dir/src/session_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 63%] [32mBuilding CXX object CMakeFiles/objects.dir/src/signaler.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 64%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 65%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 66%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socks_connecter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 67%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 68%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_engine_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/sub.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 69%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 70%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 71%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_connecter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 72%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tcp_listener.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 73%] [32mBuilding CXX object CMakeFiles/objects.dir/src/thread.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 74%] [32mBuilding CXX object CMakeFiles/objects.dir/src/trie.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 75%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radix_tree.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_encoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 76%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v1_decoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 77%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_decoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 78%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v2_encoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 79%] [32mBuilding CXX object CMakeFiles/objects.dir/src/v3_1_encoder.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 80%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xpub.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 81%] [32mBuilding CXX object CMakeFiles/objects.dir/src/xsub.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 82%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmq_utils.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 83%] [32mBuilding CXX object CMakeFiles/objects.dir/src/decoder_allocators.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 84%] [32mBuilding CXX object CMakeFiles/objects.dir/src/socket_poller.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 85%] [32mBuilding CXX object CMakeFiles/objects.dir/src/timers.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 86%] [32mBuilding CXX object CMakeFiles/objects.dir/src/radio.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 87%] [32mBuilding CXX object CMakeFiles/objects.dir/src/dish.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 88%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_engine.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 89%] [32mBuilding CXX object CMakeFiles/objects.dir/src/udp_address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/scatter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 90%] [32mBuilding CXX object CMakeFiles/objects.dir/src/gather.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 91%] [32mBuilding CXX object CMakeFiles/objects.dir/src/ip_resolver.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 92%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zap_client.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 93%] [32mBuilding CXX object CMakeFiles/objects.dir/src/zmtp_engine.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 94%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_connecter_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 95%] [32mBuilding CXX object CMakeFiles/objects.dir/src/stream_listener_base.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 96%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_address.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 97%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_connecter.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 98%] [32mBuilding CXX object CMakeFiles/objects.dir/src/tipc_listener.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 98%] Built target objects
Step #21 - "compile-libfuzzer-undefined-x86_64": [100%] [32m[1mLinking CXX static library lib/libzmq.a[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [100%] Built target libzmq-static
Step #21 - "compile-libfuzzer-undefined-x86_64": + make install
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 98%] Built target objects
Step #21 - "compile-libfuzzer-undefined-x86_64": [100%] Built target libzmq-static
Step #21 - "compile-libfuzzer-undefined-x86_64": [36mInstall the project...[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Install configuration: "Release"
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/pkgconfig/libzmq.pc
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/libzmq.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/include/zmq.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/include/zmq_utils.h
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/share/zmq/AUTHORS.txt
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/share/zmq/LICENSE.txt
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/share/zmq/NEWS.txt
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets.cmake
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQTargets-release.cmake
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfig.cmake
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Installing: /usr/local/lib/cmake/ZeroMQ/ZeroMQConfigVersion.cmake
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd ../..
Step #21 - "compile-libfuzzer-undefined-x86_64": + mkdir build
Step #21 - "compile-libfuzzer-undefined-x86_64": + cd build
Step #21 - "compile-libfuzzer-undefined-x86_64": + CMAKE_FLAGS=("-DCMAKE_BUILD_TYPE=Release" "-DENABLE_FUZZING=ON" "-DFORCE_STATIC_LINKING=ON")
Step #21 - "compile-libfuzzer-undefined-x86_64": + cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_FUZZING=ON -DFORCE_STATIC_LINKING=ON
Step #21 - "compile-libfuzzer-undefined-x86_64": -- The C compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-undefined-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features - done
Step #21 - "compile-libfuzzer-undefined-x86_64": -- OSS-Fuzz environment detected
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found Threads: TRUE
Step #21 - "compile-libfuzzer-undefined-x86_64": -- ------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": -- BehaviorTree is being built with conan.
Step #21 - "compile-libfuzzer-undefined-x86_64": -- ------------------------------------------
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found ZeroMQ: /usr/local/lib/libzmq.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- ZeroMQ_LIBRARIES: /usr/local/lib/libzmq.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found SQLite3: /usr/local/include (found version "3.48.0")
Step #21 - "compile-libfuzzer-undefined-x86_64": -- SQLite3_LIBRARIES: /usr/local/lib/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- BTCPP_EXTRA_LIBRARIES: /usr/local/lib/libzmq.a;/usr/local/lib/libsqlite3.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- BTCPP_LIB_DESTINATION:   lib 
Step #21 - "compile-libfuzzer-undefined-x86_64": -- BTCPP_INCLUDE_DESTINATION: include 
Step #21 - "compile-libfuzzer-undefined-x86_64": -- BUILD_TESTING:   ON 
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Found GTest: /usr/lib/x86_64-linux-gnu/libgtest.a
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Configuring done (0.8s)
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Generating done (0.0s)
Step #21 - "compile-libfuzzer-undefined-x86_64": -- Build files have been written to: /src/behaviortreecpp/build
Step #21 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #21 - "compile-libfuzzer-undefined-x86_64": [  1%] [32mBuilding CXX object CMakeFiles/minitrace.dir/3rdparty/minitrace/minitrace.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  2%] [32mBuilding CXX object 3rdparty/lexy/src/CMakeFiles/lexy_file.dir/input/file.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  3%] [32m[1mLinking CXX static library liblexy_file.a[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  3%] Built target lexy_file
Step #21 - "compile-libfuzzer-undefined-x86_64": [  4%] [32m[1mLinking CXX static library libminitrace.a[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  4%] Built target minitrace
Step #21 - "compile-libfuzzer-undefined-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/action_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/basic_types.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/behavior_tree.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/blackboard.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 10%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/bt_factory.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 11%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorator_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 12%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/condition_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 13%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/control_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 14%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 15%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/tree_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 16%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/script_parser.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 17%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/json_export.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 18%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/xml_parsing.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 20%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/test_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/sleep_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 22%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/actions/updated_action.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 23%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/delay_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 24%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/inverter_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 25%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/repeat_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 26%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/retry_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 27%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/subtree_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 28%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/timeout_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 30%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/decorators/updated_decorator.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/if_then_else_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 32%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/fallback_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_all_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 34%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/parallel_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 35%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_sequence.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 36%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/reactive_fallback.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 37%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 38%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/sequence_with_memory_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 40%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/switch_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 41%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/controls/while_do_else_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 42%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_cout_logger.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 43%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_file_logger_v2.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 44%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_minitrace_logger.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 45%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_observer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 46%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/3rdparty/tinyxml2/tinyxml2.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 47%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/groot2_publisher.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 48%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/loggers/bt_sqlite_logger.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 50%] [32mBuilding CXX object CMakeFiles/behaviortree_cpp.dir/src/shared_library_UNIX.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/src/loggers/bt_cout_logger.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_cout_logger.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_minitrace_logger.cpp:2:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_minitrace_logger.h:3:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_observer.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:6:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_sqlite_logger.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_sqlite_logger.h:4:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/bt_file_logger_v2.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove constructor of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:38:38: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    38 |   FileLogger2(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                     ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                     delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:16: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m               ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:23:21: [0m[0;1;36mnote: [0mmove assignment operator of 'FileLogger2' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    23 | [0;34mclass[0m FileLogger2 : [0;34mpublic[0m StatusChangeLogger[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_file_logger_v2.h:39:49: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    39 |   FileLogger2& [0;34moperator[0m=(FileLogger2&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/src/loggers/groot2_publisher.cpp:1:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove constructor of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                        ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:21:3: [0m[0;1;36mnote: [0m'StatusChangeLogger' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    21 |   StatusChangeLogger([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:34:46: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    34 |   Groot2Publisher(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                             ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                             delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:20: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                   ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:19:25: [0m[0;1;36mnote: [0mmove assignment operator of 'Groot2Publisher' is implicitly deleted because base class 'StatusChangeLogger' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    19 | [0;34mclass[0m Groot2Publisher : [0;34mpublic[0m StatusChangeLogger[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                        ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:22:23: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    22 |   StatusChangeLogger& [0;34moperator[0m=([0;34mconst[0m StatusChangeLogger& other) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/groot2_publisher.h:35:57: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    35 |   Groot2Publisher& [0;34moperator[0m=(Groot2Publisher&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                        ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                        delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 4 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 4 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 51%] [32m[1mLinking CXX static library libbehaviortree_cpp.a[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 51%] Built target behaviortree_cpp
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 52%] [32mBuilding CXX object CMakeFiles/bt_fuzzer.dir/fuzzing/bt_fuzzer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 53%] [32mBuilding CXX object CMakeFiles/script_fuzzer.dir/fuzzing/script_fuzzer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 54%] [32mBuilding CXX object CMakeFiles/bb_fuzzer.dir/fuzzing/bb_fuzzer.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 55%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/crossdoor_nodes.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 57%] [32mBuilding CXX object sample_nodes/CMakeFiles/crossdoor_nodes_dyn.dir/crossdoor_nodes.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 57%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/dummy_nodes.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 58%] [32mBuilding CXX object sample_nodes/CMakeFiles/bt_sample_nodes.dir/movebase_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 60%] [32mBuilding CXX object sample_nodes/CMakeFiles/dummy_nodes_dyn.dir/dummy_nodes.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 61%] [32mBuilding CXX object sample_nodes/CMakeFiles/movebase_node_dyn.dir/movebase_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:96:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    96 |           bb->get<[0;34mint[0m>(generateKey());[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m          ^~~~~~~~~~~~ ~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:114:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   114 |             bb->getEntry(existing_key);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:117:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   117 |             bb->get<[0;34mint[0m>(existing_key);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m            ^~~~~~~~~~~~ ~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:120:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   120 |             bb->get<[0;34mdouble[0m>(existing_key);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bb_fuzzer.cpp:123:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   123 |             bb->get<std::string>(existing_key);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/script_fuzzer.cpp:57:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    57 |           env.vars->get([0;32m"result"[0m, read_back);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:79:9: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    79 |         factory.createTreeFromText(random_xml);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m        ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:106:11: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   106 |           factory.createTreeFromText(xml, blackboard);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m          ^~~~~~~~~~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/fuzzing/bt_fuzzer.cpp:115:13: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   115 |             factory.createTree(factory.registeredBehaviorTrees().front(), blackboard);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m            ^~~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[ 62%] [32m[1mLinking CXX shared library bin/libcrossdoor_nodes_dyn.so[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": 3 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 63%] [32m[1mLinking CXX executable bt_fuzzer[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 63%] Built target crossdoor_nodes_dyn
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 63%] Built target bt_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 64%] [32m[1mLinking CXX static library lib/libbt_sample_nodes.a[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 64%] Built target bt_sample_nodes
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 65%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/action_test_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 67%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/src/condition_test_node.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 67%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_any.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 68%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_blackboard.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 70%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_coroutines.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 71%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_decorator.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 73%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_factory.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 73%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_enums.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 74%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_fallback.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 75%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_parallel.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 76%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_preconditions.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 77%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_ports.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 78%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_postconditions.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 80%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_match.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 82%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_json.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 82%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 83%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_reactive_backchaining.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 84%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_sequence.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 86%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_skipping.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 86%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_substitution.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 87%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_subtree.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 88%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_switch.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 90%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_tree.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 91%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_updates.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 93%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_wakeup.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 94%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/gtest_interface.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 94%] [32mBuilding CXX object tests/CMakeFiles/behaviortree_cpp_test.dir/script_parser_test.cpp.o[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": 1 warning generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 95%] [32m[1mLinking CXX executable script_fuzzer[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 96%] [32m[1mLinking CXX shared library bin/libmovebase_node_dyn.so[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 96%] Built target script_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 96%] Built target movebase_node_dyn
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 97%] [32m[1mLinking CXX shared library bin/libdummy_nodes_dyn.so[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 97%] Built target dummy_nodes_dyn
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:16:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;In file included from /src/behaviortreecpp/tests/gtest_reactive_backchaining.cpp:2:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusC
Step #21 - "compile-libfuzzer-undefined-x86_64": h[0ma      n| g[0;32me                                                              deleteL
Step #21 - "compile-libfuzzer-undefined-x86_64": o[0mgger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_factory.cpp:109:20: [0m[0;1;35mwarning: [0m[1mignoring return value of function declared with 'nodiscard' attribute [-Wunused-result][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   109 |   ASSERT_ANY_THROW(factory.createTreeFromText(xml_text));[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/include/gtest/gtest.h:1963:25: [0m[0;1;36mnote: [0mexpanded from macro 'ASSERT_ANY_THROW'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":  1963 |   GTEST_TEST_ANY_THROW_(statement, GTEST_FATAL_FAILURE_)[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                        ^~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1305:54: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_TEST_ANY_THROW_'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":  1305 |       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                     ^~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/include/gtest/internal/gtest-internal.h:1258:44: [0m[0;1;36mnote: [0mexpanded from macro 'GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":  1258 |   [0;34mif[0m (::testing::internal::AlwaysTrue()) { statement; }[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                           ^~~~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0mIn file included from /src/behaviortreecpp/tests/gtest_reactive.cpp:4:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/include/behaviortree_cpp/loggers/bt_observer.h:5:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:3: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move constructor is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove constructor of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move constructor[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:94:5: [0m[0;1;36mnote: [0m'mutex' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    94 |     mutex([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:24:52: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    24 |   StatusChangeLogger(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                   ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                   delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:23: [0m[0;1;35mwarning: [0m[1mexplicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                      ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:64:14: [0m[0;1;36mnote: [0mmove assignment operator of 'StatusChangeLogger' is implicitly deleted because field 'callback_mutex_' has a deleted move assignment operator[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    64 |   std::mutex callback_mutex_;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m             ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_mutex.h:95:12: [0m[0;1;36mnote: [0m'operator=' has been explicitly marked deleted here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    95 |     mutex& [0;34moperator[0m=([0;34mconst[0m mutex&) = [0;34mdelete[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m           ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/loggers/abstract_logger.h:25:63: [0m[0;1;36mnote: [0mreplace 'default' with 'delete'[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    25 |   StatusChangeLogger& [0;34moperator[0m=(StatusChangeLogger&& other) = [0;34mdefault[0m;[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                              ^~~~~~~
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m      | [0;32m                                                              delete
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m5 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 98%] [32m[1mLinking CXX executable bb_fuzzer[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [ 98%] Built target bb_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /src/behaviortreecpp/tests/gtest_parallel.cpp:14:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /usr/include/gtest/gtest.h:57:
Step #21 - "compile-libfuzzer-undefined-x86_64": In file included from /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/memory:80:
Step #21 - "compile-libfuzzer-undefined-x86_64": [1m/usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/unique_ptr.h:857:34: [0m[0;1;35mwarning: [0m[1m'TestNode' is deprecated: prefer the constructor with std::shared_ptr<TestNodeConfig> [-Wdeprecated-declarations][0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   857 |     { [0;34mreturn[0m unique_ptr<_Tp>([0;34mnew[0m _Tp(std::forward<_Args>(__args)...)); }[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                 ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/tree_node.h:369:19: [0m[0;1;36mnote: [0min instantiation of function template specialization 'std::make_unique<BT::TestNode, const std::basic_string<char> &, const BT::NodeConfig &, BT::TestNodeConfig &>' requested here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   369 |       [0;34mreturn[0m std::make_unique<DerivedT>(name, config, args...);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:37:22: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::TreeNode::Instantiate<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    37 |     [0;34mreturn[0m TreeNode::Instantiate<T, Args...>(name, config, args...);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                     ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:352:51: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::CreateBuilder<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   352 |     registerBuilder(CreateManifest<T>(ID, ports), CreateBuilder<T>(args...));[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m                                                  ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/bt_factory.h:388:5: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   388 |     registerNodeType<T>(ID, getProvidedPorts<T>(), args...);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/tests/gtest_parallel.cpp:419:11: [0m[0;1;36mnote: [0min instantiation of function template specialization 'BT::BehaviorTreeFactory::registerNodeType<BT::TestNode, BT::TestNodeConfig>' requested here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":   419 |   factory.registerNodeType<BT::TestNode>([0;32m"GoodTest"[0m, good_config);[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m          ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m[1m/src/behaviortreecpp/include/behaviortree_cpp/actions/test_node.h:70:5: [0m[0;1;36mnote: [0m'TestNode' has been explicitly marked deprecated here[0m
Step #21 - "compile-libfuzzer-undefined-x86_64":    70 |   [[deprecated([0;32m"prefer the constructor with std::shared_ptr<TestNodeConfig>"[0m)]] TestNode([0m
Step #21 - "compile-libfuzzer-undefined-x86_64":       | [0;1;32m    ^
Step #21 - "compile-libfuzzer-undefined-x86_64": [0m2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 2 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 1 warning generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": 3 warnings generated.
Step #21 - "compile-libfuzzer-undefined-x86_64": [100%] [32m[1mLinking CXX executable behaviortree_cpp_test[0m
Step #21 - "compile-libfuzzer-undefined-x86_64": [100%] Built target behaviortree_cpp_test
Step #21 - "compile-libfuzzer-undefined-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": + cp bt_fuzzer /workspace/out/libfuzzer-undefined-x86_64/
Step #21 - "compile-libfuzzer-undefined-x86_64": + '[' -d ../fuzzing/corpus/bt_fuzzer ']'
Step #21 - "compile-libfuzzer-undefined-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": + cp script_fuzzer /workspace/out/libfuzzer-undefined-x86_64/
Step #21 - "compile-libfuzzer-undefined-x86_64": + '[' -d ../fuzzing/corpus/script_fuzzer ']'
Step #21 - "compile-libfuzzer-undefined-x86_64": + for fuzzer in bt_fuzzer script_fuzzer bb_fuzzer
Step #21 - "compile-libfuzzer-undefined-x86_64": + cp bb_fuzzer /workspace/out/libfuzzer-undefined-x86_64/
Step #21 - "compile-libfuzzer-undefined-x86_64": + '[' -d ../fuzzing/corpus/bb_fuzzer ']'
Finished Step #21 - "compile-libfuzzer-undefined-x86_64"
Starting Step #22 - "build-check-libfuzzer-undefined-x86_64"
Step #22 - "build-check-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #22 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpnjyam5t2/script_fuzzer
Step #22 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpnjyam5t2/bb_fuzzer
Step #22 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpnjyam5t2/bt_fuzzer
Finished Step #22 - "build-check-libfuzzer-undefined-x86_64"
Starting Step #23
Step #23: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #23
Starting Step #24
Step #24: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Step #24:   adding: bb_fuzzer (deflated 67%)
Step #24:   adding: bt_fuzzer (deflated 70%)
Step #24:   adding: llvm-symbolizer (deflated 65%)
Step #24:   adding: script_fuzzer (deflated 68%)
Finished Step #24
Starting Step #25
Step #25: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #25:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #25:                                  Dload  Upload   Total   Spent    Left  Speed
Step #25:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   176    0     0  100   176      0    967 --:--:-- --:--:-- --:--:--   972
Finished Step #25
Starting Step #26
Step #26: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #26:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #26:                                  Dload  Upload   Total   Spent    Left  Speed
Step #26:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 9787k    0     0  100 9787k      0  42.4M --:--:-- --:--:-- --:--:-- 42.6M
Finished Step #26
Starting Step #27
Step #27: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #27:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #27:                                  Dload  Upload   Total   Spent    Left  Speed
Step #27:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    144 --:--:-- --:--:-- --:--:--   144
Finished Step #27
Starting Step #28
Step #28: Already have image (with digest): gcr.io/cloud-builders/curl
Step #28:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #28:                                  Dload  Upload   Total   Spent    Left  Speed
Step #28:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    42    0     0  100    42      0    232 --:--:-- --:--:-- --:--:--   230100    42    0     0  100    42      0    232 --:--:-- --:--:-- --:--:--   230
Finished Step #28
Starting Step #29
Step #29: Already have image: gcr.io/oss-fuzz/behaviortreecpp
Finished Step #29
PUSH
DONE
