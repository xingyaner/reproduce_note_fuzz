starting build "fbc09b34-cbeb-49a3-8b70-aa306b29bc53"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653"
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Sending build context to Docker daemon  7.168kB
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Step 1/4 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": b549f31133a9: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8427520e0a5b: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 64b4d595659f: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6e1c1d3e4462: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": afb56af0a22a: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 72c1acfa5514: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": f3499323806d: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 81959724b051: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6c36e369683f: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 58387b5f929e: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 076f843edfc3: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 4b64e4c05f98: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb3e9fe63f9: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": faadcd61d980: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5fd65fedf344: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": d8155ff7f654: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 45978ca5c24e: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1a63bdf6f5a7: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5e5b15960855: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 23e4366b8ce0: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": eb205c7b6e67: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": ec1b58d1aae0: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": e91bff2557d5: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb0c6e882e7: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": dc48be633c37: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1fa9ef14dba1: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d8bfd769fb5: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8a3a1eeaab04: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": cc49c4e6b6b2: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1cf3b09b548c: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 9ca97fd4bce9: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 384f0456065f: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d88aa98e850: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": df818356be26: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 98184f19e73a: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 89802f7cd705: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 688ac644baff: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 17a65d67e5af: Pulling fs layer
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": afb56af0a22a: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5e5b15960855: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 23e4366b8ce0: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 72c1acfa5514: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": f3499323806d: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 81959724b051: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": eb205c7b6e67: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6c36e369683f: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": ec1b58d1aae0: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 58387b5f929e: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 076f843edfc3: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 4b64e4c05f98: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 45978ca5c24e: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb3e9fe63f9: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1a63bdf6f5a7: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": faadcd61d980: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 9ca97fd4bce9: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5fd65fedf344: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": e91bff2557d5: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 384f0456065f: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb0c6e882e7: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": d8155ff7f654: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d88aa98e850: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": dc48be633c37: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": df818356be26: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6e1c1d3e4462: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1fa9ef14dba1: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 98184f19e73a: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d8bfd769fb5: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 89802f7cd705: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 17a65d67e5af: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8a3a1eeaab04: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": cc49c4e6b6b2: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 688ac644baff: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1cf3b09b548c: Waiting
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 64b4d595659f: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 64b4d595659f: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": b549f31133a9: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": b549f31133a9: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": afb56af0a22a: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": afb56af0a22a: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6e1c1d3e4462: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6e1c1d3e4462: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8427520e0a5b: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8427520e0a5b: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 81959724b051: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 81959724b051: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": b549f31133a9: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 58387b5f929e: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 58387b5f929e: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 076f843edfc3: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 076f843edfc3: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 4b64e4c05f98: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 4b64e4c05f98: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb3e9fe63f9: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb3e9fe63f9: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": faadcd61d980: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": faadcd61d980: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6c36e369683f: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6c36e369683f: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": d8155ff7f654: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": d8155ff7f654: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5fd65fedf344: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5fd65fedf344: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1a63bdf6f5a7: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1a63bdf6f5a7: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 45978ca5c24e: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 45978ca5c24e: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5e5b15960855: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 23e4366b8ce0: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 23e4366b8ce0: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": eb205c7b6e67: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": eb205c7b6e67: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": ec1b58d1aae0: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": ec1b58d1aae0: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb0c6e882e7: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb0c6e882e7: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": e91bff2557d5: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": e91bff2557d5: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": dc48be633c37: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": dc48be633c37: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1fa9ef14dba1: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1fa9ef14dba1: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d8bfd769fb5: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d8bfd769fb5: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8a3a1eeaab04: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8a3a1eeaab04: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": cc49c4e6b6b2: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": cc49c4e6b6b2: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1cf3b09b548c: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1cf3b09b548c: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8427520e0a5b: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 9ca97fd4bce9: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 9ca97fd4bce9: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 64b4d595659f: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 384f0456065f: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d88aa98e850: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d88aa98e850: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 72c1acfa5514: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": df818356be26: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": df818356be26: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 89802f7cd705: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 98184f19e73a: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 98184f19e73a: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 688ac644baff: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 688ac644baff: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 17a65d67e5af: Verifying Checksum
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 17a65d67e5af: Download complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6e1c1d3e4462: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": afb56af0a22a: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 72c1acfa5514: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": f3499323806d: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 81959724b051: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 6c36e369683f: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 58387b5f929e: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 076f843edfc3: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 4b64e4c05f98: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb3e9fe63f9: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": faadcd61d980: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5fd65fedf344: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": d8155ff7f654: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 45978ca5c24e: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1a63bdf6f5a7: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5e5b15960855: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 23e4366b8ce0: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": eb205c7b6e67: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": ec1b58d1aae0: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": e91bff2557d5: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 5cb0c6e882e7: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": dc48be633c37: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1fa9ef14dba1: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d8bfd769fb5: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 8a3a1eeaab04: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": cc49c4e6b6b2: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 1cf3b09b548c: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 9ca97fd4bce9: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 384f0456065f: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 2d88aa98e850: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": df818356be26: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 98184f19e73a: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 89802f7cd705: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 688ac644baff: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": 17a65d67e5af: Pull complete
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Digest: sha256:5dfcfac7503bc6944cb8e57b1b3e7444cc7516b725094c74ced5dbf8379fc313
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> b25d6b68b886
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Step 2/4 : RUN git clone --depth 1 https://github.com/stephenberry/glaze
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> Running in d59c66fcb9e7
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": [91mCloning into 'glaze'...
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": [0mRemoving intermediate container d59c66fcb9e7
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> a101c6de37cf
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Step 3/4 : WORKDIR glaze
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> Running in 658b0f40dcea
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Removing intermediate container 658b0f40dcea
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> 6f843bc8e65b
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Step 4/4 : COPY build.sh run_tests.sh $SRC/
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653":  ---> 7667bf9fd768
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Successfully built 7667bf9fd768
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Successfully tagged gcr.io/oss-fuzz/glaze:latest
Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/glaze:latest
Finished Step #1 - "build-1108f956-826b-4935-86c1-bbe3fbcb2653"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/glaze
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/file8CtwFP
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/glaze/.git
Step #2 - "srcmap": + GIT_DIR=/src/glaze
Step #2 - "srcmap": + cd /src/glaze
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/stephenberry/glaze
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=db2de6b4bdff7aa34115936d6a62d8c151909c56
Step #2 - "srcmap": + jq_inplace /tmp/file8CtwFP '."/src/glaze" = { type: "git", url: "https://github.com/stephenberry/glaze", rev: "db2de6b4bdff7aa34115936d6a62d8c151909c56" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/filevjvoCa
Step #2 - "srcmap": + cat /tmp/file8CtwFP
Step #2 - "srcmap": + jq '."/src/glaze" = { type: "git", url: "https://github.com/stephenberry/glaze", rev: "db2de6b4bdff7aa34115936d6a62d8c151909c56" }'
Step #2 - "srcmap": + mv /tmp/filevjvoCa /tmp/file8CtwFP
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/file8CtwFP
Step #2 - "srcmap": + rm /tmp/file8CtwFP
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/glaze": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/stephenberry/glaze",
Step #2 - "srcmap":     "rev": "db2de6b4bdff7aa34115936d6a62d8c151909c56"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #3 - "compile-afl-address-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #3 - "compile-afl-address-x86_64": + mkdir build
Step #3 - "compile-afl-address-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #3 - "compile-afl-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working CXX compiler: /src/aflplusplus/afl-clang-fast++ - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-afl-address-x86_64": -- Fetching dependencies...
Step #3 - "compile-afl-address-x86_64": -- ...finished fetching dependencies.
Step #3 - "compile-afl-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working C compiler: /src/aflplusplus/afl-clang-fast - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-afl-address-x86_64": -- Performing Test haslibfuzzer
Step #3 - "compile-afl-address-x86_64": -- Performing Test haslibfuzzer - Success
Step #3 - "compile-afl-address-x86_64": -- Configuring done (5.0s)
Step #3 - "compile-afl-address-x86_64": -- Generating done (0.1s)
Step #3 - "compile-afl-address-x86_64": -- Build files have been written to: /src/glaze/build
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + cmake --build build --config Release -j32
Step #3 - "compile-afl-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  3%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  4%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  6%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  8%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  9%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 11%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 12%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 16%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 17%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 20%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 22%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 24%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 28%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 29%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 29%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 30%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 31%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 32%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 33%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] Built target utility_formats
Step #3 - "compile-afl-address-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] Built target compare_test
Step #3 - "compile-afl-address-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 41%] [32m[1mLinking CXX static library libmain.a[0m
Step #3 - "compile-afl-address-x86_64": [ 41%] Built target main
Step #3 - "compile-afl-address-x86_64": [ 42%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 43%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] Built target cli_menu_test
Step #3 - "compile-afl-address-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 46%] [32m[1mLinking CXX executable glaze_ide[0m
Step #3 - "compile-afl-address-x86_64": [ 46%] Built target glaze_ide
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 48%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #3 - "compile-afl-address-x86_64": [ 49%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #3 - "compile-afl-address-x86_64": [ 49%] Built target roundtrip_BEVE
Step #3 - "compile-afl-address-x86_64": [ 50%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 50%] Built target inplace_vector_test
Step #3 - "compile-afl-address-x86_64": [ 51%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] Built target key_transformers_test
Step #3 - "compile-afl-address-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 54%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #3 - "compile-afl-address-x86_64": [ 54%] Built target roundtrip_JSON
Step #3 - "compile-afl-address-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] [32m[1mLinking CXX executable int_parsing[0m
Step #3 - "compile-afl-address-x86_64": [ 56%] Built target int_parsing
Step #3 - "compile-afl-address-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 58%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #3 - "compile-afl-address-x86_64": [ 60%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #3 - "compile-afl-address-x86_64": [ 60%] Built target fuzz_json_minify
Step #3 - "compile-afl-address-x86_64": [ 61%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 61%] Built target test_lib
Step #3 - "compile-afl-address-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #3 - "compile-afl-address-x86_64": [ 64%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #3 - "compile-afl-address-x86_64": [ 64%] Built target fuzz_csv_parsing
Step #3 - "compile-afl-address-x86_64": [ 65%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 65%] Built target fuzz_json_prettify
Step #3 - "compile-afl-address-x86_64": [ 66%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 67%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #3 - "compile-afl-address-x86_64": [ 67%] Built target inplace_vector_test_noexceptions
Step #3 - "compile-afl-address-x86_64": [ 68%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #3 - "compile-afl-address-x86_64": [ 68%] Built target fuzz_binary_reflection
Step #3 - "compile-afl-address-x86_64": [ 69%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #3 - "compile-afl-address-x86_64": [ 69%] Built target fuzz_json_roundtrip_string
Step #3 - "compile-afl-address-x86_64": [ 70%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #3 - "compile-afl-address-x86_64": [ 70%] Built target fuzz_json_roundtrip_floating
Step #3 - "compile-afl-address-x86_64": [ 71%] [32m[1mLinking CXX executable json_conformance[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] Built target json_conformance
Step #3 - "compile-afl-address-x86_64": [ 72%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #3 - "compile-afl-address-x86_64": [ 72%] Built target fuzz_json_reflection
Step #3 - "compile-afl-address-x86_64": [ 73%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #3 - "compile-afl-address-x86_64": [ 73%] Built target json_exhaustive_roundtrip_float
Step #3 - "compile-afl-address-x86_64": [ 74%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #3 - "compile-afl-address-x86_64": [ 75%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #3 - "compile-afl-address-x86_64": [ 75%] Built target fuzz_json_generic
Step #3 - "compile-afl-address-x86_64": [ 75%] Built target fuzz_json_roundtrip_int
Step #3 - "compile-afl-address-x86_64": [ 76%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] Built target fuzz_json_with_comments
Step #3 - "compile-afl-address-x86_64": [ 77%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mdlopen() detected. To have coverage for a library that your target dlopen()'s this must either happen before __AFL_INIT() or you must use AFL_PRELOAD to preload all dlopen()'ed libraries!
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": [ 77%] Built target json_exhaustive_roundtrip_int
Step #3 - "compile-afl-address-x86_64": [ 78%] [32m[1mLinking CXX executable stencil_test[0m
Step #3 - "compile-afl-address-x86_64": [ 78%] Built target stencil_test
Step #3 - "compile-afl-address-x86_64": [ 80%] [32m[1mLinking CXX executable exceptions_test[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] [32m[1mLinking CXX executable lib_test[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] Built target exceptions_test
Step #3 - "compile-afl-address-x86_64": [ 81%] Built target lib_test
Step #3 - "compile-afl-address-x86_64": [ 82%] [32m[1mLinking CXX executable jmespath[0m
Step #3 - "compile-afl-address-x86_64": [ 82%] Built target jmespath
Step #3 - "compile-afl-address-x86_64": [ 83%] [32m[1mLinking CXX executable eigen_test[0m
Step #3 - "compile-afl-address-x86_64": [ 83%] Built target eigen_test
Step #3 - "compile-afl-address-x86_64": [ 84%] [32m[1mLinking CXX executable threading_test[0m
Step #3 - "compile-afl-address-x86_64": [ 84%] Built target threading_test
Step #3 - "compile-afl-address-x86_64": [ 85%] [32m[1mLinking CXX executable toml_test[0m
Step #3 - "compile-afl-address-x86_64": [ 85%] Built target toml_test
Step #3 - "compile-afl-address-x86_64": [ 86%] [32m[1mLinking CXX executable json_t_test[0m
Step #3 - "compile-afl-address-x86_64": [ 86%] Built target json_t_test
Step #3 - "compile-afl-address-x86_64": [ 87%] [32m[1mLinking CXX executable api_test[0m
Step #3 - "compile-afl-address-x86_64": [ 87%] Built target api_test
Step #3 - "compile-afl-address-x86_64": [ 88%] [32m[1mLinking CXX executable reflection[0m
Step #3 - "compile-afl-address-x86_64": [ 88%] Built target reflection
Step #3 - "compile-afl-address-x86_64": [ 89%] [32m[1mLinking CXX executable mock_json_test[0m
Step #3 - "compile-afl-address-x86_64": [ 89%] Built target mock_json_test
Step #3 - "compile-afl-address-x86_64": [ 90%] [32m[1mLinking CXX executable csv_test[0m
Step #3 - "compile-afl-address-x86_64": [ 90%] Built target csv_test
Step #3 - "compile-afl-address-x86_64": [ 91%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #3 - "compile-afl-address-x86_64": [ 91%] Built target jsonrpc_test
Step #3 - "compile-afl-address-x86_64": [ 92%] [32m[1mLinking CXX executable example_json[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] Built target example_json
Step #3 - "compile-afl-address-x86_64": [ 93%] [32m[1mLinking CXX executable json_performance[0m
Step #3 - "compile-afl-address-x86_64": [ 93%] Built target json_performance
Step #3 - "compile-afl-address-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #3 - "compile-afl-address-x86_64": [ 94%] Built target jsonschema_test
Step #3 - "compile-afl-address-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #3 - "compile-afl-address-x86_64": [ 95%] Built target variant_ambiguous_test
Step #3 - "compile-afl-address-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #3 - "compile-afl-address-x86_64": [ 96%] Built target json_reflection_test
Step #3 - "compile-afl-address-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #3 - "compile-afl-address-x86_64": [ 97%] Built target beve_test
Step #3 - "compile-afl-address-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #3 - "compile-afl-address-x86_64": [ 98%] Built target json_test
Step #3 - "compile-afl-address-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #3 - "compile-afl-address-x86_64": [100%] Built target json_test_non_null
Step #3 - "compile-afl-address-x86_64": + fuzzing/ossfuzz.sh
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ --version
Step #3 - "compile-afl-address-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #3 - "compile-afl-address-x86_64": Target: x86_64-unknown-linux-gnu
Step #3 - "compile-afl-address-x86_64": Thread model: posix
Step #3 - "compile-afl-address-x86_64": InstalledDir: /usr/local/bin
Step #3 - "compile-afl-address-x86_64": + + lsgrep fuzzing/binary_reflection.cpp -v fuzzing/csv_parsing.cpp -E fuzzing/json_exhaustive_roundtrip_float.cpp (exhaustive|main\.cpp) fuzzing/json_exhaustive_roundtrip_int.cpp
Step #3 - "compile-afl-address-x86_64":  fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cpp fuzzing/json_roundtrip_floating.cpp fuzzing/json_roundtrip_int.cpp fuzzing/json_roundtrip_string.cpp fuzzing/json_with_comments.cpp fuzzing/main.cpp
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=binary_reflection
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/afl-address-x86_64/binary_reflection /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=csv_parsing
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/afl-address-x86_64/csv_parsing /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_generic
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/afl-address-x86_64/json_generic /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_minify
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/afl-address-x86_64/json_minify /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_prettify
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/afl-address-x86_64/json_prettify /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_reflection
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/afl-address-x86_64/json_reflection /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_roundtrip_floating
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/afl-address-x86_64/json_roundtrip_floating /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_roundtrip_int
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/afl-address-x86_64/json_roundtrip_int /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_roundtrip_string
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/afl-address-x86_64/json_roundtrip_string /usr/lib/libFuzzingEngine.a
Step #3 - "compile-afl-address-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #3 - "compile-afl-address-x86_64": + NAME=json_with_comments
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/afl-address-x86_64/json_with_comments /usr/lib/libFuzzingEngine.a
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": 8427520e0a5b: Already exists
Step #4 - "build-check-afl-address-x86_64": 64b4d595659f: Already exists
Step #4 - "build-check-afl-address-x86_64": 1c9ec6812772: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 229eb184c813: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 54484573dfed: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5b6597101ce8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c59472a69d98: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": bd4a2dd57ce6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 04ba235037d5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": f1b5ac8a12a8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 98607143cd67: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": a0946657de44: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": aac343d2369e: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": ec43f5391f1d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 639f5a53c3f6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 414dec795bfc: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 084e5f4f9107: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2b145ac2bcfa: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2c70af018496: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 554048761f4a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": ef82fdb063df: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 076682010cd3: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6ee986e2e49a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c59472a69d98: Waiting
Step #4 - "build-check-afl-address-x86_64": 7a00f63ee5cb: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": bd4a2dd57ce6: Waiting
Step #4 - "build-check-afl-address-x86_64": 1d1ba2815fb5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 04ba235037d5: Waiting
Step #4 - "build-check-afl-address-x86_64": 554048761f4a: Waiting
Step #4 - "build-check-afl-address-x86_64": ec43f5391f1d: Waiting
Step #4 - "build-check-afl-address-x86_64": f1b5ac8a12a8: Waiting
Step #4 - "build-check-afl-address-x86_64": 98607143cd67: Waiting
Step #4 - "build-check-afl-address-x86_64": ef82fdb063df: Waiting
Step #4 - "build-check-afl-address-x86_64": 076682010cd3: Waiting
Step #4 - "build-check-afl-address-x86_64": 7a00f63ee5cb: Waiting
Step #4 - "build-check-afl-address-x86_64": 6ee986e2e49a: Waiting
Step #4 - "build-check-afl-address-x86_64": 639f5a53c3f6: Waiting
Step #4 - "build-check-afl-address-x86_64": 5b6597101ce8: Waiting
Step #4 - "build-check-afl-address-x86_64": 414dec795bfc: Waiting
Step #4 - "build-check-afl-address-x86_64": aac343d2369e: Waiting
Step #4 - "build-check-afl-address-x86_64": 084e5f4f9107: Waiting
Step #4 - "build-check-afl-address-x86_64": 1d1ba2815fb5: Waiting
Step #4 - "build-check-afl-address-x86_64": 2b145ac2bcfa: Waiting
Step #4 - "build-check-afl-address-x86_64": 2c70af018496: Waiting
Step #4 - "build-check-afl-address-x86_64": 54484573dfed: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 54484573dfed: Download complete
Step #4 - "build-check-afl-address-x86_64": 1c9ec6812772: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 1c9ec6812772: Download complete
Step #4 - "build-check-afl-address-x86_64": 229eb184c813: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 229eb184c813: Download complete
Step #4 - "build-check-afl-address-x86_64": c59472a69d98: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": c59472a69d98: Download complete
Step #4 - "build-check-afl-address-x86_64": 1c9ec6812772: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5b6597101ce8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 5b6597101ce8: Download complete
Step #4 - "build-check-afl-address-x86_64": 04ba235037d5: Download complete
Step #4 - "build-check-afl-address-x86_64": f1b5ac8a12a8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": f1b5ac8a12a8: Download complete
Step #4 - "build-check-afl-address-x86_64": 98607143cd67: Download complete
Step #4 - "build-check-afl-address-x86_64": 229eb184c813: Pull complete
Step #4 - "build-check-afl-address-x86_64": 54484573dfed: Pull complete
Step #4 - "build-check-afl-address-x86_64": aac343d2369e: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": aac343d2369e: Download complete
Step #4 - "build-check-afl-address-x86_64": ec43f5391f1d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": ec43f5391f1d: Download complete
Step #4 - "build-check-afl-address-x86_64": bd4a2dd57ce6: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": bd4a2dd57ce6: Download complete
Step #4 - "build-check-afl-address-x86_64": 5b6597101ce8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 639f5a53c3f6: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 639f5a53c3f6: Download complete
Step #4 - "build-check-afl-address-x86_64": c59472a69d98: Pull complete
Step #4 - "build-check-afl-address-x86_64": 084e5f4f9107: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 084e5f4f9107: Download complete
Step #4 - "build-check-afl-address-x86_64": 2c70af018496: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 2c70af018496: Download complete
Step #4 - "build-check-afl-address-x86_64": 554048761f4a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 554048761f4a: Download complete
Step #4 - "build-check-afl-address-x86_64": ef82fdb063df: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": ef82fdb063df: Download complete
Step #4 - "build-check-afl-address-x86_64": 2b145ac2bcfa: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 2b145ac2bcfa: Download complete
Step #4 - "build-check-afl-address-x86_64": 414dec795bfc: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 414dec795bfc: Download complete
Step #4 - "build-check-afl-address-x86_64": 7a00f63ee5cb: Download complete
Step #4 - "build-check-afl-address-x86_64": 6ee986e2e49a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6ee986e2e49a: Download complete
Step #4 - "build-check-afl-address-x86_64": bd4a2dd57ce6: Pull complete
Step #4 - "build-check-afl-address-x86_64": 1d1ba2815fb5: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 1d1ba2815fb5: Download complete
Step #4 - "build-check-afl-address-x86_64": 04ba235037d5: Pull complete
Step #4 - "build-check-afl-address-x86_64": f1b5ac8a12a8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 98607143cd67: Pull complete
Step #4 - "build-check-afl-address-x86_64": 076682010cd3: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 076682010cd3: Download complete
Step #4 - "build-check-afl-address-x86_64": a0946657de44: Pull complete
Step #4 - "build-check-afl-address-x86_64": aac343d2369e: Pull complete
Step #4 - "build-check-afl-address-x86_64": ec43f5391f1d: Pull complete
Step #4 - "build-check-afl-address-x86_64": 639f5a53c3f6: Pull complete
Step #4 - "build-check-afl-address-x86_64": 414dec795bfc: Pull complete
Step #4 - "build-check-afl-address-x86_64": 084e5f4f9107: Pull complete
Step #4 - "build-check-afl-address-x86_64": 2b145ac2bcfa: Pull complete
Step #4 - "build-check-afl-address-x86_64": 2c70af018496: Pull complete
Step #4 - "build-check-afl-address-x86_64": 554048761f4a: Pull complete
Step #4 - "build-check-afl-address-x86_64": ef82fdb063df: Pull complete
Step #4 - "build-check-afl-address-x86_64": 076682010cd3: Pull complete
Step #4 - "build-check-afl-address-x86_64": 6ee986e2e49a: Pull complete
Step #4 - "build-check-afl-address-x86_64": 7a00f63ee5cb: Pull complete
Step #4 - "build-check-afl-address-x86_64": 1d1ba2815fb5: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:9a754a754bb626bf3d467810983084f975ea500c7fb91b53884edb43787592d3
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_minify
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_reflection
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_with_comments
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/binary_reflection
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/csv_parsing
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_roundtrip_string
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_roundtrip_floating
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_prettify
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_roundtrip_int
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpx17f4npx/json_generic
Finished Step #4 - "build-check-afl-address-x86_64"
Starting Step #5
Step #5: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #5
Starting Step #6
Step #6: Already have image: gcr.io/oss-fuzz/glaze
Step #6:   adding: SanitizerCoverageLTO.so (deflated 69%)
Step #6:   adding: SanitizerCoveragePCGUARD.so (deflated 70%)
Step #6:   adding: afl-addseeds (deflated 57%)
Step #6:   adding: afl-analyze (deflated 55%)
Step #6:   adding: afl-c++ (deflated 57%)
Step #6:   adding: afl-c++.8 (deflated 55%)
Step #6:   adding: afl-cc (deflated 57%)
Step #6:   adding: afl-cc.8 (deflated 55%)
Step #6:   adding: afl-clang (deflated 57%)
Step #6:   adding: afl-clang++ (deflated 57%)
Step #6:   adding: afl-clang-fast (deflated 57%)
Step #6:   adding: afl-clang-fast++ (deflated 57%)
Step #6:   adding: afl-clang-fast++.8 (deflated 55%)
Step #6:   adding: afl-clang-fast.8 (deflated 55%)
Step #6:   adding: afl-clang-lto (deflated 57%)
Step #6:   adding: afl-clang-lto++ (deflated 57%)
Step #6:   adding: afl-clang-lto++.8 (deflated 55%)
Step #6:   adding: afl-clang-lto.8 (deflated 55%)
Step #6:   adding: afl-cmin (deflated 70%)
Step #6:   adding: afl-cmin.bash (deflated 65%)
Step #6:   adding: afl-cmin.py (deflated 71%)
Step #6:   adding: afl-compiler-rt-32.o (deflated 54%)
Step #6:   adding: afl-compiler-rt-64.o (deflated 67%)
Step #6:   adding: afl-compiler-rt.o (deflated 67%)
Step #6:   adding: afl-fuzz (deflated 55%)
Step #6:   adding: afl-g++ (deflated 57%)
Step #6:   adding: afl-gcc (deflated 57%)
Step #6:   adding: afl-gotcpu (deflated 62%)
Step #6:   adding: afl-ld-lto (deflated 62%)
Step #6:   adding: afl-llvm-dict2file.so (deflated 69%)
Step #6:   adding: afl-llvm-lto-instrumentlist.so (deflated 71%)
Step #6:   adding: afl-llvm-pass.so (deflated 69%)
Step #6:   adding: afl-llvm-rt-lto-32.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto-64.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto.o (deflated 20%)
Step #6:   adding: afl-lto (deflated 57%)
Step #6:   adding: afl-lto++ (deflated 57%)
Step #6:   adding: afl-lto++.8 (deflated 55%)
Step #6:   adding: afl-lto.8 (deflated 55%)
Step #6:   adding: afl-persistent-config (deflated 59%)
Step #6:   adding: afl-plot (deflated 65%)
Step #6:   adding: afl-showmap (deflated 55%)
Step #6:   adding: afl-system-config (deflated 63%)
Step #6:   adding: afl-tmin (deflated 55%)
Step #6:   adding: afl-whatsup (deflated 69%)
Step #6:   adding: afl-wine-trace (deflated 70%)
Step #6:   adding: afl_options.txt (deflated 20%)
Step #6:   adding: binary_reflection (deflated 67%)
Step #6:   adding: cmplog-instructions-pass.so (deflated 71%)
Step #6:   adding: cmplog-routines-pass.so (deflated 70%)
Step #6:   adding: cmplog-switches-pass.so (deflated 70%)
Step #6:   adding: compare-transform-pass.so (deflated 69%)
Step #6:   adding: csv_parsing (deflated 66%)
Step #6:   adding: dynamic_list.txt (deflated 76%)
Step #6:   adding: injection-pass.so (deflated 70%)
Step #6:   adding: json_generic (deflated 67%)
Step #6:   adding: json_minify (deflated 66%)
Step #6:   adding: json_prettify (deflated 67%)
Step #6:   adding: json_reflection (deflated 66%)
Step #6:   adding: json_roundtrip_floating (deflated 66%)
Step #6:   adding: json_roundtrip_int (deflated 68%)
Step #6:   adding: json_roundtrip_string (deflated 66%)
Step #6:   adding: json_with_comments (deflated 66%)
Step #6:   adding: libAFLDriver.a (deflated 64%)
Step #6:   adding: libAFLQemuDriver.a (deflated 65%)
Step #6:   adding: llvm-symbolizer (deflated 65%)
Step #6:   adding: split-compares-pass.so (deflated 69%)
Step #6:   adding: split-switches-pass.so (deflated 70%)
Finished Step #6
Starting Step #7
Step #7: Pulling image: gcr.io/oss-fuzz-base/uploader
Step #7: Using default tag: latest
Step #7: latest: Pulling from oss-fuzz-base/uploader
Step #7: c62795f78da9: Pulling fs layer
Step #7: d4fceeeb758e: Pulling fs layer
Step #7: 5c9125a401ae: Pulling fs layer
Step #7: 0062f774e994: Pulling fs layer
Step #7: 6b33fd031fac: Pulling fs layer
Step #7: 7eb39101e508: Pulling fs layer
Step #7: 89257482f398: Pulling fs layer
Step #7: 6b33fd031fac: Waiting
Step #7: 7eb39101e508: Waiting
Step #7: 89257482f398: Waiting
Step #7: 0062f774e994: Waiting
Step #7: d4fceeeb758e: Verifying Checksum
Step #7: d4fceeeb758e: Download complete
Step #7: 6b33fd031fac: Download complete
Step #7: 0062f774e994: Verifying Checksum
Step #7: 0062f774e994: Download complete
Step #7: 89257482f398: Verifying Checksum
Step #7: 89257482f398: Download complete
Step #7: c62795f78da9: Verifying Checksum
Step #7: c62795f78da9: Download complete
Step #7: 7eb39101e508: Verifying Checksum
Step #7: 7eb39101e508: Download complete
Step #7: c62795f78da9: Pull complete
Step #7: d4fceeeb758e: Pull complete
Step #7: 5c9125a401ae: Pull complete
Step #7: 0062f774e994: Pull complete
Step #7: 6b33fd031fac: Pull complete
Step #7: 7eb39101e508: Pull complete
Step #7: 89257482f398: Pull complete
Step #7: Digest: sha256:5717ba63d13b5515063e2a6ccad09fb5bf32a86c8e0798a363d81c2be522e411
Step #7: Status: Downloaded newer image for gcr.io/oss-fuzz-base/uploader:latest
Step #7: gcr.io/oss-fuzz-base/uploader:latest
Step #7:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #7:                                  Dload  Upload   Total   Spent    Left  Speed
Step #7:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    716 --:--:-- --:--:-- --:--:--   719
Finished Step #7
Starting Step #8
Step #8: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #8:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #8:                                  Dload  Upload   Total   Spent    Left  Speed
Step #8:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 20.8M    0     0  100 20.8M      0  51.6M --:--:-- --:--:-- --:--:-- 51.6M
Finished Step #8
Starting Step #9
Step #9: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #9:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #9:                                  Dload  Upload   Total   Spent    Left  Speed
Step #9:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    735 --:--:-- --:--:-- --:--:--   737
Finished Step #9
Starting Step #10
Step #10: Already have image (with digest): gcr.io/cloud-builders/curl
Step #10: 
Step #10:                    ***** NOTICE *****
Step #10: 
Step #10: Supported `curl` versions can be found in the various images available at
Step #10: https://console.cloud.google.com/launcher/details/google/ubuntu1604.
Step #10: 
Step #10:                 ***** END OF NOTICE *****
Step #10: 
Step #10:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #10:                                  Dload  Upload   Total   Spent    Left  Speed
Step #10:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    139 --:--:-- --:--:-- --:--:--   140
Finished Step #10
Starting Step #11
Step #11: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #11
Starting Step #12 - "compile-centipede-address-x86_64"
Step #12 - "compile-centipede-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #12 - "compile-centipede-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-centipede-address-x86_64": vm.mmap_rnd_bits = 28
Step #12 - "compile-centipede-address-x86_64": Skipping compilation; using precompiled centipede
Step #12 - "compile-centipede-address-x86_64": done.
Step #12 - "compile-centipede-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-centipede-address-x86_64": CC=clang
Step #12 - "compile-centipede-address-x86_64": CXX=clang++
Step #12 - "compile-centipede-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only  -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope 
Step #12 - "compile-centipede-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only  -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #12 - "compile-centipede-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #12 - "compile-centipede-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-centipede-address-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #12 - "compile-centipede-address-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #12 - "compile-centipede-address-x86_64": + mkdir build
Step #12 - "compile-centipede-address-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #12 - "compile-centipede-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #12 - "compile-centipede-address-x86_64": -- Detecting CXX compiler ABI info
Step #12 - "compile-centipede-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #12 - "compile-centipede-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #12 - "compile-centipede-address-x86_64": -- Detecting CXX compile features
Step #12 - "compile-centipede-address-x86_64": -- Detecting CXX compile features - done
Step #12 - "compile-centipede-address-x86_64": -- Fetching dependencies...
Step #12 - "compile-centipede-address-x86_64": -- ...finished fetching dependencies.
Step #12 - "compile-centipede-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #12 - "compile-centipede-address-x86_64": -- Detecting C compiler ABI info
Step #12 - "compile-centipede-address-x86_64": -- Detecting C compiler ABI info - done
Step #12 - "compile-centipede-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #12 - "compile-centipede-address-x86_64": -- Detecting C compile features
Step #12 - "compile-centipede-address-x86_64": -- Detecting C compile features - done
Step #12 - "compile-centipede-address-x86_64": -- Performing Test haslibfuzzer
Step #12 - "compile-centipede-address-x86_64": -- Performing Test haslibfuzzer - Success
Step #12 - "compile-centipede-address-x86_64": -- Configuring done (3.8s)
Step #12 - "compile-centipede-address-x86_64": -- Generating done (0.1s)
Step #12 - "compile-centipede-address-x86_64": -- Build files have been written to: /src/glaze/build
Step #12 - "compile-centipede-address-x86_64": ++ nproc
Step #12 - "compile-centipede-address-x86_64": + cmake --build build --config Release -j32
Step #12 - "compile-centipede-address-x86_64": [  1%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  4%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  7%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  7%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  7%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  8%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [  9%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 10%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 11%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 12%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 13%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 14%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 15%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 16%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 17%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 18%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 20%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 22%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 23%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 24%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 25%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 26%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 27%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 28%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 30%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 30%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 31%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 32%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 33%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #12 - "compile-centipede-address-x86_64": [ 34%] Built target utility_formats
Step #12 - "compile-centipede-address-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 36%] Built target compare_test
Step #12 - "compile-centipede-address-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 41%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 42%] [32m[1mLinking CXX static library libmain.a[0m
Step #12 - "compile-centipede-address-x86_64": [ 42%] Built target main
Step #12 - "compile-centipede-address-x86_64": [ 43%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 44%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 44%] Built target cli_menu_test
Step #12 - "compile-centipede-address-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 46%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 47%] [32m[1mLinking CXX executable glaze_ide[0m
Step #12 - "compile-centipede-address-x86_64": [ 47%] Built target key_transformers_test
Step #12 - "compile-centipede-address-x86_64": [ 48%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 48%] Built target glaze_ide
Step #12 - "compile-centipede-address-x86_64": [ 49%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 50%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 50%] Built target inplace_vector_test
Step #12 - "compile-centipede-address-x86_64": [ 51%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 52%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #12 - "compile-centipede-address-x86_64": [ 52%] Built target roundtrip_BEVE
Step #12 - "compile-centipede-address-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 54%] [32m[1mLinking CXX executable int_parsing[0m
Step #12 - "compile-centipede-address-x86_64": [ 54%] Built target int_parsing
Step #12 - "compile-centipede-address-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 56%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #12 - "compile-centipede-address-x86_64": [ 56%] Built target roundtrip_JSON
Step #12 - "compile-centipede-address-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 58%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #12 - "compile-centipede-address-x86_64": [ 58%] Built target fuzz_json_minify
Step #12 - "compile-centipede-address-x86_64": [ 60%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 61%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #12 - "compile-centipede-address-x86_64": [ 61%] Built target fuzz_json_prettify
Step #12 - "compile-centipede-address-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 63%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #12 - "compile-centipede-address-x86_64": [ 64%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #12 - "compile-centipede-address-x86_64": [ 64%] Built target test_lib
Step #12 - "compile-centipede-address-x86_64": [ 65%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 66%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #12 - "compile-centipede-address-x86_64": [ 66%] Built target fuzz_csv_parsing
Step #12 - "compile-centipede-address-x86_64": [ 67%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #12 - "compile-centipede-address-x86_64": [ 67%] Built target fuzz_binary_reflection
Step #12 - "compile-centipede-address-x86_64": [ 68%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #12 - "compile-centipede-address-x86_64": [ 69%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #12 - "compile-centipede-address-x86_64": [ 69%] Built target fuzz_json_roundtrip_floating
Step #12 - "compile-centipede-address-x86_64": [ 69%] Built target fuzz_json_roundtrip_string
Step #12 - "compile-centipede-address-x86_64": [ 70%] [32m[1mLinking CXX executable stencil_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 70%] Built target stencil_test
Step #12 - "compile-centipede-address-x86_64": [ 71%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #12 - "compile-centipede-address-x86_64": [ 72%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #12 - "compile-centipede-address-x86_64": [ 72%] Built target fuzz_json_reflection
Step #12 - "compile-centipede-address-x86_64": [ 72%] Built target fuzz_json_roundtrip_int
Step #12 - "compile-centipede-address-x86_64": [ 73%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #12 - "compile-centipede-address-x86_64": [ 73%] Built target fuzz_json_generic
Step #12 - "compile-centipede-address-x86_64": [ 74%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #12 - "compile-centipede-address-x86_64": [ 74%] Built target inplace_vector_test_noexceptions
Step #12 - "compile-centipede-address-x86_64": [ 75%] [32m[1mLinking CXX executable json_conformance[0m
Step #12 - "compile-centipede-address-x86_64": [ 75%] Built target json_conformance
Step #12 - "compile-centipede-address-x86_64": [ 76%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #12 - "compile-centipede-address-x86_64": [ 76%] Built target json_exhaustive_roundtrip_int
Step #12 - "compile-centipede-address-x86_64": [ 77%] [32m[1mLinking CXX executable exceptions_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 77%] Built target exceptions_test
Step #12 - "compile-centipede-address-x86_64": [ 78%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #12 - "compile-centipede-address-x86_64": [ 80%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #12 - "compile-centipede-address-x86_64": [ 81%] [32m[1mLinking CXX executable lib_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 81%] Built target fuzz_json_with_comments
Step #12 - "compile-centipede-address-x86_64": [ 81%] Built target json_exhaustive_roundtrip_float
Step #12 - "compile-centipede-address-x86_64": [ 81%] Built target lib_test
Step #12 - "compile-centipede-address-x86_64": [ 82%] [32m[1mLinking CXX executable threading_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 82%] Built target threading_test
Step #12 - "compile-centipede-address-x86_64": [ 83%] [32m[1mLinking CXX executable eigen_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 83%] Built target eigen_test
Step #12 - "compile-centipede-address-x86_64": [ 84%] [32m[1mLinking CXX executable jmespath[0m
Step #12 - "compile-centipede-address-x86_64": [ 84%] Built target jmespath
Step #12 - "compile-centipede-address-x86_64": [ 85%] [32m[1mLinking CXX executable json_t_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 85%] Built target json_t_test
Step #12 - "compile-centipede-address-x86_64": [ 86%] [32m[1mLinking CXX executable csv_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 86%] Built target csv_test
Step #12 - "compile-centipede-address-x86_64": [ 87%] [32m[1mLinking CXX executable api_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 88%] [32m[1mLinking CXX executable toml_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 88%] Built target api_test
Step #12 - "compile-centipede-address-x86_64": [ 88%] Built target toml_test
Step #12 - "compile-centipede-address-x86_64": [ 89%] [32m[1mLinking CXX executable mock_json_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 89%] Built target mock_json_test
Step #12 - "compile-centipede-address-x86_64": [ 90%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 90%] Built target jsonrpc_test
Step #12 - "compile-centipede-address-x86_64": [ 91%] [32m[1mLinking CXX executable example_json[0m
Step #12 - "compile-centipede-address-x86_64": [ 91%] Built target example_json
Step #12 - "compile-centipede-address-x86_64": [ 92%] [32m[1mLinking CXX executable json_performance[0m
Step #12 - "compile-centipede-address-x86_64": [ 92%] Built target json_performance
Step #12 - "compile-centipede-address-x86_64": [ 93%] [32m[1mLinking CXX executable reflection[0m
Step #12 - "compile-centipede-address-x86_64": [ 93%] Built target reflection
Step #12 - "compile-centipede-address-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 94%] Built target jsonschema_test
Step #12 - "compile-centipede-address-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 95%] Built target variant_ambiguous_test
Step #12 - "compile-centipede-address-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 96%] Built target json_reflection_test
Step #12 - "compile-centipede-address-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 97%] Built target beve_test
Step #12 - "compile-centipede-address-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #12 - "compile-centipede-address-x86_64": [ 98%] Built target json_test
Step #12 - "compile-centipede-address-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #12 - "compile-centipede-address-x86_64": [100%] Built target json_test_non_null
Step #12 - "compile-centipede-address-x86_64": + fuzzing/ossfuzz.sh
Step #12 - "compile-centipede-address-x86_64": + clang++ --version
Step #12 - "compile-centipede-address-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #12 - "compile-centipede-address-x86_64": Target: x86_64-unknown-linux-gnu
Step #12 - "compile-centipede-address-x86_64": Thread model: posix
Step #12 - "compile-centipede-address-x86_64": InstalledDir: /usr/local/bin
Step #12 - "compile-centipede-address-x86_64": + grep -v -E (exhaustive|main\.cpp)
Step #12 - "compile-centipede-address-x86_64": + ls fuzzing/binary_reflection.cpp fuzzing/csv_parsing.cpp fuzzing/json_exhaustive_roundtrip_float.cpp fuzzing/json_exhaustive_roundtrip_int.cpp fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cpp fuzzing/json_roundtrip_floating.cpp fuzzing/json_roundtrip_int.cpp fuzzing/json_roundtrip_string.cpp fuzzing/json_with_comments.cpp fuzzing/main.cpp
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=binary_reflection
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/centipede-address-x86_64/binary_reflection /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=csv_parsing
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/centipede-address-x86_64/csv_parsing /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_generic
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/centipede-address-x86_64/json_generic /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_minify
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/centipede-address-x86_64/json_minify /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_prettify
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/centipede-address-x86_64/json_prettify /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_reflection
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/centipede-address-x86_64/json_reflection /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_roundtrip_floating
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/centipede-address-x86_64/json_roundtrip_floating /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_roundtrip_int
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/centipede-address-x86_64/json_roundtrip_int /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_roundtrip_string
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/centipede-address-x86_64/json_roundtrip_string /usr/lib/libFuzzingEngine.a
Step #12 - "compile-centipede-address-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #12 - "compile-centipede-address-x86_64": + NAME=json_with_comments
Step #12 - "compile-centipede-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/centipede-address-x86_64/json_with_comments /usr/lib/libFuzzingEngine.a
Finished Step #12 - "compile-centipede-address-x86_64"
Starting Step #13 - "build-check-centipede-address-x86_64"
Step #13 - "build-check-centipede-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_minify
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_reflection
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_with_comments
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/binary_reflection
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/csv_parsing
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_roundtrip_string
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_roundtrip_floating
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_prettify
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_roundtrip_int
Step #13 - "build-check-centipede-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0idw_bcy/json_generic
Finished Step #13 - "build-check-centipede-address-x86_64"
Starting Step #14
Step #14: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #14
Starting Step #15
Step #15: Already have image: gcr.io/oss-fuzz/glaze
Step #15:   adding: binary_reflection (deflated 67%)
Step #15:   adding: csv_parsing (deflated 66%)
Step #15:   adding: json_generic (deflated 67%)
Step #15:   adding: json_minify (deflated 67%)
Step #15:   adding: json_prettify (deflated 67%)
Step #15:   adding: json_reflection (deflated 66%)
Step #15:   adding: json_roundtrip_floating (deflated 67%)
Step #15:   adding: json_roundtrip_int (deflated 68%)
Step #15:   adding: json_roundtrip_string (deflated 67%)
Step #15:   adding: json_with_comments (deflated 66%)
Step #15:   adding: llvm-symbolizer (deflated 65%)
Finished Step #15
Starting Step #16
Step #16: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #16:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #16:                                  Dload  Upload   Total   Spent    Left  Speed
Step #16:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    730 --:--:-- --:--:-- --:--:--   733
Finished Step #16
Starting Step #17
Step #17: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #17:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #17:                                  Dload  Upload   Total   Spent    Left  Speed
Step #17:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 15.5M    0     0  100 15.5M      0  48.3M --:--:-- --:--:-- --:--:-- 48.4M
Finished Step #17
Starting Step #18
Step #18: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #18:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #18:                                  Dload  Upload   Total   Spent    Left  Speed
Step #18:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    717 --:--:-- --:--:-- --:--:--   719
Finished Step #18
Starting Step #19
Step #19: Already have image (with digest): gcr.io/cloud-builders/curl
Step #19:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #19:                                  Dload  Upload   Total   Spent    Left  Speed
Step #19:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    164 --:--:-- --:--:-- --:--:--   164
Finished Step #19
Starting Step #20
Step #20: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #20
Starting Step #21 - "compile-centipede-none-x86_64"
Step #21 - "compile-centipede-none-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #21 - "compile-centipede-none-x86_64": ---------------------------------------------------------------
Step #21 - "compile-centipede-none-x86_64": vm.mmap_rnd_bits = 28
Step #21 - "compile-centipede-none-x86_64": Skipping compilation; using precompiled centipede
Step #21 - "compile-centipede-none-x86_64": done.
Step #21 - "compile-centipede-none-x86_64": ---------------------------------------------------------------
Step #21 - "compile-centipede-none-x86_64": CC=clang
Step #21 - "compile-centipede-none-x86_64": CXX=clang++
Step #21 - "compile-centipede-none-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only  -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o  
Step #21 - "compile-centipede-none-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only  -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o   -stdlib=libc++
Step #21 - "compile-centipede-none-x86_64": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #21 - "compile-centipede-none-x86_64": ---------------------------------------------------------------
Step #21 - "compile-centipede-none-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #21 - "compile-centipede-none-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #21 - "compile-centipede-none-x86_64": + mkdir build
Step #21 - "compile-centipede-none-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #21 - "compile-centipede-none-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #21 - "compile-centipede-none-x86_64": -- Detecting CXX compiler ABI info
Step #21 - "compile-centipede-none-x86_64": -- Detecting CXX compiler ABI info - done
Step #21 - "compile-centipede-none-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #21 - "compile-centipede-none-x86_64": -- Detecting CXX compile features
Step #21 - "compile-centipede-none-x86_64": -- Detecting CXX compile features - done
Step #21 - "compile-centipede-none-x86_64": -- Fetching dependencies...
Step #21 - "compile-centipede-none-x86_64": -- ...finished fetching dependencies.
Step #21 - "compile-centipede-none-x86_64": -- The C compiler identification is Clang 22.0.0
Step #21 - "compile-centipede-none-x86_64": -- Detecting C compiler ABI info
Step #21 - "compile-centipede-none-x86_64": -- Detecting C compiler ABI info - done
Step #21 - "compile-centipede-none-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #21 - "compile-centipede-none-x86_64": -- Detecting C compile features
Step #21 - "compile-centipede-none-x86_64": -- Detecting C compile features - done
Step #21 - "compile-centipede-none-x86_64": -- Performing Test haslibfuzzer
Step #21 - "compile-centipede-none-x86_64": -- Performing Test haslibfuzzer - Success
Step #21 - "compile-centipede-none-x86_64": -- Configuring done (3.3s)
Step #21 - "compile-centipede-none-x86_64": -- Generating done (0.1s)
Step #21 - "compile-centipede-none-x86_64": -- Build files have been written to: /src/glaze/build
Step #21 - "compile-centipede-none-x86_64": ++ nproc
Step #21 - "compile-centipede-none-x86_64": + cmake --build build --config Release -j32
Step #21 - "compile-centipede-none-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  3%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  4%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  6%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  7%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [  8%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 10%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 10%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 11%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 12%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 14%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 14%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 15%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 16%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 17%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 18%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 20%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 23%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 23%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 24%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 25%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 27%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 28%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 29%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 31%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 32%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 33%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 33%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 33%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #21 - "compile-centipede-none-x86_64": [ 34%] Built target utility_formats
Step #21 - "compile-centipede-none-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 36%] Built target compare_test
Step #21 - "compile-centipede-none-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 41%] [32m[1mLinking CXX static library libmain.a[0m
Step #21 - "compile-centipede-none-x86_64": [ 41%] Built target main
Step #21 - "compile-centipede-none-x86_64": [ 42%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 43%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 44%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 44%] Built target inplace_vector_test
Step #21 - "compile-centipede-none-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 46%] [32m[1mLinking CXX executable glaze_ide[0m
Step #21 - "compile-centipede-none-x86_64": [ 46%] Built target glaze_ide
Step #21 - "compile-centipede-none-x86_64": [ 47%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 48%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 49%] [32m[1mLinking CXX executable int_parsing[0m
Step #21 - "compile-centipede-none-x86_64": [ 49%] Built target cli_menu_test
Step #21 - "compile-centipede-none-x86_64": [ 50%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 50%] Built target int_parsing
Step #21 - "compile-centipede-none-x86_64": [ 51%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 52%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 52%] Built target key_transformers_test
Step #21 - "compile-centipede-none-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 54%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #21 - "compile-centipede-none-x86_64": [ 54%] Built target roundtrip_BEVE
Step #21 - "compile-centipede-none-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 56%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #21 - "compile-centipede-none-x86_64": [ 56%] Built target roundtrip_JSON
Step #21 - "compile-centipede-none-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 58%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #21 - "compile-centipede-none-x86_64": [ 58%] Built target fuzz_json_minify
Step #21 - "compile-centipede-none-x86_64": [ 60%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 61%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #21 - "compile-centipede-none-x86_64": [ 61%] Built target fuzz_json_prettify
Step #21 - "compile-centipede-none-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 63%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #21 - "compile-centipede-none-x86_64": [ 63%] Built target fuzz_csv_parsing
Step #21 - "compile-centipede-none-x86_64": [ 64%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 65%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #21 - "compile-centipede-none-x86_64": [ 65%] Built target test_lib
Step #21 - "compile-centipede-none-x86_64": [ 66%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #21 - "compile-centipede-none-x86_64": [ 67%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #21 - "compile-centipede-none-x86_64": [ 68%] [32m[1mLinking CXX executable exceptions_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 68%] Built target fuzz_binary_reflection
Step #21 - "compile-centipede-none-x86_64": [ 68%] Built target exceptions_test
Step #21 - "compile-centipede-none-x86_64": [ 69%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #21 - "compile-centipede-none-x86_64": [ 69%] Built target fuzz_json_roundtrip_floating
Step #21 - "compile-centipede-none-x86_64": [ 70%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #21 - "compile-centipede-none-x86_64": [ 70%] Built target fuzz_json_reflection
Step #21 - "compile-centipede-none-x86_64": [ 71%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #21 - "compile-centipede-none-x86_64": [ 72%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #21 - "compile-centipede-none-x86_64": [ 73%] [32m[1mLinking CXX executable stencil_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 74%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #21 - "compile-centipede-none-x86_64": [ 74%] Built target stencil_test
Step #21 - "compile-centipede-none-x86_64": [ 74%] Built target fuzz_json_roundtrip_string
Step #21 - "compile-centipede-none-x86_64": [ 74%] Built target fuzz_json_roundtrip_int
Step #21 - "compile-centipede-none-x86_64": [ 75%] [32m[1mLinking CXX executable json_conformance[0m
Step #21 - "compile-centipede-none-x86_64": [ 75%] Built target fuzz_json_generic
Step #21 - "compile-centipede-none-x86_64": [ 75%] Built target json_conformance
Step #21 - "compile-centipede-none-x86_64": [ 76%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #21 - "compile-centipede-none-x86_64": [ 76%] Built target inplace_vector_test_noexceptions
Step #21 - "compile-centipede-none-x86_64": [ 77%] [32m[1mLinking CXX executable threading_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 77%] Built target threading_test
Step #21 - "compile-centipede-none-x86_64": [ 78%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #21 - "compile-centipede-none-x86_64": [ 78%] Built target json_exhaustive_roundtrip_int
Step #21 - "compile-centipede-none-x86_64": [ 80%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #21 - "compile-centipede-none-x86_64": [ 80%] Built target json_exhaustive_roundtrip_float
Step #21 - "compile-centipede-none-x86_64": [ 81%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #21 - "compile-centipede-none-x86_64": [ 81%] Built target fuzz_json_with_comments
Step #21 - "compile-centipede-none-x86_64": [ 82%] [32m[1mLinking CXX executable lib_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 82%] Built target lib_test
Step #21 - "compile-centipede-none-x86_64": [ 83%] [32m[1mLinking CXX executable eigen_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 84%] [32m[1mLinking CXX executable json_performance[0m
Step #21 - "compile-centipede-none-x86_64": [ 84%] Built target eigen_test
Step #21 - "compile-centipede-none-x86_64": [ 84%] Built target json_performance
Step #21 - "compile-centipede-none-x86_64": [ 85%] [32m[1mLinking CXX executable json_t_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 85%] Built target json_t_test
Step #21 - "compile-centipede-none-x86_64": [ 86%] [32m[1mLinking CXX executable jmespath[0m
Step #21 - "compile-centipede-none-x86_64": [ 86%] Built target jmespath
Step #21 - "compile-centipede-none-x86_64": [ 87%] [32m[1mLinking CXX executable toml_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 87%] Built target toml_test
Step #21 - "compile-centipede-none-x86_64": [ 88%] [32m[1mLinking CXX executable api_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 89%] [32m[1mLinking CXX executable mock_json_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 89%] Built target api_test
Step #21 - "compile-centipede-none-x86_64": [ 89%] Built target mock_json_test
Step #21 - "compile-centipede-none-x86_64": [ 90%] [32m[1mLinking CXX executable csv_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 90%] Built target csv_test
Step #21 - "compile-centipede-none-x86_64": [ 91%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 92%] [32m[1mLinking CXX executable reflection[0m
Step #21 - "compile-centipede-none-x86_64": [ 92%] Built target jsonrpc_test
Step #21 - "compile-centipede-none-x86_64": [ 92%] Built target reflection
Step #21 - "compile-centipede-none-x86_64": [ 93%] [32m[1mLinking CXX executable example_json[0m
Step #21 - "compile-centipede-none-x86_64": [ 93%] Built target example_json
Step #21 - "compile-centipede-none-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 94%] Built target jsonschema_test
Step #21 - "compile-centipede-none-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 95%] Built target variant_ambiguous_test
Step #21 - "compile-centipede-none-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 96%] Built target json_reflection_test
Step #21 - "compile-centipede-none-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 97%] Built target beve_test
Step #21 - "compile-centipede-none-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #21 - "compile-centipede-none-x86_64": [ 98%] Built target json_test
Step #21 - "compile-centipede-none-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #21 - "compile-centipede-none-x86_64": [100%] Built target json_test_non_null
Step #21 - "compile-centipede-none-x86_64": + fuzzing/ossfuzz.sh
Step #21 - "compile-centipede-none-x86_64": + clang++ --version
Step #21 - "compile-centipede-none-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #21 - "compile-centipede-none-x86_64": Target: x86_64-unknown-linux-gnu
Step #21 - "compile-centipede-none-x86_64": Thread model: posix
Step #21 - "compile-centipede-none-x86_64": InstalledDir: /usr/local/bin
Step #21 - "compile-centipede-none-x86_64": + ls fuzzing/binary_reflection.cpp fuzzing/csv_parsing.cpp fuzzing/json_exhaustive_roundtrip_float.cpp fuzzing/json_exhaustive_roundtrip_int.cpp fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cpp fuzzing/json_roundtrip_floating.cpp fuzzing/json_roundtrip_int.cpp fuzzing/json_roundtrip_string.cpp fuzzing/json_with_comments.cpp fuzzing/main.cpp
Step #21 - "compile-centipede-none-x86_64": + grep -v -E (exhaustive|main\.cpp)
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=binary_reflection
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/centipede-none-x86_64/binary_reflection /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=csv_parsing
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/centipede-none-x86_64/csv_parsing /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_generic
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/centipede-none-x86_64/json_generic /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_minify
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/centipede-none-x86_64/json_minify /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_prettify
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/centipede-none-x86_64/json_prettify /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_reflection
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/centipede-none-x86_64/json_reflection /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_roundtrip_floating
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/centipede-none-x86_64/json_roundtrip_floating /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_roundtrip_int
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/centipede-none-x86_64/json_roundtrip_int /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_roundtrip_string
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/centipede-none-x86_64/json_roundtrip_string /usr/lib/libFuzzingEngine.a
Step #21 - "compile-centipede-none-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #21 - "compile-centipede-none-x86_64": + NAME=json_with_comments
Step #21 - "compile-centipede-none-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fno-builtin -fsanitize-coverage=trace-pc-guard,pc-table,trace-cmp -O2 -gline-tables-only -Wno-unused-command-line-argument -Wl,-ldl -Wl,-lrt -Wl,-lpthread -Wl,/src/fuzztest/centipede/weak.o -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/centipede-none-x86_64/json_with_comments /usr/lib/libFuzzingEngine.a
Finished Step #21 - "compile-centipede-none-x86_64"
Starting Step #22 - "build-check-centipede-none-x86_64"
Step #22 - "build-check-centipede-none-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_minify
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_reflection
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_with_comments
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/binary_reflection
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/csv_parsing
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_roundtrip_string
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_roundtrip_floating
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_prettify
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_roundtrip_int
Step #22 - "build-check-centipede-none-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp0kxjda5r/json_generic
Finished Step #22 - "build-check-centipede-none-x86_64"
Starting Step #23
Step #23: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #23
Starting Step #24
Step #24: Already have image: gcr.io/oss-fuzz/glaze
Step #24:   adding: binary_reflection (deflated 66%)
Step #24:   adding: centipede (deflated 65%)
Step #24:   adding: csv_parsing (deflated 65%)
Step #24:   adding: json_generic (deflated 67%)
Step #24:   adding: json_minify (deflated 65%)
Step #24:   adding: json_prettify (deflated 65%)
Step #24:   adding: json_reflection (deflated 65%)
Step #24:   adding: json_roundtrip_floating (deflated 65%)
Step #24:   adding: json_roundtrip_int (deflated 68%)
Step #24:   adding: json_roundtrip_string (deflated 65%)
Step #24:   adding: json_with_comments (deflated 64%)
Step #24:   adding: llvm-symbolizer (deflated 65%)
Finished Step #24
Starting Step #25
Step #25: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #25:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #25:                                  Dload  Upload   Total   Spent    Left  Speed
Step #25:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    768 --:--:-- --:--:-- --:--:--   766100   151    0     0  100   151      0    768 --:--:-- --:--:-- --:--:--   766
Finished Step #25
Starting Step #26
Step #26: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #26:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #26:                                  Dload  Upload   Total   Spent    Left  Speed
Step #26:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 8969k    0     0  100 8969k      0  34.6M --:--:-- --:--:-- --:--:-- 34.7M
Finished Step #26
Starting Step #27
Step #27: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #27:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #27:                                  Dload  Upload   Total   Spent    Left  Speed
Step #27:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    743 --:--:-- --:--:-- --:--:--   744
Finished Step #27
Starting Step #28
Step #28: Already have image (with digest): gcr.io/cloud-builders/curl
Step #28:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #28:                                  Dload  Upload   Total   Spent    Left  Speed
Step #28:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    27    0     0  100    27      0    149 --:--:-- --:--:-- --:--:--   150
Finished Step #28
Starting Step #29
Step #29: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #29
Starting Step #30 - "compile-honggfuzz-address-x86_64"
Step #30 - "compile-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #30 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #30 - "compile-honggfuzz-address-x86_64": vm.mmap_rnd_bits = 28
Step #30 - "compile-honggfuzz-address-x86_64": Skipping compilation; using precompiled honggfuzz
Step #30 - "compile-honggfuzz-address-x86_64":  done.
Step #30 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #30 - "compile-honggfuzz-address-x86_64": CC=clang
Step #30 - "compile-honggfuzz-address-x86_64": CXX=clang++
Step #30 - "compile-honggfuzz-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp
Step #30 - "compile-honggfuzz-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++
Step #30 - "compile-honggfuzz-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #30 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #30 - "compile-honggfuzz-address-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #30 - "compile-honggfuzz-address-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #30 - "compile-honggfuzz-address-x86_64": + mkdir build
Step #30 - "compile-honggfuzz-address-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #30 - "compile-honggfuzz-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compiler ABI info
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #30 - "compile-honggfuzz-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compile features
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compile features - done
Step #30 - "compile-honggfuzz-address-x86_64": -- Fetching dependencies...
Step #30 - "compile-honggfuzz-address-x86_64": -- ...finished fetching dependencies.
Step #30 - "compile-honggfuzz-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting C compiler ABI info
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting C compiler ABI info - done
Step #30 - "compile-honggfuzz-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting C compile features
Step #30 - "compile-honggfuzz-address-x86_64": -- Detecting C compile features - done
Step #30 - "compile-honggfuzz-address-x86_64": -- Performing Test haslibfuzzer
Step #30 - "compile-honggfuzz-address-x86_64": -- Performing Test haslibfuzzer - Success
Step #30 - "compile-honggfuzz-address-x86_64": -- Configuring done (5.9s)
Step #30 - "compile-honggfuzz-address-x86_64": -- Generating done (0.2s)
Step #30 - "compile-honggfuzz-address-x86_64": -- Build files have been written to: /src/glaze/build
Step #30 - "compile-honggfuzz-address-x86_64": ++ nproc
Step #30 - "compile-honggfuzz-address-x86_64": + cmake --build build --config Release -j32
Step #30 - "compile-honggfuzz-address-x86_64": [  1%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  3%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  4%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  6%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  8%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [  9%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 10%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 11%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 12%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 14%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 14%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 15%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 16%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 17%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 18%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 20%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 22%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 23%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 24%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 26%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 27%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 27%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 28%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 29%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 31%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 31%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 32%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 33%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 34%] Built target utility_formats
Step #30 - "compile-honggfuzz-address-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 36%] Built target compare_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 41%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 42%] [32m[1mLinking CXX static library libmain.a[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 42%] Built target main
Step #30 - "compile-honggfuzz-address-x86_64": [ 43%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 44%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 44%] Built target cli_menu_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 46%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 46%] Built target key_transformers_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 47%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 48%] [32m[1mLinking CXX executable glaze_ide[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 48%] Built target glaze_ide
Step #30 - "compile-honggfuzz-address-x86_64": [ 49%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 50%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 50%] Built target inplace_vector_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 51%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 52%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 52%] Built target roundtrip_BEVE
Step #30 - "compile-honggfuzz-address-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 54%] [32m[1mLinking CXX executable int_parsing[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 54%] Built target int_parsing
Step #30 - "compile-honggfuzz-address-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 56%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 56%] Built target roundtrip_JSON
Step #30 - "compile-honggfuzz-address-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 58%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 58%] Built target fuzz_json_minify
Step #30 - "compile-honggfuzz-address-x86_64": [ 60%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 61%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 61%] Built target test_lib
Step #30 - "compile-honggfuzz-address-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 63%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 63%] Built target fuzz_json_prettify
Step #30 - "compile-honggfuzz-address-x86_64": [ 64%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 65%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 66%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 66%] Built target fuzz_csv_parsing
Step #30 - "compile-honggfuzz-address-x86_64": [ 67%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 67%] Built target fuzz_binary_reflection
Step #30 - "compile-honggfuzz-address-x86_64": [ 68%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 68%] Built target fuzz_json_roundtrip_floating
Step #30 - "compile-honggfuzz-address-x86_64": [ 69%] [32m[1mLinking CXX executable stencil_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 70%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 70%] Built target stencil_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 71%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 71%] Built target fuzz_json_roundtrip_string
Step #30 - "compile-honggfuzz-address-x86_64": [ 71%] Built target fuzz_json_reflection
Step #30 - "compile-honggfuzz-address-x86_64": [ 72%] [32m[1mLinking CXX executable json_conformance[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 73%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 73%] Built target json_conformance
Step #30 - "compile-honggfuzz-address-x86_64": [ 73%] Built target fuzz_json_roundtrip_int
Step #30 - "compile-honggfuzz-address-x86_64": [ 74%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 74%] Built target fuzz_json_generic
Step #30 - "compile-honggfuzz-address-x86_64": [ 75%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 76%] [32m[1mLinking CXX executable exceptions_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 76%] Built target inplace_vector_test_noexceptions
Step #30 - "compile-honggfuzz-address-x86_64": [ 77%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 77%] Built target exceptions_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 78%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 78%] Built target json_exhaustive_roundtrip_int
Step #30 - "compile-honggfuzz-address-x86_64": [ 78%] Built target json_exhaustive_roundtrip_float
Step #30 - "compile-honggfuzz-address-x86_64": [ 80%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 80%] Built target fuzz_json_with_comments
Step #30 - "compile-honggfuzz-address-x86_64": [ 81%] [32m[1mLinking CXX executable threading_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 81%] Built target threading_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 82%] [32m[1mLinking CXX executable lib_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 82%] Built target lib_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 83%] [32m[1mLinking CXX executable jmespath[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 83%] Built target jmespath
Step #30 - "compile-honggfuzz-address-x86_64": [ 84%] [32m[1mLinking CXX executable eigen_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 84%] Built target eigen_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 85%] [32m[1mLinking CXX executable json_t_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 85%] Built target json_t_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 86%] [32m[1mLinking CXX executable api_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 86%] Built target api_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 87%] [32m[1mLinking CXX executable toml_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 87%] Built target toml_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 88%] [32m[1mLinking CXX executable csv_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 88%] Built target csv_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 89%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 89%] Built target jsonrpc_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 90%] [32m[1mLinking CXX executable mock_json_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 90%] Built target mock_json_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 91%] [32m[1mLinking CXX executable reflection[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 91%] Built target reflection
Step #30 - "compile-honggfuzz-address-x86_64": [ 92%] [32m[1mLinking CXX executable json_performance[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 92%] Built target json_performance
Step #30 - "compile-honggfuzz-address-x86_64": [ 93%] [32m[1mLinking CXX executable example_json[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 93%] Built target example_json
Step #30 - "compile-honggfuzz-address-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 94%] Built target jsonschema_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 95%] Built target variant_ambiguous_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 96%] Built target json_reflection_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 97%] Built target beve_test
Step #30 - "compile-honggfuzz-address-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #30 - "compile-honggfuzz-address-x86_64": [ 98%] Built target json_test
Step #30 - "compile-honggfuzz-address-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #30 - "compile-honggfuzz-address-x86_64": [100%] Built target json_test_non_null
Step #30 - "compile-honggfuzz-address-x86_64": + fuzzing/ossfuzz.sh
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ --version
Step #30 - "compile-honggfuzz-address-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #30 - "compile-honggfuzz-address-x86_64": Target: x86_64-unknown-linux-gnu
Step #30 - "compile-honggfuzz-address-x86_64": Thread model: posix
Step #30 - "compile-honggfuzz-address-x86_64": InstalledDir: /usr/local/bin
Step #30 - "compile-honggfuzz-address-x86_64": + grep+  -v -E (exhaustive|main\.cpp)
Step #30 - "compile-honggfuzz-address-x86_64": ls fuzzing/binary_reflection.cpp fuzzing/csv_parsing.cpp fuzzing/json_exhaustive_roundtrip_float.cpp fuzzing/json_exhaustive_roundtrip_int.cpp fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cpp fuzzing/json_roundtrip_floating.cpp fuzzing/json_roundtrip_int.cpp fuzzing/json_roundtrip_string.cpp fuzzing/json_with_comments.cpp fuzzing/main.cpp
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=binary_reflection
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/honggfuzz-address-x86_64/binary_reflection /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=csv_parsing
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/honggfuzz-address-x86_64/csv_parsing /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_generic
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/honggfuzz-address-x86_64/json_generic /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_minify
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/honggfuzz-address-x86_64/json_minify /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_prettify
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/honggfuzz-address-x86_64/json_prettify /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_reflection
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/honggfuzz-address-x86_64/json_reflection /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_roundtrip_floating
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/honggfuzz-address-x86_64/json_roundtrip_floating /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_roundtrip_int
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/honggfuzz-address-x86_64/json_roundtrip_int /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_roundtrip_string
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/honggfuzz-address-x86_64/json_roundtrip_string /usr/lib/libFuzzingEngine.a
Step #30 - "compile-honggfuzz-address-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #30 - "compile-honggfuzz-address-x86_64": + NAME=json_with_comments
Step #30 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/honggfuzz-address-x86_64/json_with_comments /usr/lib/libFuzzingEngine.a
Finished Step #30 - "compile-honggfuzz-address-x86_64"
Starting Step #31 - "build-check-honggfuzz-address-x86_64"
Step #31 - "build-check-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_minify
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_reflection
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_with_comments
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/binary_reflection
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/csv_parsing
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_roundtrip_string
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_roundtrip_floating
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_prettify
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_roundtrip_int
Step #31 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpyib9ag92/json_generic
Finished Step #31 - "build-check-honggfuzz-address-x86_64"
Starting Step #32
Step #32: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #32
Starting Step #33
Step #33: Already have image: gcr.io/oss-fuzz/glaze
Step #33:   adding: binary_reflection (deflated 67%)
Step #33:   adding: csv_parsing (deflated 66%)
Step #33:   adding: honggfuzz (deflated 66%)
Step #33:   adding: json_generic (deflated 67%)
Step #33:   adding: json_minify (deflated 67%)
Step #33:   adding: json_prettify (deflated 67%)
Step #33:   adding: json_reflection (deflated 66%)
Step #33:   adding: json_roundtrip_floating (deflated 66%)
Step #33:   adding: json_roundtrip_int (deflated 68%)
Step #33:   adding: json_roundtrip_string (deflated 67%)
Step #33:   adding: json_with_comments (deflated 66%)
Step #33:   adding: llvm-symbolizer (deflated 65%)
Finished Step #33
Starting Step #34
Step #34: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #34:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #34:                                  Dload  Upload   Total   Spent    Left  Speed
Step #34:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    726 --:--:-- --:--:-- --:--:--   729
Finished Step #34
Starting Step #35
Step #35: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #35:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #35:                                  Dload  Upload   Total   Spent    Left  Speed
Step #35:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 15.6M    0     0  100 15.6M      0  54.2M --:--:-- --:--:-- --:--:-- 54.3M
Finished Step #35
Starting Step #36
Step #36: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #36:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #36:                                  Dload  Upload   Total   Spent    Left  Speed
Step #36:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    651 --:--:-- --:--:-- --:--:--   652
Finished Step #36
Starting Step #37
Step #37: Already have image (with digest): gcr.io/cloud-builders/curl
Step #37:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #37:                                  Dload  Upload   Total   Spent    Left  Speed
Step #37:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    134 --:--:-- --:--:-- --:--:--   134
Finished Step #37
Starting Step #38
Step #38: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #38
Starting Step #39 - "compile-libfuzzer-address-x86_64"
Step #39 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #39 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #39 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #39 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-address-x86_64": CC=clang
Step #39 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #39 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #39 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #39 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #39 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-address-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #39 - "compile-libfuzzer-address-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #39 - "compile-libfuzzer-address-x86_64": + mkdir build
Step #39 - "compile-libfuzzer-address-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #39 - "compile-libfuzzer-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #39 - "compile-libfuzzer-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features - done
Step #39 - "compile-libfuzzer-address-x86_64": -- Fetching dependencies...
Step #39 - "compile-libfuzzer-address-x86_64": -- ...finished fetching dependencies.
Step #39 - "compile-libfuzzer-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info - done
Step #39 - "compile-libfuzzer-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features
Step #39 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features - done
Step #39 - "compile-libfuzzer-address-x86_64": -- Performing Test haslibfuzzer
Step #39 - "compile-libfuzzer-address-x86_64": -- Performing Test haslibfuzzer - Success
Step #39 - "compile-libfuzzer-address-x86_64": -- Configuring done (4.1s)
Step #39 - "compile-libfuzzer-address-x86_64": -- Generating done (0.1s)
Step #39 - "compile-libfuzzer-address-x86_64": -- Build files have been written to: /src/glaze/build
Step #39 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #39 - "compile-libfuzzer-address-x86_64": + cmake --build build --config Release -j32
Step #39 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  8%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 18%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 24%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 29%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 34%] Built target utility_formats
Step #39 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 36%] Built target compare_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 41%] [32m[1mLinking CXX static library libmain.a[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 42%] Built target main
Step #39 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 44%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 44%] Built target cli_menu_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 46%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 46%] Built target key_transformers_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 48%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 49%] [32m[1mLinking CXX executable glaze_ide[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 49%] Built target inplace_vector_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 50%] Built target glaze_ide
Step #39 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 52%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 52%] Built target roundtrip_BEVE
Step #39 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 54%] [32m[1mLinking CXX executable int_parsing[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 54%] Built target int_parsing
Step #39 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 56%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 56%] Built target roundtrip_JSON
Step #39 - "compile-libfuzzer-address-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 58%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 58%] Built target test_lib
Step #39 - "compile-libfuzzer-address-x86_64": [ 60%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 61%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 61%] Built target fuzz_json_minify
Step #39 - "compile-libfuzzer-address-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 63%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 63%] Built target fuzz_json_prettify
Step #39 - "compile-libfuzzer-address-x86_64": [ 64%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 65%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 66%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 66%] Built target fuzz_csv_parsing
Step #39 - "compile-libfuzzer-address-x86_64": [ 67%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 67%] Built target fuzz_binary_reflection
Step #39 - "compile-libfuzzer-address-x86_64": [ 68%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 69%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 69%] Built target fuzz_json_reflection
Step #39 - "compile-libfuzzer-address-x86_64": [ 69%] Built target fuzz_json_roundtrip_floating
Step #39 - "compile-libfuzzer-address-x86_64": [ 70%] [32m[1mLinking CXX executable json_conformance[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 71%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 71%] Built target json_conformance
Step #39 - "compile-libfuzzer-address-x86_64": [ 71%] Built target fuzz_json_roundtrip_string
Step #39 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking CXX executable stencil_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 72%] Built target stencil_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 73%] Built target inplace_vector_test_noexceptions
Step #39 - "compile-libfuzzer-address-x86_64": [ 74%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 74%] Built target fuzz_json_generic
Step #39 - "compile-libfuzzer-address-x86_64": [ 75%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 75%] Built target fuzz_json_roundtrip_int
Step #39 - "compile-libfuzzer-address-x86_64": [ 76%] [32m[1mLinking CXX executable exceptions_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 77%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 78%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 80%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 80%] Built target exceptions_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 80%] Built target fuzz_json_with_comments
Step #39 - "compile-libfuzzer-address-x86_64": [ 80%] Built target json_exhaustive_roundtrip_int
Step #39 - "compile-libfuzzer-address-x86_64": [ 80%] Built target json_exhaustive_roundtrip_float
Step #39 - "compile-libfuzzer-address-x86_64": [ 81%] [32m[1mLinking CXX executable threading_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 81%] Built target threading_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 82%] [32m[1mLinking CXX executable jmespath[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 82%] Built target jmespath
Step #39 - "compile-libfuzzer-address-x86_64": [ 83%] [32m[1mLinking CXX executable eigen_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 83%] Built target eigen_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 84%] [32m[1mLinking CXX executable lib_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 84%] Built target lib_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 85%] [32m[1mLinking CXX executable json_t_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 86%] [32m[1mLinking CXX executable toml_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 86%] Built target json_t_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 86%] Built target toml_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 87%] [32m[1mLinking CXX executable api_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 87%] Built target api_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking CXX executable csv_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 88%] Built target csv_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 89%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 89%] Built target jsonrpc_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 90%] [32m[1mLinking CXX executable mock_json_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 91%] [32m[1mLinking CXX executable reflection[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 91%] Built target mock_json_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 91%] Built target reflection
Step #39 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking CXX executable example_json[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 92%] Built target example_json
Step #39 - "compile-libfuzzer-address-x86_64": [ 93%] [32m[1mLinking CXX executable json_performance[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 93%] Built target json_performance
Step #39 - "compile-libfuzzer-address-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 94%] Built target jsonschema_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 95%] Built target variant_ambiguous_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 96%] Built target json_reflection_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 97%] Built target beve_test
Step #39 - "compile-libfuzzer-address-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #39 - "compile-libfuzzer-address-x86_64": [ 98%] Built target json_test
Step #39 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #39 - "compile-libfuzzer-address-x86_64": [100%] Built target json_test_non_null
Step #39 - "compile-libfuzzer-address-x86_64": + fuzzing/ossfuzz.sh
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ --version
Step #39 - "compile-libfuzzer-address-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #39 - "compile-libfuzzer-address-x86_64": Target: x86_64-unknown-linux-gnu
Step #39 - "compile-libfuzzer-address-x86_64": Thread model: posix
Step #39 - "compile-libfuzzer-address-x86_64": InstalledDir: /usr/local/bin
Step #39 - "compile-libfuzzer-address-x86_64": + ls fuzzing/binary_reflection.cpp fuzzing/csv_parsing.cpp fuzzing/json_exhaustive_roundtrip_float.cpp fuzzing/json_exhaustive_roundtrip_int.cpp fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cpp fuzzing/json_roundtrip_floating.cpp fuzzing/json_roundtrip_int.cpp fuzzing/json_roundtrip_string.cpp fuzzing/json_with_comments.cpp fuzzing/main.cpp
Step #39 - "compile-libfuzzer-address-x86_64": + grep -v -E (exhaustive|main\.cpp)
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=binary_reflection
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/libfuzzer-address-x86_64/binary_reflection -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=csv_parsing
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/libfuzzer-address-x86_64/csv_parsing -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_generic
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/libfuzzer-address-x86_64/json_generic -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_minify
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/libfuzzer-address-x86_64/json_minify -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_prettify
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/libfuzzer-address-x86_64/json_prettify -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_reflection
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/libfuzzer-address-x86_64/json_reflection -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_roundtrip_floating
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/libfuzzer-address-x86_64/json_roundtrip_floating -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_roundtrip_int
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/libfuzzer-address-x86_64/json_roundtrip_int -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_roundtrip_string
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/libfuzzer-address-x86_64/json_roundtrip_string -fsanitize=fuzzer
Step #39 - "compile-libfuzzer-address-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #39 - "compile-libfuzzer-address-x86_64": + NAME=json_with_comments
Step #39 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/libfuzzer-address-x86_64/json_with_comments -fsanitize=fuzzer
Finished Step #39 - "compile-libfuzzer-address-x86_64"
Starting Step #40 - "build-check-libfuzzer-address-x86_64"
Step #40 - "build-check-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_minify
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_reflection
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_with_comments
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/binary_reflection
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/csv_parsing
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_roundtrip_string
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_roundtrip_floating
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_prettify
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_roundtrip_int
Step #40 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmprlnf71cw/json_generic
Finished Step #40 - "build-check-libfuzzer-address-x86_64"
Starting Step #41
Step #41: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #41
Starting Step #42
Step #42: Already have image: gcr.io/oss-fuzz/glaze
Step #42:   adding: binary_reflection (deflated 66%)
Step #42:   adding: csv_parsing (deflated 66%)
Step #42:   adding: json_generic (deflated 67%)
Step #42:   adding: json_minify (deflated 66%)
Step #42:   adding: json_prettify (deflated 66%)
Step #42:   adding: json_reflection (deflated 66%)
Step #42:   adding: json_roundtrip_floating (deflated 66%)
Step #42:   adding: json_roundtrip_int (deflated 68%)
Step #42:   adding: json_roundtrip_string (deflated 66%)
Step #42:   adding: json_with_comments (deflated 66%)
Step #42:   adding: llvm-symbolizer (deflated 65%)
Finished Step #42
Starting Step #43
Step #43: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #43:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #43:                                  Dload  Upload   Total   Spent    Left  Speed
Step #43:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    862 --:--:-- --:--:-- --:--:--   867
Finished Step #43
Starting Step #44
Step #44: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #44:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #44:                                  Dload  Upload   Total   Spent    Left  Speed
Step #44:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 21.3M    0     0  100 21.3M      0  47.8M --:--:-- --:--:-- --:--:-- 48.0M
Finished Step #44
Starting Step #45
Step #45: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #45:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #45:                                  Dload  Upload   Total   Spent    Left  Speed
Step #45:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    677 --:--:-- --:--:-- --:--:--   678
Finished Step #45
Starting Step #46
Step #46: Already have image (with digest): gcr.io/cloud-builders/curl
Step #46:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #46:                                  Dload  Upload   Total   Spent    Left  Speed
Step #46:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    155 --:--:-- --:--:-- --:--:--   155
Finished Step #46
Starting Step #47
Step #47: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #47
Starting Step #48 - "compile-libfuzzer-undefined-x86_64"
Step #48 - "compile-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": vm.mmap_rnd_bits = 28
Step #48 - "compile-libfuzzer-undefined-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": CC=clang
Step #48 - "compile-libfuzzer-undefined-x86_64": CXX=clang++
Step #48 - "compile-libfuzzer-undefined-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function
Step #48 - "compile-libfuzzer-undefined-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++
Step #48 - "compile-libfuzzer-undefined-x86_64": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": + sed -i '/add_subdirectory(networking_tests)/d' ./tests/CMakeLists.txt
Step #48 - "compile-libfuzzer-undefined-x86_64": + sed -i '/target_compile_options(glz_test_common INTERFACE -fno-exceptions -fno-rtti)/d' ./tests/CMakeLists.txt
Step #48 - "compile-libfuzzer-undefined-x86_64": + mkdir build
Step #48 - "compile-libfuzzer-undefined-x86_64": + cmake -B build -DCMAKE_BUILD_TYPE=Release
Step #48 - "compile-libfuzzer-undefined-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compiler ABI info - done
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting CXX compile features - done
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Fetching dependencies...
Step #48 - "compile-libfuzzer-undefined-x86_64": -- ...finished fetching dependencies.
Step #48 - "compile-libfuzzer-undefined-x86_64": -- The C compiler identification is Clang 22.0.0
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compiler ABI info - done
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Detecting C compile features - done
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Performing Test haslibfuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Performing Test haslibfuzzer - Success
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Configuring done (4.7s)
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Generating done (0.1s)
Step #48 - "compile-libfuzzer-undefined-x86_64": -- Build files have been written to: /src/glaze/build
Step #48 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #48 - "compile-libfuzzer-undefined-x86_64": + cmake --build build --config Release -j32
Step #48 - "compile-libfuzzer-undefined-x86_64": [  1%] [32mBuilding CXX object tests/api_test/CMakeFiles/api_test.dir/api_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  2%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/client.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  3%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/i_glaze.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  6%] [32mBuilding CXX object tests/compare_test/CMakeFiles/compare_test.dir/compare_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  7%] [32mBuilding CXX object tests/beve_test/CMakeFiles/beve_test.dir/beve_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  7%] [32mBuilding CXX object tests/cli_menu_test/CMakeFiles/cli_menu_test.dir/cli_menu_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  7%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/interop/interop.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  8%] [32mBuilding CXX object tests/csv_test/CMakeFiles/csv_test.dir/csv_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [  9%] [32mBuilding CXX object CMakeFiles/glaze_ide.dir/src/main.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 11%] [32mBuilding CXX object tests/eigen_test/CMakeFiles/eigen_test.dir/eigen_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 12%] [32mBuilding CXX object tests/example_json/CMakeFiles/example_json.dir/example_json.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 12%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test.dir/inplace_vector_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 13%] [32mBuilding CXX object tests/exceptions_test/CMakeFiles/exceptions_test.dir/exceptions_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 14%] [32mBuilding CXX object tests/inplace_vector/CMakeFiles/inplace_vector_test_noexceptions.dir/inplace_vector_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 15%] [32mBuilding CXX object tests/int_parsing/CMakeFiles/int_parsing.dir/int_parsing.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 16%] [32mBuilding CXX object tests/jmespath/CMakeFiles/jmespath.dir/jmespath.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 18%] [32mBuilding CXX object tests/key_transformers_test/CMakeFiles/key_transformers_test.dir/key_transformers_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 18%] [32mBuilding CXX object tests/jsonrpc_test/CMakeFiles/jsonrpc_test.dir/jsonrpc_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 20%] [32mBuilding CXX object tests/lib_test/test_lib/CMakeFiles/test_lib.dir/test_lib.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 21%] [32mBuilding CXX object tests/mock_json_test/CMakeFiles/mock_json_test.dir/mock_json_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 22%] [32mBuilding CXX object tests/stencil/CMakeFiles/stencil_test.dir/stencil_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 24%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_JSON.dir/roundtrip.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 24%] [32mBuilding CXX object tests/roundtrip/CMakeFiles/roundtrip_BEVE.dir/roundtrip.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 26%] [32mBuilding CXX object tests/reflection/CMakeFiles/reflection.dir/reflection.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 26%] [32mBuilding CXX object tests/toml_test/CMakeFiles/toml_test.dir/toml_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 27%] [32mBuilding CXX object tests/threading_test/CMakeFiles/threading_test.dir/threading_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 28%] [32mBuilding CXX object tests/json_conformance/CMakeFiles/json_conformance.dir/json_conformance.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 29%] [32mBuilding CXX object tests/utility_formats/CMakeFiles/utility_formats.dir/utility_formats.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 30%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test.dir/json_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 31%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_test_non_null.dir/json_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 32%] [32mBuilding CXX object tests/json_performance/CMakeFiles/json_performance.dir/json_performance.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 33%] [32mBuilding CXX object tests/json_reflection_test/CMakeFiles/json_reflection_test.dir/json_reflection_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 34%] [32m[1mLinking CXX executable utility_formats[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 34%] Built target utility_formats
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 35%] [32mBuilding CXX object tests/json_test/CMakeFiles/json_t_test.dir/json_t_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 36%] [32m[1mLinking CXX executable compare_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 36%] Built target compare_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 37%] [32mBuilding CXX object tests/json_test/CMakeFiles/jsonschema_test.dir/jsonschema_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 38%] [32mBuilding CXX object tests/json_test/CMakeFiles/variant_ambiguous_test.dir/variant_ambiguous_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 40%] [32mBuilding CXX object fuzzing/CMakeFiles/main.dir/main.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 41%] [32m[1mLinking CXX static library libmain.a[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 41%] Built target main
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 42%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_binary_reflection.dir/binary_reflection.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 43%] [32m[1mLinking CXX executable cli_menu_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 44%] [32m[1mLinking CXX executable key_transformers_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 44%] Built target cli_menu_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 45%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_csv_parsing.dir/csv_parsing.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 46%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_generic.dir/json_generic.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 46%] Built target key_transformers_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 47%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_minify.dir/json_minify.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 48%] [32m[1mLinking CXX executable roundtrip_BEVE[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 48%] Built target roundtrip_BEVE
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 49%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_prettify.dir/json_prettify.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 50%] [32m[1mLinking CXX executable int_parsing[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 51%] [32m[1mLinking CXX executable inplace_vector_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 52%] [32m[1mLinking CXX executable glaze_ide[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 52%] Built target int_parsing
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 53%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_reflection.dir/json_reflection.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 53%] Built target inplace_vector_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 54%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_floating.dir/json_roundtrip_floating.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 54%] Built target glaze_ide
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 55%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_int.dir/json_roundtrip_int.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 56%] [32m[1mLinking CXX executable roundtrip_JSON[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 56%] Built target roundtrip_JSON
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 57%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_roundtrip_string.dir/json_roundtrip_string.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 58%] [32m[1mLinking CXX executable fuzz_json_minify[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 60%] [32m[1mLinking CXX shared library /src/glaze/bin/libtest_lib.so[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 60%] Built target test_lib
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 61%] [32mBuilding CXX object fuzzing/CMakeFiles/fuzz_json_with_comments.dir/json_with_comments.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 61%] Built target fuzz_json_minify
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 62%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_int.dir/json_exhaustive_roundtrip_int.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 63%] [32m[1mLinking CXX executable fuzz_json_prettify[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 63%] Built target fuzz_json_prettify
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 64%] [32mBuilding CXX object fuzzing/CMakeFiles/json_exhaustive_roundtrip_float.dir/json_exhaustive_roundtrip_float.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 65%] [32m[1mLinking CXX executable fuzz_csv_parsing[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 66%] [32m[1mLinking CXX executable fuzz_binary_reflection[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 66%] Built target fuzz_csv_parsing
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 67%] [32mBuilding CXX object tests/lib_test/CMakeFiles/lib_test.dir/lib_test.cpp.o[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 67%] Built target fuzz_binary_reflection
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 68%] [32m[1mLinking CXX executable stencil_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 68%] Built target stencil_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 69%] [32m[1mLinking CXX executable json_conformance[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 70%] [32m[1mLinking CXX executable fuzz_json_roundtrip_string[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 70%] Built target json_conformance
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 71%] [32m[1mLinking CXX executable fuzz_json_roundtrip_floating[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 71%] Built target fuzz_json_roundtrip_string
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 71%] Built target fuzz_json_roundtrip_floating
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 72%] [32m[1mLinking CXX executable inplace_vector_test_noexceptions[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 73%] [32m[1mLinking CXX executable fuzz_json_reflection[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 74%] [32m[1mLinking CXX executable fuzz_json_roundtrip_int[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 74%] Built target inplace_vector_test_noexceptions
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 74%] Built target fuzz_json_reflection
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 74%] Built target fuzz_json_roundtrip_int
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 75%] [32m[1mLinking CXX executable fuzz_json_generic[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 75%] Built target fuzz_json_generic
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 76%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_float[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 77%] [32m[1mLinking CXX executable toml_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 77%] Built target json_exhaustive_roundtrip_float
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 77%] Built target toml_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 78%] [32m[1mLinking CXX executable json_exhaustive_roundtrip_int[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 78%] Built target json_exhaustive_roundtrip_int
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 80%] [32m[1mLinking CXX executable fuzz_json_with_comments[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 80%] Built target fuzz_json_with_comments
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 81%] [32m[1mLinking CXX executable lib_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 81%] Built target lib_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 82%] [32m[1mLinking CXX executable exceptions_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 82%] Built target exceptions_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 83%] [32m[1mLinking CXX executable eigen_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 84%] [32m[1mLinking CXX executable jmespath[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 84%] Built target eigen_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 84%] Built target jmespath
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 85%] [32m[1mLinking CXX executable json_t_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 85%] Built target json_t_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 86%] [32m[1mLinking CXX executable threading_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 86%] Built target threading_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 87%] [32m[1mLinking CXX executable api_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 87%] Built target api_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 88%] [32m[1mLinking CXX executable csv_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 88%] Built target csv_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 89%] [32m[1mLinking CXX executable jsonrpc_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 89%] Built target jsonrpc_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 90%] [32m[1mLinking CXX executable reflection[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 90%] Built target reflection
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 91%] [32m[1mLinking CXX executable mock_json_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 91%] Built target mock_json_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 92%] [32m[1mLinking CXX executable example_json[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 92%] Built target example_json
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 93%] [32m[1mLinking CXX executable json_performance[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 93%] Built target json_performance
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 94%] [32m[1mLinking CXX executable jsonschema_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 94%] Built target jsonschema_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 95%] [32m[1mLinking CXX executable variant_ambiguous_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 95%] Built target variant_ambiguous_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 96%] [32m[1mLinking CXX executable json_reflection_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 96%] Built target json_reflection_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 97%] [32m[1mLinking CXX executable beve_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 97%] Built target beve_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 98%] [32m[1mLinking CXX executable json_test[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [ 98%] Built target json_test
Step #48 - "compile-libfuzzer-undefined-x86_64": [100%] [32m[1mLinking CXX executable json_test_non_null[0m
Step #48 - "compile-libfuzzer-undefined-x86_64": [100%] Built target json_test_non_null
Step #48 - "compile-libfuzzer-undefined-x86_64": + fuzzing/ossfuzz.sh
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ --version
Step #48 - "compile-libfuzzer-undefined-x86_64": clang version 22.0.0git (https://github.com/llvm/llvm-project.git cb2f0d0a5f14c183e7182aba0f0e54a518de9e3f)
Step #48 - "compile-libfuzzer-undefined-x86_64": Target: x86_64-unknown-linux-gnu
Step #48 - "compile-libfuzzer-undefined-x86_64": Thread model: posix
Step #48 - "compile-libfuzzer-undefined-x86_64": InstalledDir: /usr/local/bin
Step #48 - "compile-libfuzzer-undefined-x86_64": + + ls fuzzing/binary_reflection.cpp fuzzing/csv_parsing.cpp fuzzing/json_exhaustive_roundtrip_float.cpp fuzzing/json_exhaustive_roundtrip_int.cpp fuzzing/json_generic.cpp fuzzing/json_minify.cpp fuzzing/json_prettify.cpp fuzzing/json_reflection.cppgrep fuzzing/json_roundtrip_floating.cpp -v fuzzing/json_roundtrip_int.cpp -E fuzzing/json_roundtrip_string.cpp (exhaustive|main\.cpp) fuzzing/json_with_comments.cpp
Step #48 - "compile-libfuzzer-undefined-x86_64":  fuzzing/main.cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/binary_reflection.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=binary_reflection
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/binary_reflection.cpp -o /workspace/out/libfuzzer-undefined-x86_64/binary_reflection -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/csv_parsing.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=csv_parsing
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/csv_parsing.cpp -o /workspace/out/libfuzzer-undefined-x86_64/csv_parsing -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_generic.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_generic
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_generic.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_generic -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_minify.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_minify
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_minify.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_minify -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_prettify.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_prettify
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_prettify.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_prettify -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_reflection.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_reflection
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_reflection.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_reflection -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_roundtrip_floating.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_roundtrip_floating
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_floating.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_roundtrip_floating -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_roundtrip_int.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_roundtrip_int
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_int.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_roundtrip_int -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_roundtrip_string.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_roundtrip_string
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_roundtrip_string.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_roundtrip_string -fsanitize=fuzzer
Step #48 - "compile-libfuzzer-undefined-x86_64": + basename fuzzing/json_with_comments.cpp .cpp
Step #48 - "compile-libfuzzer-undefined-x86_64": + NAME=json_with_comments
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++23 -g -Iinclude fuzzing/json_with_comments.cpp -o /workspace/out/libfuzzer-undefined-x86_64/json_with_comments -fsanitize=fuzzer
Finished Step #48 - "compile-libfuzzer-undefined-x86_64"
Starting Step #49 - "build-check-libfuzzer-undefined-x86_64"
Step #49 - "build-check-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_minify
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_reflection
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_with_comments
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/binary_reflection
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/csv_parsing
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_roundtrip_string
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_roundtrip_floating
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_prettify
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_roundtrip_int
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp5vspompy/json_generic
Finished Step #49 - "build-check-libfuzzer-undefined-x86_64"
Starting Step #50
Step #50: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #50
Starting Step #51
Step #51: Already have image: gcr.io/oss-fuzz/glaze
Step #51:   adding: binary_reflection (deflated 66%)
Step #51:   adding: csv_parsing (deflated 65%)
Step #51:   adding: json_generic (deflated 67%)
Step #51:   adding: json_minify (deflated 65%)
Step #51:   adding: json_prettify (deflated 65%)
Step #51:   adding: json_reflection (deflated 65%)
Step #51:   adding: json_roundtrip_floating (deflated 65%)
Step #51:   adding: json_roundtrip_int (deflated 67%)
Step #51:   adding: json_roundtrip_string (deflated 65%)
Step #51:   adding: json_with_comments (deflated 65%)
Step #51:   adding: llvm-symbolizer (deflated 65%)
Finished Step #51
Starting Step #52
Step #52: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #52:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #52:                                  Dload  Upload   Total   Spent    Left  Speed
Step #52:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   151    0     0  100   151      0    763 --:--:-- --:--:-- --:--:--   766
Finished Step #52
Starting Step #53
Step #53: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #53:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #53:                                  Dload  Upload   Total   Spent    Left  Speed
Step #53:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 14.2M    0     0  100 14.2M      0  45.9M --:--:-- --:--:-- --:--:-- 45.9M
Finished Step #53
Starting Step #54
Step #54: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #54:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #54:                                  Dload  Upload   Total   Spent    Left  Speed
Step #54:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   169    0     0  100   169      0    709 --:--:-- --:--:-- --:--:--   710
Finished Step #54
Starting Step #55
Step #55: Already have image (with digest): gcr.io/cloud-builders/curl
Step #55:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #55:                                  Dload  Upload   Total   Spent    Left  Speed
Step #55:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    32    0     0  100    32      0    162 --:--:-- --:--:-- --:--:--   162
Finished Step #55
Starting Step #56
Step #56: Already have image: gcr.io/oss-fuzz/glaze
Finished Step #56
PUSH
DONE
