starting build "4d35bbe3-c9d4-430d-aed1-13870607f43a"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901"
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Sending build context to Docker daemon   5.12kB
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Step 1/5 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b549f31133a9: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": cad0867f0297: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 5d07bc49990e: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 21aae50984bf: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2b5f5f715028: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": fb6a199bc10f: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1c207e5b0063: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": caf57254f43a: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1462b1d00e14: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 540ea4dfdceb: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 8fdd4b5faaa9: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 40d7bc1ff8c7: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": d2eb4100ded1: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 156a283b0470: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e9658ec5255e: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c4e6646538bb: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6939a674b517: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 003b03fbacbd: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 58292fae4de9: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b06c7963df6e: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b6ae7f0c1d24: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 551029df1c46: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2f5903485cae: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 60671fdd34b1: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c1a14989bf3a: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 10a7a3f93f2d: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 22ef1e73dafd: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c9621467b9f7: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6e67e1dc3fc0: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b9c4ff0b77c8: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 155c2dfe5c67: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b5f1ebb46627: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e959da9f743c: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c66a5b9ffa39: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0f4fc2b4c404: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 780b129705e7: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": a9144c235512: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e16fcfe620a9: Pulling fs layer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": fb6a199bc10f: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1c207e5b0063: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": caf57254f43a: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1462b1d00e14: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 540ea4dfdceb: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 8fdd4b5faaa9: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 40d7bc1ff8c7: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": d2eb4100ded1: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 156a283b0470: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e9658ec5255e: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c4e6646538bb: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6939a674b517: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 003b03fbacbd: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 58292fae4de9: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b06c7963df6e: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b6ae7f0c1d24: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 551029df1c46: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2f5903485cae: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 60671fdd34b1: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c1a14989bf3a: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 21aae50984bf: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0f4fc2b4c404: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 10a7a3f93f2d: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 780b129705e7: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 22ef1e73dafd: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": a9144c235512: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c9621467b9f7: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e16fcfe620a9: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6e67e1dc3fc0: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2b5f5f715028: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b9c4ff0b77c8: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 155c2dfe5c67: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c66a5b9ffa39: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b5f1ebb46627: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e959da9f743c: Waiting
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 5d07bc49990e: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 5d07bc49990e: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b549f31133a9: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b549f31133a9: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2b5f5f715028: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2b5f5f715028: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 21aae50984bf: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 21aae50984bf: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1c207e5b0063: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1c207e5b0063: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": caf57254f43a: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": caf57254f43a: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": cad0867f0297: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": cad0867f0297: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b549f31133a9: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 540ea4dfdceb: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 540ea4dfdceb: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 8fdd4b5faaa9: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 8fdd4b5faaa9: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 40d7bc1ff8c7: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 40d7bc1ff8c7: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": d2eb4100ded1: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": d2eb4100ded1: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 156a283b0470: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 156a283b0470: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1462b1d00e14: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1462b1d00e14: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c4e6646538bb: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c4e6646538bb: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e9658ec5255e: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e9658ec5255e: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 003b03fbacbd: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 003b03fbacbd: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6939a674b517: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6939a674b517: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 58292fae4de9: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 58292fae4de9: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b06c7963df6e: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b06c7963df6e: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b6ae7f0c1d24: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b6ae7f0c1d24: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 551029df1c46: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 551029df1c46: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 60671fdd34b1: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2f5903485cae: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2f5903485cae: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c1a14989bf3a: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c1a14989bf3a: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 10a7a3f93f2d: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 10a7a3f93f2d: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 22ef1e73dafd: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c9621467b9f7: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c9621467b9f7: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": cad0867f0297: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6e67e1dc3fc0: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6e67e1dc3fc0: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 5d07bc49990e: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b9c4ff0b77c8: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b9c4ff0b77c8: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 155c2dfe5c67: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 155c2dfe5c67: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": fb6a199bc10f: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": fb6a199bc10f: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e959da9f743c: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e959da9f743c: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b5f1ebb46627: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c66a5b9ffa39: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c66a5b9ffa39: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0f4fc2b4c404: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0f4fc2b4c404: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 780b129705e7: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 780b129705e7: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": a9144c235512: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e16fcfe620a9: Verifying Checksum
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e16fcfe620a9: Download complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 21aae50984bf: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2b5f5f715028: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": fb6a199bc10f: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1c207e5b0063: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": caf57254f43a: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 1462b1d00e14: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 540ea4dfdceb: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 8fdd4b5faaa9: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 40d7bc1ff8c7: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": d2eb4100ded1: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 156a283b0470: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e9658ec5255e: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c4e6646538bb: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6939a674b517: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 003b03fbacbd: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 58292fae4de9: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b06c7963df6e: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b6ae7f0c1d24: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 551029df1c46: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 2f5903485cae: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 60671fdd34b1: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c1a14989bf3a: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 10a7a3f93f2d: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 22ef1e73dafd: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c9621467b9f7: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 6e67e1dc3fc0: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b9c4ff0b77c8: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 155c2dfe5c67: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": b5f1ebb46627: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e959da9f743c: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": c66a5b9ffa39: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0f4fc2b4c404: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 780b129705e7: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": a9144c235512: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": e16fcfe620a9: Pull complete
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Digest: sha256:8fc5606cec35d1cab8811d4eb15e44698bbd03e93eaafd3012d6e6231b2ff825
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> 0439b55c80f1
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Step 2/5 : RUN apt-get update && apt-get install -y cmake libgc-dev pkg-config
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> Running in 2af2a8460b2e
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Reading package lists...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Reading package lists...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Building dependency tree...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Reading state information...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": The following packages were automatically installed and are no longer required:
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   autotools-dev libsigsegv2 m4
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Use 'apt autoremove' to remove them.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": The following additional packages will be installed:
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   cmake-data libarchive13 libgc1c2 libglib2.0-0 libglib2.0-data libicu66
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   libjsoncpp1 librhash0 libuv1 libxml2 shared-mime-info xdg-user-dirs
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Suggested packages:
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   cmake-doc ninja-build lrzip
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": The following NEW packages will be installed:
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   cmake cmake-data libarchive13 libgc-dev libgc1c2 libglib2.0-0
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   libglib2.0-data libicu66 libjsoncpp1 librhash0 libuv1 libxml2 pkg-config
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":   shared-mime-info xdg-user-dirs
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": 0 upgraded, 15 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Need to get 17.2 MB of archives.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": After this operation, 74.1 MB of additional disk space will be used.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-0 amd64 2.64.6-1~ubuntu20.04.9 [1290 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-data all 2.64.6-1~ubuntu20.04.9 [5836 B]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libicu66 amd64 66.1-2ubuntu2.1 [8515 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libxml2 amd64 2.9.10+dfsg-5ubuntu0.20.04.10 [640 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 shared-mime-info amd64 1.15-1 [430 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 xdg-user-dirs amd64 0.17-2ubuntu1 [48.3 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.5 [80.9 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake-data all 3.16.3-1ubuntu1.20.04.1 [1613 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.5 [327 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake amd64 3.16.3-1ubuntu1.20.04.1 [3668 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 libgc1c2 amd64 1:7.6.4-0.4ubuntu1 [83.9 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:14 http://archive.ubuntu.com/ubuntu focal/main amd64 libgc-dev amd64 1:7.6.4-0.4ubuntu1 [234 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": [91mdebconf: delaying package configuration, since apt-utils is not installed
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": [0mFetched 17.2 MB in 3s (5037 kB/s)
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libglib2.0-0:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17483 files and directories currently installed.)
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../00-libglib2.0-0_2.64.6-1~ubuntu20.04.9_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libglib2.0-data.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../01-libglib2.0-data_2.64.6-1~ubuntu20.04.9_all.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libicu66:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../02-libicu66_66.1-2ubuntu2.1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libxml2:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../03-libxml2_2.9.10+dfsg-5ubuntu0.20.04.10_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package shared-mime-info.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../04-shared-mime-info_1.15-1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking shared-mime-info (1.15-1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package xdg-user-dirs.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../05-xdg-user-dirs_0.17-2ubuntu1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libuv1:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../06-libuv1_1.34.2-1ubuntu1.5_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package cmake-data.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../07-cmake-data_3.16.3-1ubuntu1.20.04.1_all.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libarchive13:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../08-libarchive13_3.4.0-2ubuntu1.5_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libjsoncpp1:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../09-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package librhash0:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../10-librhash0_1.3.9-1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package cmake.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../11-cmake_3.16.3-1ubuntu1.20.04.1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libgc1c2:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../12-libgc1c2_1%3a7.6.4-0.4ubuntu1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libgc1c2:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package libgc-dev:amd64.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../13-libgc-dev_1%3a7.6.4-0.4ubuntu1_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking libgc-dev:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Selecting previously unselected package pkg-config.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Preparing to unpack .../14-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Unpacking pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libgc1c2:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": No schema files found: doing nothing.
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libgc-dev:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up shared-mime-info (1.15-1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Setting up cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Processing triggers for libc-bin (2.31-0ubuntu9.18) ...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Removing intermediate container 2af2a8460b2e
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> 85cf8d902a7a
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Step 3/5 : RUN git clone --depth 1 https://github.com/arximboldi/immer.git immer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> Running in 654cac81da1c
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": [91mCloning into 'immer'...
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": [0mRemoving intermediate container 654cac81da1c
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> ee73b9725f92
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Step 4/5 : WORKDIR immer
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> Running in a0dccbd017fb
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Removing intermediate container a0dccbd017fb
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> b6d632d0286d
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Step 5/5 : COPY build.sh $SRC/
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901":  ---> 9e3c469861fd
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Successfully built 9e3c469861fd
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Successfully tagged gcr.io/oss-fuzz/immer:latest
Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/immer:latest
Finished Step #1 - "build-65d62c17-e833-4926-94e7-8db1b9885901"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/immer
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/filegyXfBM
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/immer/.git
Step #2 - "srcmap": + GIT_DIR=/src/immer
Step #2 - "srcmap": + cd /src/immer
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/arximboldi/immer.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=df6ef46d97e1fe81f397015b9aeb32505cef653b
Step #2 - "srcmap": + jq_inplace /tmp/filegyXfBM '."/src/immer" = { type: "git", url: "https://github.com/arximboldi/immer.git", rev: "df6ef46d97e1fe81f397015b9aeb32505cef653b" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/file3379ma
Step #2 - "srcmap": + cat /tmp/filegyXfBM
Step #2 - "srcmap": + jq '."/src/immer" = { type: "git", url: "https://github.com/arximboldi/immer.git", rev: "df6ef46d97e1fe81f397015b9aeb32505cef653b" }'
Step #2 - "srcmap": + mv /tmp/file3379ma /tmp/filegyXfBM
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/filegyXfBM
Step #2 - "srcmap": + rm /tmp/filegyXfBM
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/immer": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/arximboldi/immer.git",
Step #2 - "srcmap":     "rev": "df6ef46d97e1fe81f397015b9aeb32505cef653b"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + mkdir build
Step #3 - "compile-afl-address-x86_64": + cd build
Step #3 - "compile-afl-address-x86_64": + cmake .. -DBOEHM_GC_INCLUDE_DIR=/usr/include -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a -Dimmer_BUILD_TESTS=OFF
Step #3 - "compile-afl-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working C compiler: /src/aflplusplus/afl-clang-fast - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working CXX compiler: /src/aflplusplus/afl-clang-fast++ - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #3 - "compile-afl-address-x86_64": -- Found Threads: TRUE
Step #3 - "compile-afl-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #3 - "compile-afl-address-x86_64": -- Found GC library: /usr/lib/x86_64-linux-gnu/libgc.a
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at /usr/local/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
Step #3 - "compile-afl-address-x86_64":   The package name passed to `find_package_handle_standard_args` (Boehm_GC)
Step #3 - "compile-afl-address-x86_64":   does not match the name of the calling package (BoehmGC).  This can lead to
Step #3 - "compile-afl-address-x86_64":   problems in calling code that expects `find_package` result variables
Step #3 - "compile-afl-address-x86_64":   (e.g., `_FOUND`) to follow a certain pattern.
Step #3 - "compile-afl-address-x86_64": Call Stack (most recent call first):
Step #3 - "compile-afl-address-x86_64":   cmake/FindBoehmGC.cmake:108 (find_package_handle_standard_args)
Step #3 - "compile-afl-address-x86_64":   CMakeLists.txt:86 (find_package)
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found Boehm_GC: /usr/lib/x86_64-linux-gnu/libgc.a
Step #3 - "compile-afl-address-x86_64": -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.56")
Step #3 - "compile-afl-address-x86_64": -- Using ccache: /usr/local/bin/ccache
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:22 (find_package):
Step #3 - "compile-afl-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #3 - "compile-afl-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #3 - "compile-afl-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found PythonInterp: /usr/local/bin/python (found version "3.11.13")
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:23 (find_package):
Step #3 - "compile-afl-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #3 - "compile-afl-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #3 - "compile-afl-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found PythonLibs: /usr/local/lib/libpython3.11.so (found version "3.11.13")
Step #3 - "compile-afl-address-x86_64": -- Checking for module 'guile-2.2'
Step #3 - "compile-afl-address-x86_64": --   No package 'guile-2.2' found
Step #3 - "compile-afl-address-x86_64": -- Disabling Guile modules
Step #3 - "compile-afl-address-x86_64": -- Configuring done (1.3s)
Step #3 - "compile-afl-address-x86_64": -- Generating done (0.1s)
Step #3 - "compile-afl-address-x86_64": -- Build files have been written to: /src/immer/build
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32 fuzzers
Step #3 - "compile-afl-address-x86_64": [  2%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector.dir/vector.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array-gc.dir/array-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  7%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array.dir/array.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 10%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-gc.dir/flex-vector-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-bo.dir/flex-vector-bo.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 15%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-st.dir/flex-vector-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector.dir/flex-vector.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 21%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-gc.dir/map-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str-conflict.dir/map-st-str-conflict.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str.dir/map-st-str.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 28%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map.dir/map.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st.dir/map-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-gc.dir/set-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str-conflict.dir/set-st-str-conflict.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 39%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str.dir/set-st-str.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st.dir/set-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set.dir/set.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-gc.dir/vector-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 50%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-st.dir/vector-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] [32m[1mLinking CXX executable array-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] Built target extra-fuzzer-array-gc
Step #3 - "compile-afl-address-x86_64": [ 55%] [32m[1mLinking CXX executable array[0m
Step #3 - "compile-afl-address-x86_64": [ 57%] [32m[1mLinking CXX executable set-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 57%] Built target extra-fuzzer-set-gc
Step #3 - "compile-afl-address-x86_64": [ 57%] Built target extra-fuzzer-array
Step #3 - "compile-afl-address-x86_64": [ 60%] [32m[1mLinking CXX executable map-st[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] [32m[1mLinking CXX executable map[0m
Step #3 - "compile-afl-address-x86_64": [ 65%] [32m[1mLinking CXX executable vector-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 68%] [32m[1mLinking CXX executable map-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 68%] Built target extra-fuzzer-map-st
Step #3 - "compile-afl-address-x86_64": [ 68%] Built target extra-fuzzer-map
Step #3 - "compile-afl-address-x86_64": [ 68%] Built target extra-fuzzer-vector-gc
Step #3 - "compile-afl-address-x86_64": [ 68%] Built target extra-fuzzer-map-gc
Step #3 - "compile-afl-address-x86_64": [ 71%] [32m[1mLinking CXX executable vector[0m
Step #3 - "compile-afl-address-x86_64": [ 73%] [32m[1mLinking CXX executable set[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] [32m[1mLinking CXX executable set-st[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] Built target extra-fuzzer-vector
Step #3 - "compile-afl-address-x86_64": [ 76%] Built target extra-fuzzer-set
Step #3 - "compile-afl-address-x86_64": [ 78%] [32m[1mLinking CXX executable vector-st[0m
Step #3 - "compile-afl-address-x86_64": [ 78%] Built target extra-fuzzer-set-st
Step #3 - "compile-afl-address-x86_64": [ 81%] [32m[1mLinking CXX executable set-st-str-conflict[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] Built target extra-fuzzer-vector-st
Step #3 - "compile-afl-address-x86_64": [ 81%] Built target extra-fuzzer-set-st-str-conflict
Step #3 - "compile-afl-address-x86_64": [ 84%] [32m[1mLinking CXX executable set-st-str[0m
Step #3 - "compile-afl-address-x86_64": [ 84%] Built target extra-fuzzer-set-st-str
Step #3 - "compile-afl-address-x86_64": [ 86%] [32m[1mLinking CXX executable map-st-str-conflict[0m
Step #3 - "compile-afl-address-x86_64": [ 89%] [32m[1mLinking CXX executable map-st-str[0m
Step #3 - "compile-afl-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str-conflict
Step #3 - "compile-afl-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str
Step #3 - "compile-afl-address-x86_64": [ 92%] [32m[1mLinking CXX executable flex-vector-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] Built target extra-fuzzer-flex-vector-gc
Step #3 - "compile-afl-address-x86_64": [ 94%] [32m[1mLinking CXX executable flex-vector[0m
Step #3 - "compile-afl-address-x86_64": [ 94%] Built target extra-fuzzer-flex-vector
Step #3 - "compile-afl-address-x86_64": [ 97%] [32m[1mLinking CXX executable flex-vector-st[0m
Step #3 - "compile-afl-address-x86_64": [100%] [32m[1mLinking CXX executable flex-vector-bo[0m
Step #3 - "compile-afl-address-x86_64": [100%] Built target extra-fuzzer-flex-vector-st
Step #3 - "compile-afl-address-x86_64": [100%] Built target extra-fuzzer-flex-vector-bo
Step #3 - "compile-afl-address-x86_64": [100%] Built target fuzzers
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/CMakeFiles ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/Makefile ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/Makefile ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/array ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/array ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/array /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/array-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/array-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/array-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/cmake_install.cmake ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/cmake_install.cmake ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-bo ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-bo ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-bo /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st-str ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st-str ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st-str /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st-str-conflict /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st-str ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st-str ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st-str /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st-str-conflict /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector-st /workspace/out/afl-address-x86_64
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": cad0867f0297: Already exists
Step #4 - "build-check-afl-address-x86_64": 5d07bc49990e: Already exists
Step #4 - "build-check-afl-address-x86_64": 44cb0126eb9f: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": a56ff748a9a8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": a2fb0ed9e009: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": f1c66ff839e8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6407c60781cb: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2aedbca4b0c5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5eb917c1be4c: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b14d900f9083: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 147a0260c0e7: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 45ecb17becc3: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4b12f89cab71: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 0264e9dc4f17: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 604b903d86bc: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 74ceb0df6853: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c464a0b74cc6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 32bac08d0f41: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 313c0e14775f: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 54b5966c5152: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": e4d1c52c51e5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6c2a7aea9205: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 96c0e9d3caa1: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": fe059bb13cd6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": bd1214b0ceb5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 604b903d86bc: Waiting
Step #4 - "build-check-afl-address-x86_64": fe059bb13cd6: Waiting
Step #4 - "build-check-afl-address-x86_64": 74ceb0df6853: Waiting
Step #4 - "build-check-afl-address-x86_64": bd1214b0ceb5: Waiting
Step #4 - "build-check-afl-address-x86_64": c464a0b74cc6: Waiting
Step #4 - "build-check-afl-address-x86_64": e4d1c52c51e5: Waiting
Step #4 - "build-check-afl-address-x86_64": 6c2a7aea9205: Waiting
Step #4 - "build-check-afl-address-x86_64": 32bac08d0f41: Waiting
Step #4 - "build-check-afl-address-x86_64": 313c0e14775f: Waiting
Step #4 - "build-check-afl-address-x86_64": 96c0e9d3caa1: Waiting
Step #4 - "build-check-afl-address-x86_64": f1c66ff839e8: Waiting
Step #4 - "build-check-afl-address-x86_64": 4b12f89cab71: Waiting
Step #4 - "build-check-afl-address-x86_64": 147a0260c0e7: Waiting
Step #4 - "build-check-afl-address-x86_64": 45ecb17becc3: Waiting
Step #4 - "build-check-afl-address-x86_64": b14d900f9083: Waiting
Step #4 - "build-check-afl-address-x86_64": 6407c60781cb: Waiting
Step #4 - "build-check-afl-address-x86_64": a2fb0ed9e009: Download complete
Step #4 - "build-check-afl-address-x86_64": 44cb0126eb9f: Download complete
Step #4 - "build-check-afl-address-x86_64": a56ff748a9a8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": a56ff748a9a8: Download complete
Step #4 - "build-check-afl-address-x86_64": f1c66ff839e8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": f1c66ff839e8: Download complete
Step #4 - "build-check-afl-address-x86_64": 44cb0126eb9f: Pull complete
Step #4 - "build-check-afl-address-x86_64": 6407c60781cb: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6407c60781cb: Download complete
Step #4 - "build-check-afl-address-x86_64": 5eb917c1be4c: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 5eb917c1be4c: Download complete
Step #4 - "build-check-afl-address-x86_64": a56ff748a9a8: Pull complete
Step #4 - "build-check-afl-address-x86_64": b14d900f9083: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": b14d900f9083: Download complete
Step #4 - "build-check-afl-address-x86_64": 147a0260c0e7: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 147a0260c0e7: Download complete
Step #4 - "build-check-afl-address-x86_64": a2fb0ed9e009: Pull complete
Step #4 - "build-check-afl-address-x86_64": 2aedbca4b0c5: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 2aedbca4b0c5: Download complete
Step #4 - "build-check-afl-address-x86_64": f1c66ff839e8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 4b12f89cab71: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 4b12f89cab71: Download complete
Step #4 - "build-check-afl-address-x86_64": 0264e9dc4f17: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 0264e9dc4f17: Download complete
Step #4 - "build-check-afl-address-x86_64": 6407c60781cb: Pull complete
Step #4 - "build-check-afl-address-x86_64": 604b903d86bc: Download complete
Step #4 - "build-check-afl-address-x86_64": c464a0b74cc6: Download complete
Step #4 - "build-check-afl-address-x86_64": 45ecb17becc3: Download complete
Step #4 - "build-check-afl-address-x86_64": 313c0e14775f: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 313c0e14775f: Download complete
Step #4 - "build-check-afl-address-x86_64": 74ceb0df6853: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 74ceb0df6853: Download complete
Step #4 - "build-check-afl-address-x86_64": 54b5966c5152: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 54b5966c5152: Download complete
Step #4 - "build-check-afl-address-x86_64": e4d1c52c51e5: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": e4d1c52c51e5: Download complete
Step #4 - "build-check-afl-address-x86_64": 6c2a7aea9205: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6c2a7aea9205: Download complete
Step #4 - "build-check-afl-address-x86_64": fe059bb13cd6: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": fe059bb13cd6: Download complete
Step #4 - "build-check-afl-address-x86_64": bd1214b0ceb5: Download complete
Step #4 - "build-check-afl-address-x86_64": 96c0e9d3caa1: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 96c0e9d3caa1: Download complete
Step #4 - "build-check-afl-address-x86_64": 32bac08d0f41: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 32bac08d0f41: Download complete
Step #4 - "build-check-afl-address-x86_64": 2aedbca4b0c5: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5eb917c1be4c: Pull complete
Step #4 - "build-check-afl-address-x86_64": b14d900f9083: Pull complete
Step #4 - "build-check-afl-address-x86_64": 147a0260c0e7: Pull complete
Step #4 - "build-check-afl-address-x86_64": 45ecb17becc3: Pull complete
Step #4 - "build-check-afl-address-x86_64": 4b12f89cab71: Pull complete
Step #4 - "build-check-afl-address-x86_64": 0264e9dc4f17: Pull complete
Step #4 - "build-check-afl-address-x86_64": 604b903d86bc: Pull complete
Step #4 - "build-check-afl-address-x86_64": 74ceb0df6853: Pull complete
Step #4 - "build-check-afl-address-x86_64": c464a0b74cc6: Pull complete
Step #4 - "build-check-afl-address-x86_64": 32bac08d0f41: Pull complete
Step #4 - "build-check-afl-address-x86_64": 313c0e14775f: Pull complete
Step #4 - "build-check-afl-address-x86_64": 54b5966c5152: Pull complete
Step #4 - "build-check-afl-address-x86_64": e4d1c52c51e5: Pull complete
Step #4 - "build-check-afl-address-x86_64": 6c2a7aea9205: Pull complete
Step #4 - "build-check-afl-address-x86_64": 96c0e9d3caa1: Pull complete
Step #4 - "build-check-afl-address-x86_64": fe059bb13cd6: Pull complete
Step #4 - "build-check-afl-address-x86_64": bd1214b0ceb5: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:1460e902b030400f5fbce4acc2bf327c3ba685fdf776441a215e2ee91092082e
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/flex-vector-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/set-st-str
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/map
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/array-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/set-st-str-conflict
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/map-st-str
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/vector-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/set-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/set
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/map-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/set-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/flex-vector
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/map-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/array
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/vector
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/flex-vector-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/flex-vector-bo
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/map-st-str-conflict
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/vector-gc
Step #4 - "build-check-afl-address-x86_64": Retrying failed fuzz targets sequentially 2
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/flex-vector-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpueozh_cz/vector-gc
Step #4 - "build-check-afl-address-x86_64": Broken fuzz targets 2
Step #4 - "build-check-afl-address-x86_64": ('/tmp/not-out/tmpueozh_cz/flex-vector-gc', CompletedProcess(args=['bad_build_check', '/tmp/not-out/tmpueozh_cz/flex-vector-gc'], returncode=1, stdout=b'BAD BUILD: fuzzing /tmp/not-out/tmpueozh_cz/flex-vector-gc with afl-fuzz failed.\nvm.mmap_rnd_bits = 28\nafl++ setup:\nAFL_SKIP_CPUFREQ=1\nAFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1\nAFL_TRY_AFFINITY=1\nAFL_IGNORE_UNKNOWN_ENVS=1\nAFL_FUZZER_ARGS=-m none -t 5000+\nAFL_CMPLOG_ONLY_NEW=1\nAFL_FAST_CAL=1\nAFL_NO_UI=1\nAFL_IGNORE_PROBLEMS=1\nAFL_FORKSRV_INIT_TMOUT=30000\nAFL_IGNORE_UNKNOWN_ENVS=1\nAFL_QUIET=1\nAFL_IGNORE_PROBLEMS=1\n/tmp/not-out/tmpueozh_cz/afl-fuzz -m none -t 5000+ -i /tmp/flex-vector-gc_corpus -o /tmp/flex-vector-gc_afl_address_out -- /tmp/not-out/tmpueozh_cz/flex-vector-gc\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_TRY_AFFINITY with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_CMPLOG_ONLY_NEW with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_FAST_CAL with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_NO_UI with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_IGNORE_PROBLEMS with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_FORKSRV_INIT_TMOUT with value 30000\x1b[0m\n\x1b[0;36mafl-fuzz++4.34a\x1b[0m based on afl by Michal Zalewski and a large online community\n\x1b[1;92m[+] \x1b[0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" Ei\xc3\x9ffeldt\x1b[0m\n\x1b[1;92m[+] \x1b[0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus\x1b[0m\n\x1b[1;92m[+] \x1b[0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable ASAN_OPTIONS with value alloc_dealloc_mismatch=0:allocator_may_return_null=1:allocator_release_to_os_interval_ms=500:check_malloc_usable_size=0:detect_container_overflow=1:detect_odr_violation=0:detect_leaks=1:detect_stack_use_after_return=1:fast_unwind_on_fatal=0:handle_abort=1:handle_segv=1:handle_sigill=1:max_uar_stack_size_log=16:print_scariness=1:quarantine_size_mb=10:strict_memcmp=1:strip_path_prefix=/workspace/:symbolize=1:use_sigaltstack=1:dedup_token_length=3:abort_on_error=1:symbolize=0:detect_odr_violation=0:\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable MSAN_OPTIONS with value print_stats=1:strip_path_prefix=/workspace/:symbolize=1:dedup_token_length=3:exit_code=86:symbolize=0\x1b[0m\n\x1b[1;92m[+] \x1b[0mNo -M/-S set, autoconfiguring for "-S default"\x1b[0m\n\x1b[1;94m[*] \x1b[0mGetting to work...\x1b[0m\n\x1b[1;92m[+] \x1b[0mUsing exploration-based constant power schedule (EXPLORE)\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled testcache with 50 MB\x1b[0m\n\x1b[1;92m[+] \x1b[0mGenerating fuzz data with a length of min=1 max=1048576\x1b[0m\n\x1b[1;94m[*] \x1b[0mChecking core_pattern...\x1b[0m\n\x1b[1;92m[+] \x1b[0mDisabling the UI because AFL_NO_UI is set.\x1b[0m\n\x1b[1;92m[+] \x1b[0mYou have 32 CPU cores and 19 runnable tasks (utilization: 59%).\x1b[0m\n\x1b[1;92m[+] \x1b[0mTry parallel jobs - see docs/fuzzing_in_depth.md#c-using-multiple-cores\x1b[0m\n\x1b[1;94m[*] \x1b[0mSetting up output directories...\x1b[0m\n\x1b[1;94m[*] \x1b[0mChecking CPU core loadout...\x1b[0m\n\x1b[1;92m[+] \x1b[0mFound a free CPU core, try binding to #9.\x1b[0m\n\x1b[1;94m[*] \x1b[0mValidating target binary...\x1b[0m\n\x1b[1;92m[+] \x1b[0m\x1b[1;95mPersistent mode binary detected.\x1b[0m\n\x1b[1;92m[+] \x1b[0m\x1b[1;95mDeferred forkserver binary detected.\x1b[0m\n\x1b[1;94m[*] \x1b[0mScanning \'/tmp/flex-vector-gc_corpus\'...\x1b[0m\n\x1b[1;94m[*] \x1b[0mCreating hard links for all input files...\x1b[0m\n\x1b[1;92m[+] \x1b[0mLoaded a total of 1 seeds.\x1b[0m\n\x1b[1;94m[*] \x1b[0mSpinning up the fork server...\x1b[0m\n\x1b[1;92m[+] \x1b[0mAll right - new fork server model v1 is up.\x1b[0m\n\x1b[1;94m[*] \x1b[0mTarget map size: 5182\x1b[0m\n\x1b[1;94m[*] \x1b[0mUsing SHARED MEMORY FUZZING feature.\x1b[0m\n\x1b[1;94m[*] \x1b[0mNo auto-generated dictionary tokens to reuse.\x1b[0m\n\x1b[1;94m[*] \x1b[0mAttempting dry run with \'id:000000,time:0,execs:0,orig:input\'...\x1b[0m\n\x1b[1;93m[!] \x1b[1;97mWARNING: \x1b[0mTest case results in a timeout (skipping)\x1b[0m\n\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mAll test cases time out or crash, giving up!\x1b[1;91m\n         Location : \x1b[0mperform_dry_run(), src/afl-fuzz-init.c:1413\n\n', stderr=b''))
Step #4 - "build-check-afl-address-x86_64": BAD BUILD: fuzzing /tmp/not-out/tmpueozh_cz/flex-vector-gc with afl-fuzz failed.
Step #4 - "build-check-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #4 - "build-check-afl-address-x86_64": afl++ setup:
Step #4 - "build-check-afl-address-x86_64": AFL_SKIP_CPUFREQ=1
Step #4 - "build-check-afl-address-x86_64": AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1
Step #4 - "build-check-afl-address-x86_64": AFL_TRY_AFFINITY=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #4 - "build-check-afl-address-x86_64": AFL_FUZZER_ARGS=-m none -t 5000+
Step #4 - "build-check-afl-address-x86_64": AFL_CMPLOG_ONLY_NEW=1
Step #4 - "build-check-afl-address-x86_64": AFL_FAST_CAL=1
Step #4 - "build-check-afl-address-x86_64": AFL_NO_UI=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #4 - "build-check-afl-address-x86_64": AFL_FORKSRV_INIT_TMOUT=30000
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #4 - "build-check-afl-address-x86_64": AFL_QUIET=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #4 - "build-check-afl-address-x86_64": /tmp/not-out/tmpueozh_cz/afl-fuzz -m none -t 5000+ -i /tmp/flex-vector-gc_corpus -o /tmp/flex-vector-gc_afl_address_out -- /tmp/not-out/tmpueozh_cz/flex-vector-gc
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_CMPLOG_ONLY_NEW with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_FAST_CAL with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_NO_UI with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_IGNORE_PROBLEMS with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_FORKSRV_INIT_TMOUT with value 30000[0m
Step #4 - "build-check-afl-address-x86_64": [0;36mafl-fuzz++4.34a[0m based on afl by Michal Zalewski and a large online community
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" Eißfeldt[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable ASAN_OPTIONS with value alloc_dealloc_mismatch=0:allocator_may_return_null=1:allocator_release_to_os_interval_ms=500:check_malloc_usable_size=0:detect_container_overflow=1:detect_odr_violation=0:detect_leaks=1:detect_stack_use_after_return=1:fast_unwind_on_fatal=0:handle_abort=1:handle_segv=1:handle_sigill=1:max_uar_stack_size_log=16:print_scariness=1:quarantine_size_mb=10:strict_memcmp=1:strip_path_prefix=/workspace/:symbolize=1:use_sigaltstack=1:dedup_token_length=3:abort_on_error=1:symbolize=0:detect_odr_violation=0:[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable MSAN_OPTIONS with value print_stats=1:strip_path_prefix=/workspace/:symbolize=1:dedup_token_length=3:exit_code=86:symbolize=0[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mGetting to work...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mUsing exploration-based constant power schedule (EXPLORE)[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled testcache with 50 MB[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mChecking core_pattern...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mDisabling the UI because AFL_NO_UI is set.[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mYou have 32 CPU cores and 1 runnable tasks (utilization: 3%).[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mTry parallel jobs - see docs/fuzzing_in_depth.md#c-using-multiple-cores[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mSetting up output directories...[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mChecking CPU core loadout...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mValidating target binary...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mScanning '/tmp/flex-vector-gc_corpus'...[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mCreating hard links for all input files...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mLoaded a total of 1 seeds.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mSpinning up the fork server...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAll right - new fork server model v1 is up.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mTarget map size: 5182[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mUsing SHARED MEMORY FUZZING feature.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:input'...[0m
Step #4 - "build-check-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mTest case results in a timeout (skipping)[0m
Step #4 - "build-check-afl-address-x86_64": [?25h[0m[1;91m
Step #4 - "build-check-afl-address-x86_64": [-] PROGRAM ABORT : [0mAll test cases time out or crash, giving up![1;91m
Step #4 - "build-check-afl-address-x86_64":          Location : [0mperform_dry_run(), src/afl-fuzz-init.c:1413
Step #4 - "build-check-afl-address-x86_64": 
Step #4 - "build-check-afl-address-x86_64": 
Step #4 - "build-check-afl-address-x86_64": ('/tmp/not-out/tmpueozh_cz/vector-gc', CompletedProcess(args=['bad_build_check', '/tmp/not-out/tmpueozh_cz/vector-gc'], returncode=1, stdout=b'BAD BUILD: fuzzing /tmp/not-out/tmpueozh_cz/vector-gc with afl-fuzz failed.\nvm.mmap_rnd_bits = 28\nafl++ setup:\nAFL_SKIP_CPUFREQ=1\nAFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1\nAFL_TRY_AFFINITY=1\nAFL_IGNORE_UNKNOWN_ENVS=1\nAFL_FUZZER_ARGS=-m none -t 5000+\nAFL_CMPLOG_ONLY_NEW=1\nAFL_FAST_CAL=1\nAFL_NO_UI=1\nAFL_IGNORE_PROBLEMS=1\nAFL_FORKSRV_INIT_TMOUT=30000\nAFL_IGNORE_UNKNOWN_ENVS=1\nAFL_QUIET=1\nAFL_IGNORE_PROBLEMS=1\n/tmp/not-out/tmpueozh_cz/afl-fuzz -m none -t 5000+ -i /tmp/vector-gc_corpus -o /tmp/vector-gc_afl_address_out -- /tmp/not-out/tmpueozh_cz/vector-gc\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_TRY_AFFINITY with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_CMPLOG_ONLY_NEW with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_FAST_CAL with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_NO_UI with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_IGNORE_PROBLEMS with value 1\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable AFL_FORKSRV_INIT_TMOUT with value 30000\x1b[0m\n\x1b[0;36mafl-fuzz++4.34a\x1b[0m based on afl by Michal Zalewski and a large online community\n\x1b[1;92m[+] \x1b[0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" Ei\xc3\x9ffeldt\x1b[0m\n\x1b[1;92m[+] \x1b[0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus\x1b[0m\n\x1b[1;92m[+] \x1b[0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable ASAN_OPTIONS with value alloc_dealloc_mismatch=0:allocator_may_return_null=1:allocator_release_to_os_interval_ms=500:check_malloc_usable_size=0:detect_container_overflow=1:detect_odr_violation=0:detect_leaks=1:detect_stack_use_after_return=1:fast_unwind_on_fatal=0:handle_abort=1:handle_segv=1:handle_sigill=1:max_uar_stack_size_log=16:print_scariness=1:quarantine_size_mb=10:strict_memcmp=1:strip_path_prefix=/workspace/:symbolize=1:use_sigaltstack=1:dedup_token_length=3:abort_on_error=1:symbolize=0:detect_odr_violation=0:\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled environment variable MSAN_OPTIONS with value print_stats=1:strip_path_prefix=/workspace/:symbolize=1:dedup_token_length=3:exit_code=86:symbolize=0\x1b[0m\n\x1b[1;92m[+] \x1b[0mNo -M/-S set, autoconfiguring for "-S default"\x1b[0m\n\x1b[1;94m[*] \x1b[0mGetting to work...\x1b[0m\n\x1b[1;92m[+] \x1b[0mUsing exploration-based constant power schedule (EXPLORE)\x1b[0m\n\x1b[1;92m[+] \x1b[0mEnabled testcache with 50 MB\x1b[0m\n\x1b[1;92m[+] \x1b[0mGenerating fuzz data with a length of min=1 max=1048576\x1b[0m\n\x1b[1;94m[*] \x1b[0mChecking core_pattern...\x1b[0m\n\x1b[1;92m[+] \x1b[0mDisabling the UI because AFL_NO_UI is set.\x1b[0m\n\x1b[1;92m[+] \x1b[0mYou have 32 CPU cores and 19 runnable tasks (utilization: 59%).\x1b[0m\n\x1b[1;92m[+] \x1b[0mTry parallel jobs - see docs/fuzzing_in_depth.md#c-using-multiple-cores\x1b[0m\n\x1b[1;94m[*] \x1b[0mSetting up output directories...\x1b[0m\n\x1b[1;94m[*] \x1b[0mChecking CPU core loadout...\x1b[0m\n\x1b[1;92m[+] \x1b[0mFound a free CPU core, try binding to #11.\x1b[0m\n\x1b[1;94m[*] \x1b[0mValidating target binary...\x1b[0m\n\x1b[1;92m[+] \x1b[0m\x1b[1;95mPersistent mode binary detected.\x1b[0m\n\x1b[1;92m[+] \x1b[0m\x1b[1;95mDeferred forkserver binary detected.\x1b[0m\n\x1b[1;94m[*] \x1b[0mScanning \'/tmp/vector-gc_corpus\'...\x1b[0m\n\x1b[1;94m[*] \x1b[0mCreating hard links for all input files...\x1b[0m\n\x1b[1;92m[+] \x1b[0mLoaded a total of 1 seeds.\x1b[0m\n\x1b[1;94m[*] \x1b[0mSpinning up the fork server...\x1b[0m\n\x1b[1;92m[+] \x1b[0mAll right - new fork server model v1 is up.\x1b[0m\n\x1b[1;94m[*] \x1b[0mTarget map size: 1435\x1b[0m\n\x1b[1;94m[*] \x1b[0mUsing SHARED MEMORY FUZZING feature.\x1b[0m\n\x1b[1;94m[*] \x1b[0mNo auto-generated dictionary tokens to reuse.\x1b[0m\n\x1b[1;94m[*] \x1b[0mAttempting dry run with \'id:000000,time:0,execs:0,orig:input\'...\x1b[0m\n\x1b[1;93m[!] \x1b[1;97mWARNING: \x1b[0mTest case results in a timeout (skipping)\x1b[0m\n\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mAll test cases time out or crash, giving up!\x1b[1;91m\n         Location : \x1b[0mperform_dry_run(), src/afl-fuzz-init.c:1413\n\n', stderr=b''))
Step #4 - "build-check-afl-address-x86_64": BAD BUILD: fuzzing /tmp/not-out/tmpueozh_cz/vector-gc with afl-fuzz failed.
Step #4 - "build-check-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #4 - "build-check-afl-address-x86_64": afl++ setup:
Step #4 - "build-check-afl-address-x86_64": AFL_SKIP_CPUFREQ=1
Step #4 - "build-check-afl-address-x86_64": AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1
Step #4 - "build-check-afl-address-x86_64": AFL_TRY_AFFINITY=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #4 - "build-check-afl-address-x86_64": AFL_FUZZER_ARGS=-m none -t 5000+
Step #4 - "build-check-afl-address-x86_64": AFL_CMPLOG_ONLY_NEW=1
Step #4 - "build-check-afl-address-x86_64": AFL_FAST_CAL=1
Step #4 - "build-check-afl-address-x86_64": AFL_NO_UI=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #4 - "build-check-afl-address-x86_64": AFL_FORKSRV_INIT_TMOUT=30000
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #4 - "build-check-afl-address-x86_64": AFL_QUIET=1
Step #4 - "build-check-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #4 - "build-check-afl-address-x86_64": /tmp/not-out/tmpueozh_cz/afl-fuzz -m none -t 5000+ -i /tmp/vector-gc_corpus -o /tmp/vector-gc_afl_address_out -- /tmp/not-out/tmpueozh_cz/vector-gc
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_SKIP_CPUFREQ with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_TRY_AFFINITY with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_CMPLOG_ONLY_NEW with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_FAST_CAL with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_NO_UI with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_IGNORE_PROBLEMS with value 1[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable AFL_FORKSRV_INIT_TMOUT with value 30000[0m
Step #4 - "build-check-afl-address-x86_64": [0;36mafl-fuzz++4.34a[0m based on afl by Michal Zalewski and a large online community
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAFL++ is maintained by Marc "van Hauser" Heuse, Dominik Maier, Andrea Fioraldi and Heiko "hexcoder" Eißfeldt[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAFL++ is open source, get it at https://github.com/AFLplusplus/AFLplusplus[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mNOTE: AFL++ >= v3 has changed defaults and behaviours - see README.md[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable ASAN_OPTIONS with value alloc_dealloc_mismatch=0:allocator_may_return_null=1:allocator_release_to_os_interval_ms=500:check_malloc_usable_size=0:detect_container_overflow=1:detect_odr_violation=0:detect_leaks=1:detect_stack_use_after_return=1:fast_unwind_on_fatal=0:handle_abort=1:handle_segv=1:handle_sigill=1:max_uar_stack_size_log=16:print_scariness=1:quarantine_size_mb=10:strict_memcmp=1:strip_path_prefix=/workspace/:symbolize=1:use_sigaltstack=1:dedup_token_length=3:abort_on_error=1:symbolize=0:detect_odr_violation=0:[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled environment variable MSAN_OPTIONS with value print_stats=1:strip_path_prefix=/workspace/:symbolize=1:dedup_token_length=3:exit_code=86:symbolize=0[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mNo -M/-S set, autoconfiguring for "-S default"[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mGetting to work...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mUsing exploration-based constant power schedule (EXPLORE)[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mEnabled testcache with 50 MB[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mGenerating fuzz data with a length of min=1 max=1048576[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mChecking core_pattern...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mDisabling the UI because AFL_NO_UI is set.[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mYou have 32 CPU cores and 1 runnable tasks (utilization: 3%).[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mTry parallel jobs - see docs/fuzzing_in_depth.md#c-using-multiple-cores[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mSetting up output directories...[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mChecking CPU core loadout...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mFound a free CPU core, try binding to #0.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mValidating target binary...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0m[1;95mPersistent mode binary detected.[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0m[1;95mDeferred forkserver binary detected.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mScanning '/tmp/vector-gc_corpus'...[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mCreating hard links for all input files...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mLoaded a total of 1 seeds.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mSpinning up the fork server...[0m
Step #4 - "build-check-afl-address-x86_64": [1;92m[+] [0mAll right - new fork server model v1 is up.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mTarget map size: 1435[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mUsing SHARED MEMORY FUZZING feature.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mNo auto-generated dictionary tokens to reuse.[0m
Step #4 - "build-check-afl-address-x86_64": [1;94m[*] [0mAttempting dry run with 'id:000000,time:0,execs:0,orig:input'...[0m
Step #4 - "build-check-afl-address-x86_64": [1;93m[!] [1;97mWARNING: [0mTest case results in a timeout (skipping)[0m
Step #4 - "build-check-afl-address-x86_64": [?25h[0m[1;91m
Step #4 - "build-check-afl-address-x86_64": [-] PROGRAM ABORT : [0mAll test cases time out or crash, giving up![1;91m
Step #4 - "build-check-afl-address-x86_64":          Location : [0mperform_dry_run(), src/afl-fuzz-init.c:1413
Step #4 - "build-check-afl-address-x86_64": 
Step #4 - "build-check-afl-address-x86_64": 
Step #4 - "build-check-afl-address-x86_64": ERROR: 10.526315789473685% of fuzz targets seem to be broken. See the list above for a detailed information.
Step #4 - "build-check-afl-address-x86_64": ********************************************************************************
Step #4 - "build-check-afl-address-x86_64": Build checks failed.
Step #4 - "build-check-afl-address-x86_64": To reproduce, run:
Step #4 - "build-check-afl-address-x86_64": python infra/helper.py build_image immer
Step #4 - "build-check-afl-address-x86_64": python infra/helper.py build_fuzzers --sanitizer address --engine afl --architecture x86_64 immer
Step #4 - "build-check-afl-address-x86_64": python infra/helper.py check_build --sanitizer address --engine afl --architecture x86_64 immer
Step #4 - "build-check-afl-address-x86_64": ********************************************************************************
Finished Step #4 - "build-check-afl-address-x86_64"
ERROR
ERROR: build step 4 "gcr.io/cloud-builders/docker" failed: step exited with non-zero status: 1
