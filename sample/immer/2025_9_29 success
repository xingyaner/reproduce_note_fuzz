starting build "7aa30eb8-655b-4419-aec9-44d45fa4a154"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: 
Step #0:                    ***** NOTICE *****
Step #0: 
Step #0: Official `cloud-sdk` images, including multiple tagged versions across multiple
Step #0: platforms, can be found at
Step #0: https://github.com/GoogleCloudPlatform/cloud-sdk-docker and may be more suitable
Step #0: for some use cases when interacting with Cloud Source Repositories.
Step #0: 
Step #0: For additional information, please visit
Step #0: https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/git
Step #0: 
Step #0:                 ***** END OF NOTICE *****
Step #0: 
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4"
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Sending build context to Docker daemon   5.12kB
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Step 1/5 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b549f31133a9: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67aa407b1a8c: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": d351b4b2940f: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52a08371a3f8: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0325ebca9737: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 5988cc86f7c8: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ce179c935288: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": cccb5ac6f61f: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52d620eaafad: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 32bb981df6a6: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 06ab62e4bbdd: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 83cdf3b0ee92: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 94fa9b523563: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9ab920cc5d7e: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1db5cc9189a5: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": eeb38df479f7: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9756a2f3962c: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 6ba3218257fe: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0325ebca9737: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": add5986935db: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67c5543204c4: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 26504c037741: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 43b3f6bda961: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 5988cc86f7c8: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": c84188baaeaa: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 679ba024a2f9: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52a08371a3f8: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": fe74c63c8327: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ae3498d71155: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 071ff7e9b857: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e398be188a01: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 32bb981df6a6: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3a4e58897774: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b6620327e092: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 06ab62e4bbdd: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 222f2a62071f: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 503bbe7e3b95: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 83cdf3b0ee92: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 84ee12d8af79: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 6ba3218257fe: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 94fa9b523563: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 90e2910b4f10: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52d620eaafad: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3bba9a303dad: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1e8c1e5ee00a: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9756a2f3962c: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": add5986935db: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e9c6ae2c863a: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ff2ba0dbb1da: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ca8f9d1dd8fe: Pulling fs layer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 43b3f6bda961: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67c5543204c4: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9ab920cc5d7e: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": c84188baaeaa: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 26504c037741: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 679ba024a2f9: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": eeb38df479f7: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1e8c1e5ee00a: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1db5cc9189a5: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3a4e58897774: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e9c6ae2c863a: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3bba9a303dad: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 503bbe7e3b95: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 90e2910b4f10: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ff2ba0dbb1da: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": fe74c63c8327: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 222f2a62071f: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e398be188a01: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ca8f9d1dd8fe: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 071ff7e9b857: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b6620327e092: Waiting
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": d351b4b2940f: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": d351b4b2940f: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b549f31133a9: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b549f31133a9: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0325ebca9737: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0325ebca9737: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52a08371a3f8: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52a08371a3f8: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ce179c935288: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ce179c935288: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": cccb5ac6f61f: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": cccb5ac6f61f: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67aa407b1a8c: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67aa407b1a8c: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b549f31133a9: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 32bb981df6a6: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 32bb981df6a6: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 06ab62e4bbdd: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 06ab62e4bbdd: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 83cdf3b0ee92: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 83cdf3b0ee92: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 94fa9b523563: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 94fa9b523563: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9ab920cc5d7e: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1db5cc9189a5: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1db5cc9189a5: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52d620eaafad: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52d620eaafad: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": eeb38df479f7: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9756a2f3962c: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9756a2f3962c: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 6ba3218257fe: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 6ba3218257fe: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": add5986935db: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": add5986935db: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67c5543204c4: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67c5543204c4: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 26504c037741: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 26504c037741: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 43b3f6bda961: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 43b3f6bda961: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": c84188baaeaa: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": c84188baaeaa: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 679ba024a2f9: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 679ba024a2f9: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": fe74c63c8327: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": fe74c63c8327: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ae3498d71155: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 071ff7e9b857: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e398be188a01: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e398be188a01: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3a4e58897774: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3a4e58897774: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 222f2a62071f: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 222f2a62071f: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b6620327e092: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b6620327e092: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 503bbe7e3b95: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 84ee12d8af79: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 90e2910b4f10: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1e8c1e5ee00a: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1e8c1e5ee00a: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e9c6ae2c863a: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e9c6ae2c863a: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67aa407b1a8c: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 5988cc86f7c8: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 5988cc86f7c8: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": d351b4b2940f: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ff2ba0dbb1da: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ff2ba0dbb1da: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ca8f9d1dd8fe: Verifying Checksum
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ca8f9d1dd8fe: Download complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52a08371a3f8: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0325ebca9737: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 5988cc86f7c8: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ce179c935288: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": cccb5ac6f61f: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 52d620eaafad: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 32bb981df6a6: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 06ab62e4bbdd: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 83cdf3b0ee92: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 94fa9b523563: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9ab920cc5d7e: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1db5cc9189a5: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": eeb38df479f7: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 9756a2f3962c: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 6ba3218257fe: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": add5986935db: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 67c5543204c4: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 26504c037741: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 43b3f6bda961: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": c84188baaeaa: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 679ba024a2f9: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": fe74c63c8327: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ae3498d71155: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 071ff7e9b857: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e398be188a01: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3a4e58897774: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": b6620327e092: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 222f2a62071f: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 503bbe7e3b95: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 84ee12d8af79: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 90e2910b4f10: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 3bba9a303dad: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 1e8c1e5ee00a: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": e9c6ae2c863a: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ff2ba0dbb1da: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": ca8f9d1dd8fe: Pull complete
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Digest: sha256:afe20f9028006920dd8fea1366f514d917e8c483c3b7f04d923b0cdd5c93af26
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> 367b8a7956c9
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Step 2/5 : RUN apt-get update && apt-get install -y cmake libgc-dev pkg-config
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> Running in 5c48eb442594
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [128 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [128 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [128 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Fetched 383 kB in 1s (387 kB/s)
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Reading package lists...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Reading package lists...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Building dependency tree...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Reading state information...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": The following packages were automatically installed and are no longer required:
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   autotools-dev libsigsegv2 m4
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Use 'apt autoremove' to remove them.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": The following additional packages will be installed:
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   cmake-data libarchive13 libgc1c2 libglib2.0-0 libglib2.0-data libicu66
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   libjsoncpp1 librhash0 libuv1 libxml2 shared-mime-info xdg-user-dirs
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Suggested packages:
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   cmake-doc ninja-build lrzip
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": The following NEW packages will be installed:
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   cmake cmake-data libarchive13 libgc-dev libgc1c2 libglib2.0-0
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   libglib2.0-data libicu66 libjsoncpp1 librhash0 libuv1 libxml2 pkg-config
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":   shared-mime-info xdg-user-dirs
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": 0 upgraded, 15 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Need to get 17.2 MB of archives.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": After this operation, 74.1 MB of additional disk space will be used.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-0 amd64 2.64.6-1~ubuntu20.04.9 [1290 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-data all 2.64.6-1~ubuntu20.04.9 [5836 B]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libicu66 amd64 66.1-2ubuntu2.1 [8515 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libxml2 amd64 2.9.10+dfsg-5ubuntu0.20.04.10 [640 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 shared-mime-info amd64 1.15-1 [430 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 xdg-user-dirs amd64 0.17-2ubuntu1 [48.3 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libuv1 amd64 1.34.2-1ubuntu1.5 [80.9 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:8 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake-data all 3.16.3-1ubuntu1.20.04.1 [1613 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.5 [327 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2 [75.6 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1 [113 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake amd64 3.16.3-1ubuntu1.20.04.1 [3668 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 libgc1c2 amd64 1:7.6.4-0.4ubuntu1 [83.9 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:14 http://archive.ubuntu.com/ubuntu focal/main amd64 libgc-dev amd64 1:7.6.4-0.4ubuntu1 [234 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": [91mdebconf: delaying package configuration, since apt-utils is not installed
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": [0mFetched 17.2 MB in 2s (9449 kB/s)
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libglib2.0-0:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17483 files and directories currently installed.)
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../00-libglib2.0-0_2.64.6-1~ubuntu20.04.9_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libglib2.0-data.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../01-libglib2.0-data_2.64.6-1~ubuntu20.04.9_all.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libicu66:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../02-libicu66_66.1-2ubuntu2.1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libxml2:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../03-libxml2_2.9.10+dfsg-5ubuntu0.20.04.10_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package shared-mime-info.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../04-shared-mime-info_1.15-1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking shared-mime-info (1.15-1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package xdg-user-dirs.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../05-xdg-user-dirs_0.17-2ubuntu1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libuv1:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../06-libuv1_1.34.2-1ubuntu1.5_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package cmake-data.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../07-cmake-data_3.16.3-1ubuntu1.20.04.1_all.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libarchive13:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../08-libarchive13_3.4.0-2ubuntu1.5_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libjsoncpp1:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../09-libjsoncpp1_1.7.4-3.1ubuntu2_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package librhash0:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../10-librhash0_1.3.9-1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package cmake.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../11-cmake_3.16.3-1ubuntu1.20.04.1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libgc1c2:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../12-libgc1c2_1%3a7.6.4-0.4ubuntu1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libgc1c2:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package libgc-dev:amd64.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../13-libgc-dev_1%3a7.6.4-0.4ubuntu1_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking libgc-dev:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Selecting previously unselected package pkg-config.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Preparing to unpack .../14-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Unpacking pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libgc1c2:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": No schema files found: doing nothing.
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libuv1:amd64 (1.34.2-1ubuntu1.5) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up librhash0:amd64 (1.3.9-1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up cmake-data (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libgc-dev:amd64 (1:7.6.4-0.4ubuntu1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libjsoncpp1:amd64 (1.7.4-3.1ubuntu2) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up libarchive13:amd64 (3.4.0-2ubuntu1.5) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up shared-mime-info (1.15-1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Setting up cmake (3.16.3-1ubuntu1.20.04.1) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Processing triggers for libc-bin (2.31-0ubuntu9.18) ...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Removing intermediate container 5c48eb442594
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> d8b30044deb9
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Step 3/5 : RUN git clone --depth 1 https://github.com/arximboldi/immer.git immer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> Running in c247d6ba0a59
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": [91mCloning into 'immer'...
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": [0mRemoving intermediate container c247d6ba0a59
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> 70ace7a85fa1
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Step 4/5 : WORKDIR immer
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> Running in 82539b2e008c
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Removing intermediate container 82539b2e008c
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> a9a0d5bd11ac
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Step 5/5 : COPY build.sh $SRC/
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4":  ---> acc30353fb11
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Successfully built acc30353fb11
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Successfully tagged gcr.io/oss-fuzz/immer:latest
Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/immer:latest
Finished Step #1 - "build-45101e29-2e0f-4b7d-bcf0-41b36a8bc6b4"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/immer
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/fileuJDUXO
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/immer/.git
Step #2 - "srcmap": + GIT_DIR=/src/immer
Step #2 - "srcmap": + cd /src/immer
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/arximboldi/immer.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=df6ef46d97e1fe81f397015b9aeb32505cef653b
Step #2 - "srcmap": + jq_inplace /tmp/fileuJDUXO '."/src/immer" = { type: "git", url: "https://github.com/arximboldi/immer.git", rev: "df6ef46d97e1fe81f397015b9aeb32505cef653b" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/fileSBBcta
Step #2 - "srcmap": + cat /tmp/fileuJDUXO
Step #2 - "srcmap": + jq '."/src/immer" = { type: "git", url: "https://github.com/arximboldi/immer.git", rev: "df6ef46d97e1fe81f397015b9aeb32505cef653b" }'
Step #2 - "srcmap": + mv /tmp/fileSBBcta /tmp/fileuJDUXO
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/fileuJDUXO
Step #2 - "srcmap": + rm /tmp/fileuJDUXO
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/immer": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/arximboldi/immer.git",
Step #2 - "srcmap":     "rev": "df6ef46d97e1fe81f397015b9aeb32505cef653b"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + mkdir build
Step #3 - "compile-afl-address-x86_64": + cd build
Step #3 - "compile-afl-address-x86_64": + cmake .. -DBOEHM_GC_INCLUDE_DIR=/usr/include -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a -Dimmer_BUILD_TESTS=OFF
Step #3 - "compile-afl-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working C compiler: /src/aflplusplus/afl-clang-fast - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-afl-address-x86_64": -- Check for working CXX compiler: /src/aflplusplus/afl-clang-fast++ - skipped
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-afl-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #3 - "compile-afl-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #3 - "compile-afl-address-x86_64": -- Found Threads: TRUE
Step #3 - "compile-afl-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #3 - "compile-afl-address-x86_64": -- Found GC library: /usr/lib/x86_64-linux-gnu/libgc.a
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at /usr/local/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
Step #3 - "compile-afl-address-x86_64":   The package name passed to `find_package_handle_standard_args` (Boehm_GC)
Step #3 - "compile-afl-address-x86_64":   does not match the name of the calling package (BoehmGC).  This can lead to
Step #3 - "compile-afl-address-x86_64":   problems in calling code that expects `find_package` result variables
Step #3 - "compile-afl-address-x86_64":   (e.g., `_FOUND`) to follow a certain pattern.
Step #3 - "compile-afl-address-x86_64": Call Stack (most recent call first):
Step #3 - "compile-afl-address-x86_64":   cmake/FindBoehmGC.cmake:108 (find_package_handle_standard_args)
Step #3 - "compile-afl-address-x86_64":   CMakeLists.txt:86 (find_package)
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found Boehm_GC: /usr/lib/x86_64-linux-gnu/libgc.a
Step #3 - "compile-afl-address-x86_64": -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.56")
Step #3 - "compile-afl-address-x86_64": -- Using ccache: /usr/local/bin/ccache
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:22 (find_package):
Step #3 - "compile-afl-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #3 - "compile-afl-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #3 - "compile-afl-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found PythonInterp: /usr/local/bin/python (found version "3.11.13")
Step #3 - "compile-afl-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:23 (find_package):
Step #3 - "compile-afl-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #3 - "compile-afl-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #3 - "compile-afl-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #3 - "compile-afl-address-x86_64": [0m
Step #3 - "compile-afl-address-x86_64": -- Found PythonLibs: /usr/local/lib/libpython3.11.so (found version "3.11.13")
Step #3 - "compile-afl-address-x86_64": -- Checking for module 'guile-2.2'
Step #3 - "compile-afl-address-x86_64": --   No package 'guile-2.2' found
Step #3 - "compile-afl-address-x86_64": -- Disabling Guile modules
Step #3 - "compile-afl-address-x86_64": -- Configuring done (1.8s)
Step #3 - "compile-afl-address-x86_64": -- Generating done (0.1s)
Step #3 - "compile-afl-address-x86_64": -- Build files have been written to: /src/immer/build
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32 fuzzers
Step #3 - "compile-afl-address-x86_64": [  2%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector.dir/vector.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  5%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array-gc.dir/array-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [  7%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array.dir/array.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-bo.dir/flex-vector-bo.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-gc.dir/flex-vector-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector.dir/flex-vector.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-st.dir/flex-vector-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-gc.dir/map-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str-conflict.dir/map-st-str-conflict.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 26%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str.dir/map-st-str.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st.dir/map-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map.dir/map.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 34%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str-conflict.dir/set-st-str-conflict.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 36%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-gc.dir/set-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 42%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st.dir/set-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 42%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str.dir/set-st-str.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 44%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set.dir/set.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-gc.dir/vector-gc.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 50%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-st.dir/vector-st.cpp.o[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] [32m[1mLinking CXX executable array-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 52%] Built target extra-fuzzer-array-gc
Step #3 - "compile-afl-address-x86_64": [ 55%] [32m[1mLinking CXX executable array[0m
Step #3 - "compile-afl-address-x86_64": [ 55%] Built target extra-fuzzer-array
Step #3 - "compile-afl-address-x86_64": [ 57%] [32m[1mLinking CXX executable set-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 57%] Built target extra-fuzzer-set-gc
Step #3 - "compile-afl-address-x86_64": [ 60%] [32m[1mLinking CXX executable map-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] [32m[1mLinking CXX executable set[0m
Step #3 - "compile-afl-address-x86_64": [ 63%] Built target extra-fuzzer-map-gc
Step #3 - "compile-afl-address-x86_64": [ 65%] [32m[1mLinking CXX executable set-st[0m
Step #3 - "compile-afl-address-x86_64": [ 65%] Built target extra-fuzzer-set
Step #3 - "compile-afl-address-x86_64": [ 65%] Built target extra-fuzzer-set-st
Step #3 - "compile-afl-address-x86_64": [ 68%] [32m[1mLinking CXX executable map-st[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] [32m[1mLinking CXX executable vector-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 71%] Built target extra-fuzzer-map-st
Step #3 - "compile-afl-address-x86_64": [ 73%] [32m[1mLinking CXX executable set-st-str-conflict[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] [32m[1mLinking CXX executable set-st-str[0m
Step #3 - "compile-afl-address-x86_64": [ 76%] Built target extra-fuzzer-vector-gc
Step #3 - "compile-afl-address-x86_64": [ 78%] [32m[1mLinking CXX executable vector[0m
Step #3 - "compile-afl-address-x86_64": [ 78%] Built target extra-fuzzer-set-st-str-conflict
Step #3 - "compile-afl-address-x86_64": [ 78%] Built target extra-fuzzer-set-st-str
Step #3 - "compile-afl-address-x86_64": [ 78%] Built target extra-fuzzer-vector
Step #3 - "compile-afl-address-x86_64": [ 81%] [32m[1mLinking CXX executable map[0m
Step #3 - "compile-afl-address-x86_64": [ 81%] Built target extra-fuzzer-map
Step #3 - "compile-afl-address-x86_64": [ 84%] [32m[1mLinking CXX executable vector-st[0m
Step #3 - "compile-afl-address-x86_64": [ 86%] [32m[1mLinking CXX executable map-st-str-conflict[0m
Step #3 - "compile-afl-address-x86_64": [ 86%] Built target extra-fuzzer-vector-st
Step #3 - "compile-afl-address-x86_64": [ 86%] Built target extra-fuzzer-map-st-str-conflict
Step #3 - "compile-afl-address-x86_64": [ 89%] [32m[1mLinking CXX executable map-st-str[0m
Step #3 - "compile-afl-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str
Step #3 - "compile-afl-address-x86_64": [ 92%] [32m[1mLinking CXX executable flex-vector-gc[0m
Step #3 - "compile-afl-address-x86_64": [ 92%] Built target extra-fuzzer-flex-vector-gc
Step #3 - "compile-afl-address-x86_64": [ 94%] [32m[1mLinking CXX executable flex-vector-st[0m
Step #3 - "compile-afl-address-x86_64": [ 97%] [32m[1mLinking CXX executable flex-vector-bo[0m
Step #3 - "compile-afl-address-x86_64": [ 97%] Built target extra-fuzzer-flex-vector-st
Step #3 - "compile-afl-address-x86_64": [ 97%] Built target extra-fuzzer-flex-vector-bo
Step #3 - "compile-afl-address-x86_64": [100%] [32m[1mLinking CXX executable flex-vector[0m
Step #3 - "compile-afl-address-x86_64": [100%] Built target extra-fuzzer-flex-vector
Step #3 - "compile-afl-address-x86_64": [100%] Built target fuzzers
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/CMakeFiles ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/Makefile ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/Makefile ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/array ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/array ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/array /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/array-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/array-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/array-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/cmake_install.cmake ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/cmake_install.cmake ]]
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-bo ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-bo ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-bo /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/flex-vector-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/flex-vector-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/flex-vector-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st-str ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st-str ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st-str /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/map-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/map-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/map-st-str-conflict /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st-str ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st-str ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st-str /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/set-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/set-st-str-conflict ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/set-st-str-conflict /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector-gc ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector-gc /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #3 - "compile-afl-address-x86_64": + [[ -f extra/fuzzer/vector-st ]]
Step #3 - "compile-afl-address-x86_64": + [[ -x extra/fuzzer/vector-st ]]
Step #3 - "compile-afl-address-x86_64": + cp extra/fuzzer/vector-st /workspace/out/afl-address-x86_64
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": 67aa407b1a8c: Already exists
Step #4 - "build-check-afl-address-x86_64": d351b4b2940f: Already exists
Step #4 - "build-check-afl-address-x86_64": fbc699b5b833: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": d13873667729: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4b3315e24cd9: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": e85447efad89: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2d29720e4e24: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4aaed5ff533d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 3d770f0ffae8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5b320055baf8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 99b2a907790a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5c79c83a2941: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 8914791ccb9b: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 49c3e6d4d94e: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4ebbc2aa061d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 64343062147e: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 54155f16869a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 57155b454939: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 328799256c6d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 069dc465e8e2: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 00c05909b51d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6bea81ed59e0: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 9c443cc5283e: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 176070b41e26: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2d6bdde9965d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4aaed5ff533d: Waiting
Step #4 - "build-check-afl-address-x86_64": 3d770f0ffae8: Waiting
Step #4 - "build-check-afl-address-x86_64": 5b320055baf8: Waiting
Step #4 - "build-check-afl-address-x86_64": 57155b454939: Waiting
Step #4 - "build-check-afl-address-x86_64": 99b2a907790a: Waiting
Step #4 - "build-check-afl-address-x86_64": 328799256c6d: Waiting
Step #4 - "build-check-afl-address-x86_64": 5c79c83a2941: Waiting
Step #4 - "build-check-afl-address-x86_64": 8914791ccb9b: Waiting
Step #4 - "build-check-afl-address-x86_64": 069dc465e8e2: Waiting
Step #4 - "build-check-afl-address-x86_64": 49c3e6d4d94e: Waiting
Step #4 - "build-check-afl-address-x86_64": 00c05909b51d: Waiting
Step #4 - "build-check-afl-address-x86_64": e85447efad89: Waiting
Step #4 - "build-check-afl-address-x86_64": 2d29720e4e24: Waiting
Step #4 - "build-check-afl-address-x86_64": 6bea81ed59e0: Waiting
Step #4 - "build-check-afl-address-x86_64": 9c443cc5283e: Waiting
Step #4 - "build-check-afl-address-x86_64": 176070b41e26: Waiting
Step #4 - "build-check-afl-address-x86_64": 4ebbc2aa061d: Waiting
Step #4 - "build-check-afl-address-x86_64": 64343062147e: Waiting
Step #4 - "build-check-afl-address-x86_64": 2d6bdde9965d: Waiting
Step #4 - "build-check-afl-address-x86_64": 54155f16869a: Waiting
Step #4 - "build-check-afl-address-x86_64": 4b3315e24cd9: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 4b3315e24cd9: Download complete
Step #4 - "build-check-afl-address-x86_64": fbc699b5b833: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": fbc699b5b833: Download complete
Step #4 - "build-check-afl-address-x86_64": d13873667729: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": d13873667729: Download complete
Step #4 - "build-check-afl-address-x86_64": 2d29720e4e24: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 2d29720e4e24: Download complete
Step #4 - "build-check-afl-address-x86_64": fbc699b5b833: Pull complete
Step #4 - "build-check-afl-address-x86_64": e85447efad89: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": e85447efad89: Download complete
Step #4 - "build-check-afl-address-x86_64": 3d770f0ffae8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 3d770f0ffae8: Download complete
Step #4 - "build-check-afl-address-x86_64": 5b320055baf8: Download complete
Step #4 - "build-check-afl-address-x86_64": 99b2a907790a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 99b2a907790a: Download complete
Step #4 - "build-check-afl-address-x86_64": d13873667729: Pull complete
Step #4 - "build-check-afl-address-x86_64": 4b3315e24cd9: Pull complete
Step #4 - "build-check-afl-address-x86_64": 8914791ccb9b: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 8914791ccb9b: Download complete
Step #4 - "build-check-afl-address-x86_64": 49c3e6d4d94e: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 49c3e6d4d94e: Download complete
Step #4 - "build-check-afl-address-x86_64": 4aaed5ff533d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 4aaed5ff533d: Download complete
Step #4 - "build-check-afl-address-x86_64": 4ebbc2aa061d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 4ebbc2aa061d: Download complete
Step #4 - "build-check-afl-address-x86_64": e85447efad89: Pull complete
Step #4 - "build-check-afl-address-x86_64": 54155f16869a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 54155f16869a: Download complete
Step #4 - "build-check-afl-address-x86_64": 5c79c83a2941: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 5c79c83a2941: Download complete
Step #4 - "build-check-afl-address-x86_64": 2d29720e4e24: Pull complete
Step #4 - "build-check-afl-address-x86_64": 328799256c6d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 328799256c6d: Download complete
Step #4 - "build-check-afl-address-x86_64": 069dc465e8e2: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 069dc465e8e2: Download complete
Step #4 - "build-check-afl-address-x86_64": 64343062147e: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 64343062147e: Download complete
Step #4 - "build-check-afl-address-x86_64": 00c05909b51d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 00c05909b51d: Download complete
Step #4 - "build-check-afl-address-x86_64": 6bea81ed59e0: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6bea81ed59e0: Download complete
Step #4 - "build-check-afl-address-x86_64": 176070b41e26: Download complete
Step #4 - "build-check-afl-address-x86_64": 9c443cc5283e: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 9c443cc5283e: Download complete
Step #4 - "build-check-afl-address-x86_64": 2d6bdde9965d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 2d6bdde9965d: Download complete
Step #4 - "build-check-afl-address-x86_64": 57155b454939: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 57155b454939: Download complete
Step #4 - "build-check-afl-address-x86_64": 4aaed5ff533d: Pull complete
Step #4 - "build-check-afl-address-x86_64": 3d770f0ffae8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5b320055baf8: Pull complete
Step #4 - "build-check-afl-address-x86_64": 99b2a907790a: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5c79c83a2941: Pull complete
Step #4 - "build-check-afl-address-x86_64": 8914791ccb9b: Pull complete
Step #4 - "build-check-afl-address-x86_64": 49c3e6d4d94e: Pull complete
Step #4 - "build-check-afl-address-x86_64": 4ebbc2aa061d: Pull complete
Step #4 - "build-check-afl-address-x86_64": 64343062147e: Pull complete
Step #4 - "build-check-afl-address-x86_64": 54155f16869a: Pull complete
Step #4 - "build-check-afl-address-x86_64": 57155b454939: Pull complete
Step #4 - "build-check-afl-address-x86_64": 328799256c6d: Pull complete
Step #4 - "build-check-afl-address-x86_64": 069dc465e8e2: Pull complete
Step #4 - "build-check-afl-address-x86_64": 00c05909b51d: Pull complete
Step #4 - "build-check-afl-address-x86_64": 6bea81ed59e0: Pull complete
Step #4 - "build-check-afl-address-x86_64": 9c443cc5283e: Pull complete
Step #4 - "build-check-afl-address-x86_64": 176070b41e26: Pull complete
Step #4 - "build-check-afl-address-x86_64": 2d6bdde9965d: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:ea80dac3417387fd57e649b358cae09b8cfc45464348019c692b5f96cc688fa0
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/flex-vector-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/set-st-str
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/map
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/array-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/set-st-str-conflict
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/map-st-str
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/vector-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/set-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/set
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/map-st
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/set-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/flex-vector
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/map-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/array
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/flex-vector-gc
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/vector
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/flex-vector-bo
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/map-st-str-conflict
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpiqz94suy/vector-gc
Finished Step #4 - "build-check-afl-address-x86_64"
Starting Step #5
Step #5: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #5
Starting Step #6
Step #6: Already have image: gcr.io/oss-fuzz/immer
Step #6:   adding: SanitizerCoverageLTO.so (deflated 69%)
Step #6:   adding: SanitizerCoveragePCGUARD.so (deflated 70%)
Step #6:   adding: afl-addseeds (deflated 57%)
Step #6:   adding: afl-analyze (deflated 55%)
Step #6:   adding: afl-c++ (deflated 57%)
Step #6:   adding: afl-c++.8 (deflated 55%)
Step #6:   adding: afl-cc (deflated 57%)
Step #6:   adding: afl-cc.8 (deflated 55%)
Step #6:   adding: afl-clang (deflated 57%)
Step #6:   adding: afl-clang++ (deflated 57%)
Step #6:   adding: afl-clang-fast (deflated 57%)
Step #6:   adding: afl-clang-fast++ (deflated 57%)
Step #6:   adding: afl-clang-fast++.8 (deflated 55%)
Step #6:   adding: afl-clang-fast.8 (deflated 55%)
Step #6:   adding: afl-clang-lto (deflated 57%)
Step #6:   adding: afl-clang-lto++ (deflated 57%)
Step #6:   adding: afl-clang-lto++.8 (deflated 55%)
Step #6:   adding: afl-clang-lto.8 (deflated 55%)
Step #6:   adding: afl-cmin (deflated 70%)
Step #6:   adding: afl-cmin.bash (deflated 65%)
Step #6:   adding: afl-cmin.py (deflated 71%)
Step #6:   adding: afl-compiler-rt-32.o (deflated 54%)
Step #6:   adding: afl-compiler-rt-64.o (deflated 67%)
Step #6:   adding: afl-compiler-rt.o (deflated 67%)
Step #6:   adding: afl-fuzz (deflated 55%)
Step #6:   adding: afl-g++ (deflated 57%)
Step #6:   adding: afl-gcc (deflated 57%)
Step #6:   adding: afl-gotcpu (deflated 62%)
Step #6:   adding: afl-ld-lto (deflated 62%)
Step #6:   adding: afl-llvm-dict2file.so (deflated 69%)
Step #6:   adding: afl-llvm-lto-instrumentlist.so (deflated 71%)
Step #6:   adding: afl-llvm-pass.so (deflated 69%)
Step #6:   adding: afl-llvm-rt-lto-32.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto-64.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto.o (deflated 20%)
Step #6:   adding: afl-lto (deflated 57%)
Step #6:   adding: afl-lto++ (deflated 57%)
Step #6:   adding: afl-lto++.8 (deflated 55%)
Step #6:   adding: afl-lto.8 (deflated 55%)
Step #6:   adding: afl-persistent-config (deflated 59%)
Step #6:   adding: afl-plot (deflated 65%)
Step #6:   adding: afl-showmap (deflated 55%)
Step #6:   adding: afl-system-config (deflated 63%)
Step #6:   adding: afl-tmin (deflated 55%)
Step #6:   adding: afl-whatsup (deflated 69%)
Step #6:   adding: afl-wine-trace (deflated 70%)
Step #6:   adding: afl_options.txt (deflated 20%)
Step #6:   adding: array (deflated 66%)
Step #6:   adding: array-gc (deflated 66%)
Step #6:   adding: cmplog-instructions-pass.so (deflated 71%)
Step #6:   adding: cmplog-routines-pass.so (deflated 70%)
Step #6:   adding: cmplog-switches-pass.so (deflated 70%)
Step #6:   adding: compare-transform-pass.so (deflated 69%)
Step #6:   adding: dynamic_list.txt (deflated 76%)
Step #6:   adding: flex-vector (deflated 71%)
Step #6:   adding: flex-vector-bo (deflated 70%)
Step #6:   adding: flex-vector-gc (deflated 71%)
Step #6:   adding: flex-vector-st (deflated 70%)
Step #6:   adding: injection-pass.so (deflated 70%)
Step #6:   adding: libAFLDriver.a (deflated 64%)
Step #6:   adding: libAFLQemuDriver.a (deflated 65%)
Step #6:   adding: llvm-symbolizer (deflated 65%)
Step #6:   adding: map (deflated 67%)
Step #6:   adding: map-gc (deflated 67%)
Step #6:   adding: map-st (deflated 67%)
Step #6:   adding: map-st-str (deflated 68%)
Step #6:   adding: map-st-str-conflict (deflated 68%)
Step #6:   adding: set (deflated 67%)
Step #6:   adding: set-gc (deflated 66%)
Step #6:   adding: set-st (deflated 67%)
Step #6:   adding: set-st-str (deflated 67%)
Step #6:   adding: set-st-str-conflict (deflated 67%)
Step #6:   adding: split-compares-pass.so (deflated 69%)
Step #6:   adding: split-switches-pass.so (deflated 70%)
Step #6:   adding: vector (deflated 68%)
Step #6:   adding: vector-gc (deflated 67%)
Step #6:   adding: vector-st (deflated 68%)
Finished Step #6
Starting Step #7
Step #7: Pulling image: gcr.io/oss-fuzz-base/uploader
Step #7: Using default tag: latest
Step #7: latest: Pulling from oss-fuzz-base/uploader
Step #7: c62795f78da9: Pulling fs layer
Step #7: d4fceeeb758e: Pulling fs layer
Step #7: 5c9125a401ae: Pulling fs layer
Step #7: 0062f774e994: Pulling fs layer
Step #7: 6b33fd031fac: Pulling fs layer
Step #7: 7eb39101e508: Pulling fs layer
Step #7: 89257482f398: Pulling fs layer
Step #7: 0062f774e994: Waiting
Step #7: 6b33fd031fac: Waiting
Step #7: 7eb39101e508: Waiting
Step #7: 89257482f398: Waiting
Step #7: d4fceeeb758e: Download complete
Step #7: 5c9125a401ae: Download complete
Step #7: 6b33fd031fac: Verifying Checksum
Step #7: 6b33fd031fac: Download complete
Step #7: 0062f774e994: Verifying Checksum
Step #7: 0062f774e994: Download complete
Step #7: 89257482f398: Verifying Checksum
Step #7: 89257482f398: Download complete
Step #7: c62795f78da9: Verifying Checksum
Step #7: c62795f78da9: Download complete
Step #7: 7eb39101e508: Download complete
Step #7: c62795f78da9: Pull complete
Step #7: d4fceeeb758e: Pull complete
Step #7: 5c9125a401ae: Pull complete
Step #7: 0062f774e994: Pull complete
Step #7: 6b33fd031fac: Pull complete
Step #7: 7eb39101e508: Pull complete
Step #7: 89257482f398: Pull complete
Step #7: Digest: sha256:5717ba63d13b5515063e2a6ccad09fb5bf32a86c8e0798a363d81c2be522e411
Step #7: Status: Downloaded newer image for gcr.io/oss-fuzz-base/uploader:latest
Step #7: gcr.io/oss-fuzz-base/uploader:latest
Step #7:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #7:                                  Dload  Upload   Total   Spent    Left  Speed
Step #7:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   153    0     0  100   153      0    687 --:--:-- --:--:-- --:--:--   689
Finished Step #7
Starting Step #8
Step #8: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #8:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #8:                                  Dload  Upload   Total   Spent    Left  Speed
Step #8:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 35.6M    0     0  100 35.6M      0  81.4M --:--:-- --:--:-- --:--:-- 81.4M
Finished Step #8
Starting Step #9
Step #9: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #9:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #9:                                  Dload  Upload   Total   Spent    Left  Speed
Step #9:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   197    0     0  100   197      0    767 --:--:-- --:--:-- --:--:--   769
Finished Step #9
Starting Step #10
Step #10: Already have image (with digest): gcr.io/cloud-builders/curl
Step #10:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #10:                                  Dload  Upload   Total   Spent    Left  Speed
Step #10:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    155 --:--:-- --:--:-- --:--:--   156
Finished Step #10
Starting Step #11
Step #11: Already have image: gcr.io/oss-fuzz/immer
Finished Step #11
Starting Step #12 - "compile-honggfuzz-address-x86_64"
Step #12 - "compile-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": vm.mmap_rnd_bits = 28
Step #12 - "compile-honggfuzz-address-x86_64": Skipping compilation; using precompiled honggfuzz
Step #12 - "compile-honggfuzz-address-x86_64":  done.
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": CC=clang
Step #12 - "compile-honggfuzz-address-x86_64": CXX=clang++
Step #12 - "compile-honggfuzz-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp
Step #12 - "compile-honggfuzz-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++
Step #12 - "compile-honggfuzz-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": + mkdir build
Step #12 - "compile-honggfuzz-address-x86_64": + cd build
Step #12 - "compile-honggfuzz-address-x86_64": + cmake .. -DBOEHM_GC_INCLUDE_DIR=/usr/include -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a -Dimmer_BUILD_TESTS=OFF
Step #12 - "compile-honggfuzz-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #12 - "compile-honggfuzz-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting C compiler ABI info
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting C compiler ABI info - done
Step #12 - "compile-honggfuzz-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting C compile features
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting C compile features - done
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compiler ABI info
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #12 - "compile-honggfuzz-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compile features
Step #12 - "compile-honggfuzz-address-x86_64": -- Detecting CXX compile features - done
Step #12 - "compile-honggfuzz-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #12 - "compile-honggfuzz-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #12 - "compile-honggfuzz-address-x86_64": -- Found Threads: TRUE
Step #12 - "compile-honggfuzz-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #12 - "compile-honggfuzz-address-x86_64": -- Found GC library: /usr/lib/x86_64-linux-gnu/libgc.a
Step #12 - "compile-honggfuzz-address-x86_64": [33mCMake Warning (dev) at /usr/local/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
Step #12 - "compile-honggfuzz-address-x86_64":   The package name passed to `find_package_handle_standard_args` (Boehm_GC)
Step #12 - "compile-honggfuzz-address-x86_64":   does not match the name of the calling package (BoehmGC).  This can lead to
Step #12 - "compile-honggfuzz-address-x86_64":   problems in calling code that expects `find_package` result variables
Step #12 - "compile-honggfuzz-address-x86_64":   (e.g., `_FOUND`) to follow a certain pattern.
Step #12 - "compile-honggfuzz-address-x86_64": Call Stack (most recent call first):
Step #12 - "compile-honggfuzz-address-x86_64":   cmake/FindBoehmGC.cmake:108 (find_package_handle_standard_args)
Step #12 - "compile-honggfuzz-address-x86_64":   CMakeLists.txt:86 (find_package)
Step #12 - "compile-honggfuzz-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #12 - "compile-honggfuzz-address-x86_64": [0m
Step #12 - "compile-honggfuzz-address-x86_64": -- Found Boehm_GC: /usr/lib/x86_64-linux-gnu/libgc.a
Step #12 - "compile-honggfuzz-address-x86_64": -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.56")
Step #12 - "compile-honggfuzz-address-x86_64": -- Using ccache: /usr/local/bin/ccache
Step #12 - "compile-honggfuzz-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:22 (find_package):
Step #12 - "compile-honggfuzz-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #12 - "compile-honggfuzz-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #12 - "compile-honggfuzz-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #12 - "compile-honggfuzz-address-x86_64": [0m
Step #12 - "compile-honggfuzz-address-x86_64": -- Found PythonInterp: /usr/local/bin/python (found version "3.11.13")
Step #12 - "compile-honggfuzz-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:23 (find_package):
Step #12 - "compile-honggfuzz-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #12 - "compile-honggfuzz-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #12 - "compile-honggfuzz-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #12 - "compile-honggfuzz-address-x86_64": [0m
Step #12 - "compile-honggfuzz-address-x86_64": -- Found PythonLibs: /usr/local/lib/libpython3.11.so (found version "3.11.13")
Step #12 - "compile-honggfuzz-address-x86_64": -- Checking for module 'guile-2.2'
Step #12 - "compile-honggfuzz-address-x86_64": --   No package 'guile-2.2' found
Step #12 - "compile-honggfuzz-address-x86_64": -- Disabling Guile modules
Step #12 - "compile-honggfuzz-address-x86_64": -- Configuring done (1.7s)
Step #12 - "compile-honggfuzz-address-x86_64": -- Generating done (0.1s)
Step #12 - "compile-honggfuzz-address-x86_64": -- Build files have been written to: /src/immer/build
Step #12 - "compile-honggfuzz-address-x86_64": ++ nproc
Step #12 - "compile-honggfuzz-address-x86_64": + make -j32 fuzzers
Step #12 - "compile-honggfuzz-address-x86_64": [  2%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-gc.dir/vector-gc.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [  5%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-st.dir/vector-st.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [  7%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector.dir/vector.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 10%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array-gc.dir/array-gc.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array.dir/array.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 15%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-bo.dir/flex-vector-bo.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-gc.dir/flex-vector-gc.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-st.dir/flex-vector-st.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector.dir/flex-vector.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 26%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str-conflict.dir/map-st-str-conflict.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-gc.dir/map-gc.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str.dir/map-st-str.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 34%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st.dir/map-st.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 36%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map.dir/map.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 39%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-gc.dir/set-gc.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 42%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str.dir/set-st-str.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 44%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st.dir/set-st.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str-conflict.dir/set-st-str-conflict.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 50%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set.dir/set.cpp.o[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 52%] [32m[1mLinking CXX executable array-gc[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 52%] Built target extra-fuzzer-array-gc
Step #12 - "compile-honggfuzz-address-x86_64": [ 55%] [32m[1mLinking CXX executable map-gc[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 57%] [32m[1mLinking CXX executable set[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 60%] [32m[1mLinking CXX executable array[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 63%] [32m[1mLinking CXX executable set-st[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 63%] Built target extra-fuzzer-map-gc
Step #12 - "compile-honggfuzz-address-x86_64": [ 63%] Built target extra-fuzzer-set
Step #12 - "compile-honggfuzz-address-x86_64": [ 65%] [32m[1mLinking CXX executable set-gc[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 65%] Built target extra-fuzzer-set-st
Step #12 - "compile-honggfuzz-address-x86_64": [ 65%] Built target extra-fuzzer-array
Step #12 - "compile-honggfuzz-address-x86_64": [ 68%] [32m[1mLinking CXX executable vector-gc[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 71%] [32m[1mLinking CXX executable set-st-str-conflict[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 73%] [32m[1mLinking CXX executable map[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 76%] [32m[1mLinking CXX executable set-st-str[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 76%] Built target extra-fuzzer-set-gc
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] [32m[1mLinking CXX executable vector[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] Built target extra-fuzzer-vector-gc
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] Built target extra-fuzzer-map
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] Built target extra-fuzzer-set-st-str-conflict
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] Built target extra-fuzzer-set-st-str
Step #12 - "compile-honggfuzz-address-x86_64": [ 78%] Built target extra-fuzzer-vector
Step #12 - "compile-honggfuzz-address-x86_64": [ 81%] [32m[1mLinking CXX executable map-st[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 84%] [32m[1mLinking CXX executable vector-st[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 86%] [32m[1mLinking CXX executable map-st-str-conflict[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 89%] [32m[1mLinking CXX executable map-st-str[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 89%] Built target extra-fuzzer-map-st
Step #12 - "compile-honggfuzz-address-x86_64": [ 89%] Built target extra-fuzzer-vector-st
Step #12 - "compile-honggfuzz-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str-conflict
Step #12 - "compile-honggfuzz-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str
Step #12 - "compile-honggfuzz-address-x86_64": [ 92%] [32m[1mLinking CXX executable flex-vector-gc[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 92%] Built target extra-fuzzer-flex-vector-gc
Step #12 - "compile-honggfuzz-address-x86_64": [ 94%] [32m[1mLinking CXX executable flex-vector-bo[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 94%] Built target extra-fuzzer-flex-vector-bo
Step #12 - "compile-honggfuzz-address-x86_64": [ 97%] [32m[1mLinking CXX executable flex-vector[0m
Step #12 - "compile-honggfuzz-address-x86_64": [ 97%] Built target extra-fuzzer-flex-vector
Step #12 - "compile-honggfuzz-address-x86_64": [100%] [32m[1mLinking CXX executable flex-vector-st[0m
Step #12 - "compile-honggfuzz-address-x86_64": [100%] Built target extra-fuzzer-flex-vector-st
Step #12 - "compile-honggfuzz-address-x86_64": [100%] Built target fuzzers
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/CMakeFiles ]]
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/Makefile ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/Makefile ]]
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/array ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/array ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/array /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/array-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/array-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/array-gc /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/cmake_install.cmake ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/cmake_install.cmake ]]
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/flex-vector ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/flex-vector ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/flex-vector /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/flex-vector-bo ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/flex-vector-bo ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/flex-vector-bo /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/flex-vector-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/flex-vector-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/flex-vector-gc /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/flex-vector-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/flex-vector-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/flex-vector-st /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/map ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/map ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/map /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/map-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/map-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/map-gc /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/map-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/map-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/map-st /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/map-st-str ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/map-st-str ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/map-st-str /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/map-st-str-conflict ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/map-st-str-conflict ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/map-st-str-conflict /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/set ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/set ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/set /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/set-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/set-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/set-gc /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/set-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/set-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/set-st /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/set-st-str ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/set-st-str ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/set-st-str /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/set-st-str-conflict ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/set-st-str-conflict ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/set-st-str-conflict /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/vector ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/vector ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/vector /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/vector-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/vector-gc ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/vector-gc /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -f extra/fuzzer/vector-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -x extra/fuzzer/vector-st ]]
Step #12 - "compile-honggfuzz-address-x86_64": + cp extra/fuzzer/vector-st /workspace/out/honggfuzz-address-x86_64
Finished Step #12 - "compile-honggfuzz-address-x86_64"
Starting Step #13 - "build-check-honggfuzz-address-x86_64"
Step #13 - "build-check-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/flex-vector-st
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/set-st-str
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/map
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/array-gc
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/set-st-str-conflict
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/map-st-str
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/vector-st
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/set-st
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/set
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/map-st
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/set-gc
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/flex-vector
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/map-gc
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/array
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/flex-vector-gc
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/vector
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/flex-vector-bo
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/map-st-str-conflict
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvkzdgocn/vector-gc
Finished Step #13 - "build-check-honggfuzz-address-x86_64"
Starting Step #14
Step #14: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #14
Starting Step #15
Step #15: Already have image: gcr.io/oss-fuzz/immer
Step #15:   adding: array (deflated 67%)
Step #15:   adding: array-gc (deflated 66%)
Step #15:   adding: flex-vector (deflated 70%)
Step #15:   adding: flex-vector-bo (deflated 70%)
Step #15:   adding: flex-vector-gc (deflated 70%)
Step #15:   adding: flex-vector-st (deflated 70%)
Step #15:   adding: honggfuzz (deflated 66%)
Step #15:   adding: llvm-symbolizer (deflated 65%)
Step #15:   adding: map (deflated 67%)
Step #15:   adding: map-gc (deflated 67%)
Step #15:   adding: map-st (deflated 67%)
Step #15:   adding: map-st-str (deflated 67%)
Step #15:   adding: map-st-str-conflict (deflated 67%)
Step #15:   adding: set (deflated 67%)
Step #15:   adding: set-gc (deflated 66%)
Step #15:   adding: set-st (deflated 67%)
Step #15:   adding: set-st-str (deflated 67%)
Step #15:   adding: set-st-str-conflict (deflated 66%)
Step #15:   adding: vector (deflated 67%)
Step #15:   adding: vector-gc (deflated 67%)
Step #15:   adding: vector-st (deflated 67%)
Finished Step #15
Starting Step #16
Step #16: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #16:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #16:                                  Dload  Upload   Total   Spent    Left  Speed
Step #16:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   153    0     0  100   153      0    694 --:--:-- --:--:-- --:--:--   695
Finished Step #16
Starting Step #17
Step #17: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #17:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #17:                                  Dload  Upload   Total   Spent    Left  Speed
Step #17:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 27.6M    0     0  100 27.6M      0  68.6M --:--:-- --:--:-- --:--:-- 68.8M
Finished Step #17
Starting Step #18
Step #18: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #18:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #18:                                  Dload  Upload   Total   Spent    Left  Speed
Step #18:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   197    0     0  100   197      0    621 --:--:-- --:--:-- --:--:--   623
Finished Step #18
Starting Step #19
Step #19: Already have image (with digest): gcr.io/cloud-builders/curl
Step #19:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #19:                                  Dload  Upload   Total   Spent    Left  Speed
Step #19:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    161 --:--:-- --:--:-- --:--:--   161
Finished Step #19
Starting Step #20
Step #20: Already have image: gcr.io/oss-fuzz/immer
Finished Step #20
Starting Step #21 - "compile-libfuzzer-address-x86_64"
Step #21 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #21 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": CC=clang
Step #21 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #21 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #21 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #21 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": + mkdir build
Step #21 - "compile-libfuzzer-address-x86_64": + cd build
Step #21 - "compile-libfuzzer-address-x86_64": + cmake .. -DBOEHM_GC_INCLUDE_DIR=/usr/include -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a -Dimmer_BUILD_TESTS=OFF
Step #21 - "compile-libfuzzer-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info - done
Step #21 - "compile-libfuzzer-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features - done
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #21 - "compile-libfuzzer-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features
Step #21 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features - done
Step #21 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #21 - "compile-libfuzzer-address-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #21 - "compile-libfuzzer-address-x86_64": -- Found Threads: TRUE
Step #21 - "compile-libfuzzer-address-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #21 - "compile-libfuzzer-address-x86_64": -- Found GC library: /usr/lib/x86_64-linux-gnu/libgc.a
Step #21 - "compile-libfuzzer-address-x86_64": [33mCMake Warning (dev) at /usr/local/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
Step #21 - "compile-libfuzzer-address-x86_64":   The package name passed to `find_package_handle_standard_args` (Boehm_GC)
Step #21 - "compile-libfuzzer-address-x86_64":   does not match the name of the calling package (BoehmGC).  This can lead to
Step #21 - "compile-libfuzzer-address-x86_64":   problems in calling code that expects `find_package` result variables
Step #21 - "compile-libfuzzer-address-x86_64":   (e.g., `_FOUND`) to follow a certain pattern.
Step #21 - "compile-libfuzzer-address-x86_64": Call Stack (most recent call first):
Step #21 - "compile-libfuzzer-address-x86_64":   cmake/FindBoehmGC.cmake:108 (find_package_handle_standard_args)
Step #21 - "compile-libfuzzer-address-x86_64":   CMakeLists.txt:86 (find_package)
Step #21 - "compile-libfuzzer-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #21 - "compile-libfuzzer-address-x86_64": [0m
Step #21 - "compile-libfuzzer-address-x86_64": -- Found Boehm_GC: /usr/lib/x86_64-linux-gnu/libgc.a
Step #21 - "compile-libfuzzer-address-x86_64": -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.56")
Step #21 - "compile-libfuzzer-address-x86_64": -- Using ccache: /usr/local/bin/ccache
Step #21 - "compile-libfuzzer-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:22 (find_package):
Step #21 - "compile-libfuzzer-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #21 - "compile-libfuzzer-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #21 - "compile-libfuzzer-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #21 - "compile-libfuzzer-address-x86_64": [0m
Step #21 - "compile-libfuzzer-address-x86_64": -- Found PythonInterp: /usr/local/bin/python (found version "3.11.13")
Step #21 - "compile-libfuzzer-address-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:23 (find_package):
Step #21 - "compile-libfuzzer-address-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #21 - "compile-libfuzzer-address-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #21 - "compile-libfuzzer-address-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #21 - "compile-libfuzzer-address-x86_64": [0m
Step #21 - "compile-libfuzzer-address-x86_64": -- Found PythonLibs: /usr/local/lib/libpython3.11.so (found version "3.11.13")
Step #21 - "compile-libfuzzer-address-x86_64": -- Checking for module 'guile-2.2'
Step #21 - "compile-libfuzzer-address-x86_64": --   No package 'guile-2.2' found
Step #21 - "compile-libfuzzer-address-x86_64": -- Disabling Guile modules
Step #21 - "compile-libfuzzer-address-x86_64": -- Configuring done (1.7s)
Step #21 - "compile-libfuzzer-address-x86_64": -- Generating done (0.1s)
Step #21 - "compile-libfuzzer-address-x86_64": -- Build files have been written to: /src/immer/build
Step #21 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-address-x86_64": + make -j32 fuzzers
Step #21 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array-gc.dir/array-gc.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array.dir/array.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-bo.dir/flex-vector-bo.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-st.dir/flex-vector-st.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-gc.dir/flex-vector-gc.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector.dir/flex-vector.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-gc.dir/map-gc.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str-conflict.dir/map-st-str-conflict.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st.dir/map-st.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str.dir/map-st-str.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-gc.dir/set-gc.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map.dir/map.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st.dir/set-st.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str-conflict.dir/set-st-str-conflict.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str.dir/set-st-str.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set.dir/set.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-gc.dir/vector-gc.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-st.dir/vector-st.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector.dir/vector.cpp.o[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 52%] [32m[1mLinking CXX executable array[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 55%] [32m[1mLinking CXX executable array-gc[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 55%] Built target extra-fuzzer-array
Step #21 - "compile-libfuzzer-address-x86_64": [ 55%] Built target extra-fuzzer-array-gc
Step #21 - "compile-libfuzzer-address-x86_64": [ 57%] [32m[1mLinking CXX executable map-gc[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 60%] [32m[1mLinking CXX executable set-st[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 60%] Built target extra-fuzzer-map-gc
Step #21 - "compile-libfuzzer-address-x86_64": [ 63%] [32m[1mLinking CXX executable set-gc[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 65%] [32m[1mLinking CXX executable map[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 68%] [32m[1mLinking CXX executable set-st-str-conflict[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 68%] Built target extra-fuzzer-set-st
Step #21 - "compile-libfuzzer-address-x86_64": [ 71%] [32m[1mLinking CXX executable set-st-str[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking CXX executable vector[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 76%] [32m[1mLinking CXX executable vector-gc[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 78%] [32m[1mLinking CXX executable set[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 78%] Built target extra-fuzzer-set-gc
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] [32m[1mLinking CXX executable map-st[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-map
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-set-st-str-conflict
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-set-st-str
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-vector
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-vector-gc
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-set
Step #21 - "compile-libfuzzer-address-x86_64": [ 81%] Built target extra-fuzzer-map-st
Step #21 - "compile-libfuzzer-address-x86_64": [ 84%] [32m[1mLinking CXX executable vector-st[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 86%] [32m[1mLinking CXX executable map-st-str-conflict[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 86%] Built target extra-fuzzer-vector-st
Step #21 - "compile-libfuzzer-address-x86_64": [ 86%] Built target extra-fuzzer-map-st-str-conflict
Step #21 - "compile-libfuzzer-address-x86_64": [ 89%] [32m[1mLinking CXX executable map-st-str[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 89%] Built target extra-fuzzer-map-st-str
Step #21 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking CXX executable flex-vector-gc[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 92%] Built target extra-fuzzer-flex-vector-gc
Step #21 - "compile-libfuzzer-address-x86_64": [ 94%] [32m[1mLinking CXX executable flex-vector-bo[0m
Step #21 - "compile-libfuzzer-address-x86_64": [ 97%] [32m[1mLinking CXX executable flex-vector-st[0m
Step #21 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking CXX executable flex-vector[0m
Step #21 - "compile-libfuzzer-address-x86_64": [100%] Built target extra-fuzzer-flex-vector-bo
Step #21 - "compile-libfuzzer-address-x86_64": [100%] Built target extra-fuzzer-flex-vector-st
Step #21 - "compile-libfuzzer-address-x86_64": [100%] Built target extra-fuzzer-flex-vector
Step #21 - "compile-libfuzzer-address-x86_64": [100%] Built target fuzzers
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/CMakeFiles ]]
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/Makefile ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/Makefile ]]
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/array ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/array ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/array /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/array-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/array-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/array-gc /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/cmake_install.cmake ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/cmake_install.cmake ]]
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/flex-vector ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/flex-vector ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/flex-vector /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/flex-vector-bo ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/flex-vector-bo ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/flex-vector-bo /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/flex-vector-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/flex-vector-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/flex-vector-gc /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/flex-vector-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/flex-vector-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/flex-vector-st /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/map ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/map ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/map /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/map-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/map-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/map-gc /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/map-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/map-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/map-st /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/map-st-str ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/map-st-str ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/map-st-str /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/map-st-str-conflict ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/map-st-str-conflict ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/map-st-str-conflict /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/set ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/set ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/set /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/set-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/set-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/set-gc /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/set-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/set-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/set-st /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/set-st-str ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/set-st-str ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/set-st-str /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/set-st-str-conflict ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/set-st-str-conflict ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/set-st-str-conflict /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/vector ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/vector ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/vector /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/vector-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/vector-gc ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/vector-gc /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + for fuzzer in extra/fuzzer/*
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -f extra/fuzzer/vector-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -x extra/fuzzer/vector-st ]]
Step #21 - "compile-libfuzzer-address-x86_64": + cp extra/fuzzer/vector-st /workspace/out/libfuzzer-address-x86_64
Finished Step #21 - "compile-libfuzzer-address-x86_64"
Starting Step #22 - "build-check-libfuzzer-address-x86_64"
Step #22 - "build-check-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/flex-vector-st
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/set-st-str
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/map
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/array-gc
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/set-st-str-conflict
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/map-st-str
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/vector-st
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/set-st
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/set
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/map-st
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/set-gc
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/flex-vector
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/map-gc
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/array
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/flex-vector-gc
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/vector
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/flex-vector-bo
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/map-st-str-conflict
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp8463butr/vector-gc
Finished Step #22 - "build-check-libfuzzer-address-x86_64"
Starting Step #23
Step #23: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #23
Starting Step #24
Step #24: Already have image: gcr.io/oss-fuzz/immer
Step #24:   adding: array (deflated 66%)
Step #24:   adding: array-gc (deflated 66%)
Step #24:   adding: flex-vector (deflated 69%)
Step #24:   adding: flex-vector-bo (deflated 69%)
Step #24:   adding: flex-vector-gc (deflated 69%)
Step #24:   adding: flex-vector-st (deflated 69%)
Step #24:   adding: llvm-symbolizer (deflated 65%)
Step #24:   adding: map (deflated 67%)
Step #24:   adding: map-gc (deflated 66%)
Step #24:   adding: map-st (deflated 67%)
Step #24:   adding: map-st-str (deflated 67%)
Step #24:   adding: map-st-str-conflict (deflated 67%)
Step #24:   adding: set (deflated 66%)
Step #24:   adding: set-gc (deflated 66%)
Step #24:   adding: set-st (deflated 66%)
Step #24:   adding: set-st-str (deflated 66%)
Step #24:   adding: set-st-str-conflict (deflated 66%)
Step #24:   adding: vector (deflated 67%)
Step #24:   adding: vector-gc (deflated 67%)
Step #24:   adding: vector-st (deflated 67%)
Finished Step #24
Starting Step #25
Step #25: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #25:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #25:                                  Dload  Upload   Total   Spent    Left  Speed
Step #25:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   153    0     0  100   153      0    752 --:--:-- --:--:-- --:--:--   753
Finished Step #25
Starting Step #26
Step #26: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #26:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #26:                                  Dload  Upload   Total   Spent    Left  Speed
Step #26:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 71 38.8M    0     0   71 27.7M      0   169M --:--:-- --:--:-- --:--:--  169M100 38.8M    0     0  100 38.8M      0   108M --:--:-- --:--:-- --:--:--  108M
Finished Step #26
Starting Step #27
Step #27: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #27:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #27:                                  Dload  Upload   Total   Spent    Left  Speed
Step #27:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   197    0     0  100   197      0    710 --:--:-- --:--:-- --:--:--   708100   197    0     0  100   197      0    710 --:--:-- --:--:-- --:--:--   708
Finished Step #27
Starting Step #28
Step #28: Already have image (with digest): gcr.io/cloud-builders/curl
Step #28:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #28:                                  Dload  Upload   Total   Spent    Left  Speed
Step #28:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    30    0     0  100    30      0    164 --:--:-- --:--:-- --:--:--   164
Finished Step #28
Starting Step #29
Step #29: Already have image: gcr.io/oss-fuzz/immer
Finished Step #29
Starting Step #30 - "compile-libfuzzer-memory-x86_64"
Step #30 - "compile-libfuzzer-memory-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #30 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-memory-x86_64": vm.mmap_rnd_bits = 28
Step #30 - "compile-libfuzzer-memory-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #30 - "compile-libfuzzer-memory-x86_64": Building without MSan instrumented libraries.
Step #30 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-memory-x86_64": CC=clang
Step #30 - "compile-libfuzzer-memory-x86_64": CXX=clang++
Step #30 - "compile-libfuzzer-memory-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link
Step #30 - "compile-libfuzzer-memory-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -stdlib=libc++
Step #30 - "compile-libfuzzer-memory-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=memory -Cdebuginfo=1 -Cforce-frame-pointers
Step #30 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-memory-x86_64": + mkdir build
Step #30 - "compile-libfuzzer-memory-x86_64": + cd build
Step #30 - "compile-libfuzzer-memory-x86_64": + cmake .. -DBOEHM_GC_INCLUDE_DIR=/usr/include -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a -Dimmer_BUILD_TESTS=OFF
Step #30 - "compile-libfuzzer-memory-x86_64": -- The C compiler identification is Clang 22.0.0
Step #30 - "compile-libfuzzer-memory-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting C compiler ABI info
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting C compiler ABI info - done
Step #30 - "compile-libfuzzer-memory-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting C compile features
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting C compile features - done
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting CXX compiler ABI info
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting CXX compiler ABI info - done
Step #30 - "compile-libfuzzer-memory-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting CXX compile features
Step #30 - "compile-libfuzzer-memory-x86_64": -- Detecting CXX compile features - done
Step #30 - "compile-libfuzzer-memory-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
Step #30 - "compile-libfuzzer-memory-x86_64": -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found Threads: TRUE
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found PkgConfig: /usr/bin/pkg-config (found version "0.29.1")
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found GC library: /usr/lib/x86_64-linux-gnu/libgc.a
Step #30 - "compile-libfuzzer-memory-x86_64": [33mCMake Warning (dev) at /usr/local/share/cmake-3.29/Modules/FindPackageHandleStandardArgs.cmake:438 (message):
Step #30 - "compile-libfuzzer-memory-x86_64":   The package name passed to `find_package_handle_standard_args` (Boehm_GC)
Step #30 - "compile-libfuzzer-memory-x86_64":   does not match the name of the calling package (BoehmGC).  This can lead to
Step #30 - "compile-libfuzzer-memory-x86_64":   problems in calling code that expects `find_package` result variables
Step #30 - "compile-libfuzzer-memory-x86_64":   (e.g., `_FOUND`) to follow a certain pattern.
Step #30 - "compile-libfuzzer-memory-x86_64": Call Stack (most recent call first):
Step #30 - "compile-libfuzzer-memory-x86_64":   cmake/FindBoehmGC.cmake:108 (find_package_handle_standard_args)
Step #30 - "compile-libfuzzer-memory-x86_64":   CMakeLists.txt:86 (find_package)
Step #30 - "compile-libfuzzer-memory-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #30 - "compile-libfuzzer-memory-x86_64": [0m
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found Boehm_GC: /usr/lib/x86_64-linux-gnu/libgc.a
Step #30 - "compile-libfuzzer-memory-x86_64": -- Could NOT find Boost (missing: Boost_INCLUDE_DIR) (Required is at least version "1.56")
Step #30 - "compile-libfuzzer-memory-x86_64": -- Using ccache: /usr/local/bin/ccache
Step #30 - "compile-libfuzzer-memory-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:22 (find_package):
Step #30 - "compile-libfuzzer-memory-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #30 - "compile-libfuzzer-memory-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #30 - "compile-libfuzzer-memory-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #30 - "compile-libfuzzer-memory-x86_64": 
Step #30 - "compile-libfuzzer-memory-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #30 - "compile-libfuzzer-memory-x86_64": [0m
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found PythonInterp: /usr/local/bin/python (found version "3.11.13")
Step #30 - "compile-libfuzzer-memory-x86_64": [33mCMake Warning (dev) at extra/python/CMakeLists.txt:23 (find_package):
Step #30 - "compile-libfuzzer-memory-x86_64":   Policy CMP0148 is not set: The FindPythonInterp and FindPythonLibs modules
Step #30 - "compile-libfuzzer-memory-x86_64":   are removed.  Run "cmake --help-policy CMP0148" for policy details.  Use
Step #30 - "compile-libfuzzer-memory-x86_64":   the cmake_policy command to set the policy and suppress this warning.
Step #30 - "compile-libfuzzer-memory-x86_64": 
Step #30 - "compile-libfuzzer-memory-x86_64": This warning is for project developers.  Use -Wno-dev to suppress it.
Step #30 - "compile-libfuzzer-memory-x86_64": [0m
Step #30 - "compile-libfuzzer-memory-x86_64": -- Found PythonLibs: /usr/local/lib/libpython3.11.so (found version "3.11.13")
Step #30 - "compile-libfuzzer-memory-x86_64": -- Checking for module 'guile-2.2'
Step #30 - "compile-libfuzzer-memory-x86_64": --   No package 'guile-2.2' found
Step #30 - "compile-libfuzzer-memory-x86_64": -- Disabling Guile modules
Step #30 - "compile-libfuzzer-memory-x86_64": -- Configuring done (1.6s)
Step #30 - "compile-libfuzzer-memory-x86_64": -- Generating done (0.1s)
Step #30 - "compile-libfuzzer-memory-x86_64": -- Build files have been written to: /src/immer/build
Step #30 - "compile-libfuzzer-memory-x86_64": ++ nproc
Step #30 - "compile-libfuzzer-memory-x86_64": + make -j32 fuzzers
Step #30 - "compile-libfuzzer-memory-x86_64": [  2%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array-gc.dir/array-gc.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [  5%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-array.dir/array.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [  7%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-bo.dir/flex-vector-bo.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-st.dir/flex-vector-st.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 13%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector-gc.dir/flex-vector-gc.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 15%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-gc.dir/map-gc.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 18%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str-conflict.dir/map-st-str-conflict.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 21%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-flex-vector.dir/flex-vector.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 23%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st-str.dir/map-st-str.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 26%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map-st.dir/map-st.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 28%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-map.dir/map.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 31%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-gc.dir/set-gc.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 34%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str-conflict.dir/set-st-str-conflict.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 36%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st-str.dir/set-st-str.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 39%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set-st.dir/set-st.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 42%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-set.dir/set.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 44%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-gc.dir/vector-gc.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 47%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector-st.dir/vector-st.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 50%] [32mBuilding CXX object extra/fuzzer/CMakeFiles/extra-fuzzer-vector.dir/vector.cpp.o[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 52%] [32m[1mLinking CXX executable array-gc[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 52%] Built target extra-fuzzer-array-gc
Step #30 - "compile-libfuzzer-memory-x86_64": [ 55%] [32m[1mLinking CXX executable array[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 55%] Built target extra-fuzzer-array
Step #30 - "compile-libfuzzer-memory-x86_64": [ 57%] [32m[1mLinking CXX executable set[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 60%] [32m[1mLinking CXX executable map-gc[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 60%] Built target extra-fuzzer-set
Step #30 - "compile-libfuzzer-memory-x86_64": [ 60%] Built target extra-fuzzer-map-gc
Step #30 - "compile-libfuzzer-memory-x86_64": [ 63%] [32m[1mLinking CXX executable map-st[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 65%] [32m[1mLinking CXX executable set-gc[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 68%] [32m[1mLinking CXX executable set-st-str-conflict[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 71%] [32m[1mLinking CXX executable set-st-str[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 71%] Built target extra-fuzzer-map-st
Step #30 - "compile-libfuzzer-memory-x86_64": [ 73%] [32m[1mLinking CXX executable vector-gc[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 76%] [32m[1mLinking CXX executable map[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 78%] [32m[1mLinking CXX executable vector[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 78%] Built target extra-fuzzer-set-gc
Step #30 - "compile-libfuzzer-memory-x86_64": [ 78%] Built target extra-fuzzer-set-st-str-conflict
Step #30 - "compile-libfuzzer-memory-x86_64": [ 78%] Built target extra-fuzzer-set-st-str
Step #30 - "compile-libfuzzer-memory-x86_64": [ 81%] [32m[1mLinking CXX executable set-st[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 81%] Built target extra-fuzzer-vector-gc
Step #30 - "compile-libfuzzer-memory-x86_64": [ 81%] Built target extra-fuzzer-map
Step #30 - "compile-libfuzzer-memory-x86_64": [ 81%] Built target extra-fuzzer-vector
Step #30 - "compile-libfuzzer-memory-x86_64": [ 81%] Built target extra-fuzzer-set-st
Step #30 - "compile-libfuzzer-memory-x86_64": [ 84%] [32m[1mLinking CXX executable map-st-str-conflict[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 86%] [32m[1mLinking CXX executable map-st-str[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 86%] Built target extra-fuzzer-map-st-str-conflict
Step #30 - "compile-libfuzzer-memory-x86_64": [ 86%] Built target extra-fuzzer-map-st-str
Step #30 - "compile-libfuzzer-memory-x86_64": [ 89%] [32m[1mLinking CXX executable vector-st[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 89%] Built target extra-fuzzer-vector-st
Step #30 - "compile-libfuzzer-memory-x86_64": [ 92%] [32m[1mLinking CXX executable flex-vector-gc[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 92%] Built target extra-fuzzer-flex-vector-gc
Step #30 - "compile-libfuzzer-memory-x86_64": [ 94%] [32m[1mLinking CXX executable flex-vector-st[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [ 94%] Built target extra-fuzzer-flex-vector-st
Step #30 - "compile-libfuzzer-memory-x86_64": [ 97%] [32m[1mLinking CXX executable flex-vector[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [100%] [32m[1mLinking CXX executable flex-vector-bo[0m
Step #30 - "compile-libfuzzer-memory-x86_64": [100%] Built target extra-fuzzer-flex-vector
Step #30 - "compile-libfuzzer-memory-x86_64": [100%] Built target extra-fuzzer-flex-vector-bo
Step #30 - "compile-libfuzzer-memory-x86_64": [100%] Built target fuzzers
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/CMakeFiles ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/Makefile ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/Makefile ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/array ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/array ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/array /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/array-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/array-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/array-gc /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/cmake_install.cmake ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/cmake_install.cmake ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/flex-vector ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/flex-vector ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/flex-vector /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/flex-vector-bo ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/flex-vector-bo ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/flex-vector-bo /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/flex-vector-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/flex-vector-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/flex-vector-gc /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/flex-vector-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/flex-vector-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/flex-vector-st /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/map ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/map ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/map /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/map-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/map-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/map-gc /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/map-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/map-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/map-st /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/map-st-str ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/map-st-str ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/map-st-str /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/map-st-str-conflict ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/map-st-str-conflict ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/map-st-str-conflict /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/set ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/set ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/set /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/set-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/set-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/set-gc /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/set-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/set-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/set-st /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/set-st-str ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/set-st-str ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/set-st-str /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/set-st-str-conflict ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/set-st-str-conflict ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/set-st-str-conflict /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/vector ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/vector ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/vector /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/vector-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/vector-gc ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/vector-gc /workspace/out/libfuzzer-memory-x86_64
Step #30 - "compile-libfuzzer-memory-x86_64": + for fuzzer in extra/fuzzer/*
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -f extra/fuzzer/vector-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + [[ -x extra/fuzzer/vector-st ]]
Step #30 - "compile-libfuzzer-memory-x86_64": + cp extra/fuzzer/vector-st /workspace/out/libfuzzer-memory-x86_64
Finished Step #30 - "compile-libfuzzer-memory-x86_64"
Starting Step #31 - "build-check-libfuzzer-memory-x86_64"
Step #31 - "build-check-libfuzzer-memory-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/flex-vector-st
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/set-st-str
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/map
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/array-gc
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/set-st-str-conflict
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/map-st-str
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/vector-st
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/set-st
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/set
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/map-st
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/set-gc
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/flex-vector
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/map-gc
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/array
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/flex-vector-gc
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/vector
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/flex-vector-bo
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/map-st-str-conflict
Step #31 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmptmqqnwcn/vector-gc
Finished Step #31 - "build-check-libfuzzer-memory-x86_64"
Starting Step #32
Step #32: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #32
Starting Step #33
Step #33: Already have image: gcr.io/oss-fuzz/immer
Step #33:   adding: array (deflated 66%)
Step #33:   adding: array-gc (deflated 65%)
Step #33:   adding: flex-vector (deflated 67%)
Step #33:   adding: flex-vector-bo (deflated 67%)
Step #33:   adding: flex-vector-gc (deflated 67%)
Step #33:   adding: flex-vector-st (deflated 67%)
Step #33:   adding: llvm-symbolizer (deflated 65%)
Step #33:   adding: map (deflated 66%)
Step #33:   adding: map-gc (deflated 66%)
Step #33:   adding: map-st (deflated 66%)
Step #33:   adding: map-st-str (deflated 66%)
Step #33:   adding: map-st-str-conflict (deflated 66%)
Step #33:   adding: set (deflated 66%)
Step #33:   adding: set-gc (deflated 65%)
Step #33:   adding: set-st (deflated 66%)
Step #33:   adding: set-st-str (deflated 66%)
Step #33:   adding: set-st-str-conflict (deflated 66%)
Step #33:   adding: vector (deflated 66%)
Step #33:   adding: vector-gc (deflated 66%)
Step #33:   adding: vector-st (deflated 66%)
Finished Step #33
Starting Step #34
Step #34: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #34:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #34:                                  Dload  Upload   Total   Spent    Left  Speed
Step #34:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   153    0     0  100   153      0    702 --:--:-- --:--:-- --:--:--   705
Finished Step #34
Starting Step #35
Step #35: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #35:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #35:                                  Dload  Upload   Total   Spent    Left  Speed
Step #35:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 40.6M    0     0  100 40.6M      0   104M --:--:-- --:--:-- --:--:--  104M
Finished Step #35
Starting Step #36
Step #36: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #36:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #36:                                  Dload  Upload   Total   Spent    Left  Speed
Step #36:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   197    0     0  100   197      0    960 --:--:-- --:--:-- --:--:--   960100   197    0     0  100   197      0    644 --:--:-- --:--:-- --:--:--   643
Finished Step #36
Starting Step #37
Step #37: Already have image (with digest): gcr.io/cloud-builders/curl
Step #37:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #37:                                  Dload  Upload   Total   Spent    Left  Speed
Step #37:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    29    0     0  100    29      0    156 --:--:-- --:--:-- --:--:--   155100    29    0     0  100    29      0    155 --:--:-- --:--:-- --:--:--   155
Finished Step #37
Starting Step #38
Step #38: Already have image: gcr.io/oss-fuzz/immer
Finished Step #38
PUSH
DONE
