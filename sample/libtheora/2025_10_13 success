starting build "bba4ab7f-15fa-46a9-b5df-660638c48f94"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d"
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Sending build context to Docker daemon  6.656kB
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 1/7 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b549f31133a9: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dabb89f8c5b: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30ed102afb91: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dda834d3e21: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 96b0940ad243: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c818fee6e8d1: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7a70755c25fd: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": e4398b373f2a: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 32ac7717845e: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": cb0f96c4db66: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b458929f5e32: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c8fd4aa4a167: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 736730252417: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eec16591c4df: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30a0d07cf2e7: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c6586f5f3ccf: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8406cb5e3d2e: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8e266dbe0c4d: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8f156ea66812: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ac99bb71327d: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": f9ec19047416: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af1979f43c07: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": dd39fcf91fe0: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 55f50f1a2a21: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 45c8a98c3666: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": da84622e6225: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ec94a62f24bc: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 2edd6a48344d: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af0a3a0e8048: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ead1a8cccc75: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18b5271d8370: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 1f20ece84680: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18d74779e01f: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 3564fec3a3b5: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eeec85843e2a: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 71578bdd9adf: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 855245c2cd93: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 63de315705be: Pulling fs layer
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dda834d3e21: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 96b0940ad243: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c818fee6e8d1: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8f156ea66812: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 3564fec3a3b5: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 1f20ece84680: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eeec85843e2a: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7a70755c25fd: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ac99bb71327d: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18d74779e01f: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 71578bdd9adf: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af0a3a0e8048: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": f9ec19047416: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": e4398b373f2a: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 855245c2cd93: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ead1a8cccc75: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 63de315705be: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af1979f43c07: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 32ac7717845e: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": dd39fcf91fe0: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ec94a62f24bc: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 45c8a98c3666: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30a0d07cf2e7: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 2edd6a48344d: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 55f50f1a2a21: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": da84622e6225: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": cb0f96c4db66: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 736730252417: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eec16591c4df: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8406cb5e3d2e: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8e266dbe0c4d: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b458929f5e32: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18b5271d8370: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c8fd4aa4a167: Waiting
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30ed102afb91: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30ed102afb91: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b549f31133a9: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b549f31133a9: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 96b0940ad243: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dda834d3e21: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dda834d3e21: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7a70755c25fd: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7a70755c25fd: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": e4398b373f2a: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": e4398b373f2a: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dabb89f8c5b: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dabb89f8c5b: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b549f31133a9: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 32ac7717845e: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 32ac7717845e: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b458929f5e32: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b458929f5e32: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c8fd4aa4a167: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c8fd4aa4a167: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 736730252417: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 736730252417: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eec16591c4df: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eec16591c4df: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30a0d07cf2e7: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30a0d07cf2e7: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c6586f5f3ccf: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8406cb5e3d2e: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8406cb5e3d2e: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dabb89f8c5b: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30ed102afb91: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8e266dbe0c4d: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8e266dbe0c4d: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8f156ea66812: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8f156ea66812: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ac99bb71327d: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ac99bb71327d: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": f9ec19047416: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": f9ec19047416: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af1979f43c07: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af1979f43c07: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c818fee6e8d1: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c818fee6e8d1: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 55f50f1a2a21: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 55f50f1a2a21: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": dd39fcf91fe0: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": dd39fcf91fe0: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 45c8a98c3666: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 45c8a98c3666: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": da84622e6225: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": da84622e6225: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ec94a62f24bc: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ec94a62f24bc: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 2edd6a48344d: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 2edd6a48344d: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7dda834d3e21: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af0a3a0e8048: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af0a3a0e8048: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 96b0940ad243: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ead1a8cccc75: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ead1a8cccc75: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18b5271d8370: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18b5271d8370: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 1f20ece84680: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 1f20ece84680: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18d74779e01f: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18d74779e01f: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 3564fec3a3b5: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eeec85843e2a: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 71578bdd9adf: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 71578bdd9adf: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 855245c2cd93: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 855245c2cd93: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 63de315705be: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 63de315705be: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c818fee6e8d1: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 7a70755c25fd: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": e4398b373f2a: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 32ac7717845e: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": cb0f96c4db66: Verifying Checksum
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": cb0f96c4db66: Download complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": cb0f96c4db66: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": b458929f5e32: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c8fd4aa4a167: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 736730252417: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eec16591c4df: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 30a0d07cf2e7: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": c6586f5f3ccf: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8406cb5e3d2e: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8e266dbe0c4d: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 8f156ea66812: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ac99bb71327d: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": f9ec19047416: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af1979f43c07: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": dd39fcf91fe0: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 55f50f1a2a21: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 45c8a98c3666: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": da84622e6225: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ec94a62f24bc: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 2edd6a48344d: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": af0a3a0e8048: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": ead1a8cccc75: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18b5271d8370: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 1f20ece84680: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 18d74779e01f: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 3564fec3a3b5: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": eeec85843e2a: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 71578bdd9adf: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 855245c2cd93: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 63de315705be: Pull complete
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Digest: sha256:658251af6214ca1c1798809a3ace16078f3f0bb16e306e7c6f9a90dab4b65188
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> 7aa7fb69a71d
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 2/7 : RUN apt-get update && apt-get install -y make autoconf automake libtool
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> Running in f84d446052f5
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [128 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Fetched 128 kB in 1s (126 kB/s)
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Reading package lists...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Reading package lists...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Building dependency tree...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Reading state information...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": make is already the newest version (4.2.1-1.2).
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": make set to manually installed.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": The following additional packages will be installed:
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":   file libltdl-dev libltdl7 libmagic-mgc libmagic1
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Suggested packages:
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc gfortran
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":   | fortran95-compiler gcj-jdk
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": The following NEW packages will be installed:
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":   autoconf automake file libltdl-dev libltdl7 libmagic-mgc libmagic1 libtool
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": 0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Need to get 1522 kB of archives.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": After this operation, 12.3 MB of additional disk space will be used.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic-mgc amd64 1:5.38-4 [218 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic1 amd64 1:5.38-4 [75.9 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 file amd64 1:5.38-4 [23.3 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:5 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:6 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [91mdebconf: delaying package configuration, since apt-utils is not installed
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [0mFetched 1522 kB in 1s (1369 kB/s)
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package libmagic-mgc.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17483 files and directories currently installed.)
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../0-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking libmagic-mgc (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package libmagic1:amd64.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../1-libmagic1_1%3a5.38-4_amd64.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package file.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../2-file_1%3a5.38-4_amd64.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking file (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package autoconf.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../3-autoconf_2.69-11.1_all.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking autoconf (2.69-11.1) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package automake.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../4-automake_1%3a1.16.1-4ubuntu6_all.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package libltdl7:amd64.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../5-libltdl7_2.4.6-14_amd64.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package libltdl-dev:amd64.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../6-libltdl-dev_2.4.6-14_amd64.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Selecting previously unselected package libtool.
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Preparing to unpack .../7-libtool_2.4.6-14_all.deb ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Unpacking libtool (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up libmagic-mgc (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up file (1:5.38-4) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up autoconf (2.69-11.1) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up libtool (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Setting up libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Processing triggers for libc-bin (2.31-0ubuntu9.18) ...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Removing intermediate container f84d446052f5
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> 52d5054b9510
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 3/7 : RUN git clone --depth 1 https://gitlab.xiph.org/xiph/ogg.git
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> Running in a284c03fbf32
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [91mCloning into 'ogg'...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [0mRemoving intermediate container a284c03fbf32
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> a0ae3aff9253
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 4/7 : RUN git clone --depth 1 https://gitlab.xiph.org/xiph/theora.git libtheora
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> Running in 2da07266ef0a
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [91mCloning into 'libtheora'...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [0mRemoving intermediate container 2da07266ef0a
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> 7d0e83250743
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 5/7 : RUN git clone --depth 1 https://github.com/tmatth/oss-fuzz-fuzzers.git
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> Running in 37a1948a2b96
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [91mCloning into 'oss-fuzz-fuzzers'...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [0mRemoving intermediate container 37a1948a2b96
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> dec851d9a8e6
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 6/7 : RUN git clone --depth 1 https://github.com/guidovranken/fuzzing-headers.git
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> Running in 67c12b9b695a
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [91mCloning into 'fuzzing-headers'...
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": [0mRemoving intermediate container 67c12b9b695a
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> 7f3df734fc68
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Step 7/7 : COPY build.sh $SRC/
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d":  ---> 39d28c8cb81b
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Successfully built 39d28c8cb81b
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Successfully tagged gcr.io/oss-fuzz/libtheora:latest
Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/libtheora:latest
Finished Step #1 - "build-d0053619-d657-41a0-b37b-4ab7f56fd35d"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/libtheora
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/filemzbdMN
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/fuzzing-headers/.git
Step #2 - "srcmap": + GIT_DIR=/src/fuzzing-headers
Step #2 - "srcmap": + cd /src/fuzzing-headers
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/guidovranken/fuzzing-headers.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=bbd75f2806d18009aeca0f3b8fdcc6e7a3929686
Step #2 - "srcmap": + jq_inplace /tmp/filemzbdMN '."/src/fuzzing-headers" = { type: "git", url: "https://github.com/guidovranken/fuzzing-headers.git", rev: "bbd75f2806d18009aeca0f3b8fdcc6e7a3929686" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/fileKbR129
Step #2 - "srcmap": + cat /tmp/filemzbdMN
Step #2 - "srcmap": + jq '."/src/fuzzing-headers" = { type: "git", url: "https://github.com/guidovranken/fuzzing-headers.git", rev: "bbd75f2806d18009aeca0f3b8fdcc6e7a3929686" }'
Step #2 - "srcmap": + mv /tmp/fileKbR129 /tmp/filemzbdMN
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/oss-fuzz-fuzzers/.git
Step #2 - "srcmap": + GIT_DIR=/src/oss-fuzz-fuzzers
Step #2 - "srcmap": + cd /src/oss-fuzz-fuzzers
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/tmatth/oss-fuzz-fuzzers.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=11034a802e9c63a4b0aa4012fd0d3a6d515a4b33
Step #2 - "srcmap": + jq_inplace /tmp/filemzbdMN '."/src/oss-fuzz-fuzzers" = { type: "git", url: "https://github.com/tmatth/oss-fuzz-fuzzers.git", rev: "11034a802e9c63a4b0aa4012fd0d3a6d515a4b33" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/fileovw52G
Step #2 - "srcmap": + cat /tmp/filemzbdMN
Step #2 - "srcmap": + jq '."/src/oss-fuzz-fuzzers" = { type: "git", url: "https://github.com/tmatth/oss-fuzz-fuzzers.git", rev: "11034a802e9c63a4b0aa4012fd0d3a6d515a4b33" }'
Step #2 - "srcmap": + mv /tmp/fileovw52G /tmp/filemzbdMN
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/libtheora/.git
Step #2 - "srcmap": + GIT_DIR=/src/libtheora
Step #2 - "srcmap": + cd /src/libtheora
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://gitlab.xiph.org/xiph/theora.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=23161c4a63fd9f9d09b9e972f95def2d56c777af
Step #2 - "srcmap": + jq_inplace /tmp/filemzbdMN '."/src/libtheora" = { type: "git", url: "https://gitlab.xiph.org/xiph/theora.git", rev: "23161c4a63fd9f9d09b9e972f95def2d56c777af" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/filenziU7g
Step #2 - "srcmap": + cat /tmp/filemzbdMN
Step #2 - "srcmap": + jq '."/src/libtheora" = { type: "git", url: "https://gitlab.xiph.org/xiph/theora.git", rev: "23161c4a63fd9f9d09b9e972f95def2d56c777af" }'
Step #2 - "srcmap": + mv /tmp/filenziU7g /tmp/filemzbdMN
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/ogg/.git
Step #2 - "srcmap": + GIT_DIR=/src/ogg
Step #2 - "srcmap": + cd /src/ogg
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://gitlab.xiph.org/xiph/ogg.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=0288fadac3ac62d453409dfc83e9c4ab617d2472
Step #2 - "srcmap": + jq_inplace /tmp/filemzbdMN '."/src/ogg" = { type: "git", url: "https://gitlab.xiph.org/xiph/ogg.git", rev: "0288fadac3ac62d453409dfc83e9c4ab617d2472" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/file1fn7SN
Step #2 - "srcmap": + cat /tmp/filemzbdMN
Step #2 - "srcmap": + jq '."/src/ogg" = { type: "git", url: "https://gitlab.xiph.org/xiph/ogg.git", rev: "0288fadac3ac62d453409dfc83e9c4ab617d2472" }'
Step #2 - "srcmap": + mv /tmp/file1fn7SN /tmp/filemzbdMN
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/filemzbdMN
Step #2 - "srcmap": + rm /tmp/filemzbdMN
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/fuzzing-headers": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/guidovranken/fuzzing-headers.git",
Step #2 - "srcmap":     "rev": "bbd75f2806d18009aeca0f3b8fdcc6e7a3929686"
Step #2 - "srcmap":   },
Step #2 - "srcmap":   "/src/oss-fuzz-fuzzers": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/tmatth/oss-fuzz-fuzzers.git",
Step #2 - "srcmap":     "rev": "11034a802e9c63a4b0aa4012fd0d3a6d515a4b33"
Step #2 - "srcmap":   },
Step #2 - "srcmap":   "/src/libtheora": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://gitlab.xiph.org/xiph/theora.git",
Step #2 - "srcmap":     "rev": "23161c4a63fd9f9d09b9e972f95def2d56c777af"
Step #2 - "srcmap":   },
Step #2 - "srcmap":   "/src/ogg": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://gitlab.xiph.org/xiph/ogg.git",
Step #2 - "srcmap":     "rev": "0288fadac3ac62d453409dfc83e9c4ab617d2472"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  = *sanitize=address* ]]
Step #3 - "compile-afl-address-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++ -DASAN'
Step #3 - "compile-afl-address-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++ -DASAN'
Step #3 - "compile-afl-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  = *sanitize=memory* ]]
Step #3 - "compile-afl-address-x86_64": + mkdir /src/libogg-install/
Step #3 - "compile-afl-address-x86_64": + cd /src/ogg
Step #3 - "compile-afl-address-x86_64": + ./autogen.sh
Step #3 - "compile-afl-address-x86_64": Updating build configuration files for libogg, please wait....
Step #3 - "compile-afl-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #3 - "compile-afl-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #3 - "compile-afl-address-x86_64": configure.ac:5: installing './compile'
Step #3 - "compile-afl-address-x86_64": configure.ac:5: installing './config.guess'
Step #3 - "compile-afl-address-x86_64": configure.ac:5: installing './config.sub'
Step #3 - "compile-afl-address-x86_64": configure.ac:9: installing './install-sh'
Step #3 - "compile-afl-address-x86_64": configure.ac:9: installing './missing'
Step #3 - "compile-afl-address-x86_64": src/Makefile.am: installing './depcomp'
Step #3 - "compile-afl-address-x86_64": parallel-tests: installing './test-driver'
Step #3 - "compile-afl-address-x86_64": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #3 - "compile-afl-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking how to print strings... printf
Step #3 - "compile-afl-address-x86_64": checking for gcc... /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether the C compiler works... yes
Step #3 - "compile-afl-address-x86_64": checking for C compiler default output file name... a.out
Step #3 - "compile-afl-address-x86_64": checking for suffix of executables... 
Step #3 - "compile-afl-address-x86_64": checking whether we are cross compiling... no
Step #3 - "compile-afl-address-x86_64": checking for suffix of object files... o
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... yes
Step #3 - "compile-afl-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #3 - "compile-afl-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #3 - "compile-afl-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #3 - "compile-afl-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast... /usr/bin/ld
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #3 - "compile-afl-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #3 - "compile-afl-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #3 - "compile-afl-address-x86_64": checking whether ln -s works... yes
Step #3 - "compile-afl-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #3 - "compile-afl-address-x86_64": checking for objdump... objdump
Step #3 - "compile-afl-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #3 - "compile-afl-address-x86_64": checking for dlltool... no
Step #3 - "compile-afl-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #3 - "compile-afl-address-x86_64": checking for ar... ar
Step #3 - "compile-afl-address-x86_64": checking for archiver @FILE support... @
Step #3 - "compile-afl-address-x86_64": checking for strip... strip
Step #3 - "compile-afl-address-x86_64": checking for ranlib... ranlib
Step #3 - "compile-afl-address-x86_64": checking for gawk... no
Step #3 - "compile-afl-address-x86_64": checking for mawk... mawk
Step #3 - "compile-afl-address-x86_64": checking command to parse /usr/bin/nm -B output from /src/aflplusplus/afl-clang-fast object... ok
Step #3 - "compile-afl-address-x86_64": checking for sysroot... no
Step #3 - "compile-afl-address-x86_64": checking for a working dd... /usr/bin/dd
Step #3 - "compile-afl-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #3 - "compile-afl-address-x86_64": checking for mt... no
Step #3 - "compile-afl-address-x86_64": checking if : is a manifest tool... no
Step #3 - "compile-afl-address-x86_64": checking how to run the C preprocessor... /src/aflplusplus/afl-clang-fast -E
Step #3 - "compile-afl-address-x86_64": checking for ANSI C header files... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/types.h... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/stat.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdlib.h... yes
Step #3 - "compile-afl-address-x86_64": checking for string.h... yes
Step #3 - "compile-afl-address-x86_64": checking for memory.h... yes
Step #3 - "compile-afl-address-x86_64": checking for strings.h... yes
Step #3 - "compile-afl-address-x86_64": checking for inttypes.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdint.h... yes
Step #3 - "compile-afl-address-x86_64": checking for unistd.h... yes
Step #3 - "compile-afl-address-x86_64": checking for dlfcn.h... yes
Step #3 - "compile-afl-address-x86_64": checking for objdir... .libs
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -fno-rtti -fno-exceptions... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to produce PIC... -fPIC -DPIC
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast PIC flag -fPIC -DPIC works... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast static flag -static works... no
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #3 - "compile-afl-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #3 - "compile-afl-address-x86_64": checking whether stripping libraries is possible... yes
Step #3 - "compile-afl-address-x86_64": checking if libtool supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking whether to build shared libraries... no
Step #3 - "compile-afl-address-x86_64": checking whether to build static libraries... yes
Step #3 - "compile-afl-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #3 - "compile-afl-address-x86_64": checking whether build environment is sane... yes
Step #3 - "compile-afl-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #3 - "compile-afl-address-x86_64": checking whether make sets $(MAKE)... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... gcc3
Step #3 - "compile-afl-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #3 - "compile-afl-address-x86_64": checking for gcc... (cached) /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... (cached) none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for inttypes.h... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for stdint.h... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for sys/types.h... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for an ANSI C-conforming const... yes
Step #3 - "compile-afl-address-x86_64": checking size of int16_t... 2
Step #3 - "compile-afl-address-x86_64": checking size of uint16_t... 2
Step #3 - "compile-afl-address-x86_64": checking size of u_int16_t... 2
Step #3 - "compile-afl-address-x86_64": checking size of int32_t... 4
Step #3 - "compile-afl-address-x86_64": checking size of uint32_t... 4
Step #3 - "compile-afl-address-x86_64": checking size of u_int32_t... 4
Step #3 - "compile-afl-address-x86_64": checking size of int64_t... 8
Step #3 - "compile-afl-address-x86_64": checking size of uint64_t... 8
Step #3 - "compile-afl-address-x86_64": checking size of short... 2
Step #3 - "compile-afl-address-x86_64": checking size of int... 4
Step #3 - "compile-afl-address-x86_64": checking size of long... 8
Step #3 - "compile-afl-address-x86_64": checking size of long long... 8
Step #3 - "compile-afl-address-x86_64": checking for working memcmp... yes
Step #3 - "compile-afl-address-x86_64": checking that generated files are newer than configure... done
Step #3 - "compile-afl-address-x86_64": configure: creating ./config.status
Step #3 - "compile-afl-address-x86_64": config.status: creating Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating src/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating doc/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating doc/libogg/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/ogg/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/ogg/config_types.h
Step #3 - "compile-afl-address-x86_64": config.status: creating libogg.spec
Step #3 - "compile-afl-address-x86_64": config.status: creating ogg.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating ogg-uninstalled.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating config.h
Step #3 - "compile-afl-address-x86_64": config.status: executing libtool commands
Step #3 - "compile-afl-address-x86_64": config.status: executing depfiles commands
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": make  all-recursive
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": Making all in src
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64": /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #3 - "compile-afl-address-x86_64": /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #3 - "compile-afl-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #3 - "compile-afl-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #3 - "compile-afl-address-x86_64": libtool: compile:  /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #3 - "compile-afl-address-x86_64": libtool: compile:  /src/aflplusplus/afl-clang-fast -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #3 - "compile-afl-address-x86_64": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #3 - "compile-afl-address-x86_64": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #3 - "compile-afl-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link /src/aflplusplus/afl-clang-fast  -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #3 - "compile-afl-address-x86_64": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #3 - "compile-afl-address-x86_64": libtool: link: ranlib .libs/libogg.a
Step #3 - "compile-afl-address-x86_64": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #3 - "compile-afl-address-x86_64": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #3 - "compile-afl-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link /src/aflplusplus/afl-clang-fast -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope    -o test_bitwise test_bitwise-bitwise.o  
Step #3 - "compile-afl-address-x86_64": libtool: link: /src/aflplusplus/afl-clang-fast -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -o test_bitwise test_bitwise-bitwise.o 
Step #3 - "compile-afl-address-x86_64": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #3 - "compile-afl-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link /src/aflplusplus/afl-clang-fast -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope    -o test_framing test_framing-framing.o  
Step #3 - "compile-afl-address-x86_64": libtool: link: /src/aflplusplus/afl-clang-fast -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -o test_framing test_framing-framing.o 
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64": Making all in include
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": Making all in ogg
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": Making all in doc
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": Making all in libogg
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": + make install
Step #3 - "compile-afl-address-x86_64": Making install in src
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #3 - "compile-afl-address-x86_64":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #3 - "compile-afl-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #3 - "compile-afl-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #3 - "compile-afl-address-x86_64": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #3 - "compile-afl-address-x86_64": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #3 - "compile-afl-address-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #3 - "compile-afl-address-x86_64": ----------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": Libraries have been installed in:
Step #3 - "compile-afl-address-x86_64":    /src/libogg-install/lib
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": If you ever happen to want to link against installed libraries
Step #3 - "compile-afl-address-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #3 - "compile-afl-address-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #3 - "compile-afl-address-x86_64": flag during linking and do at least one of the following:
Step #3 - "compile-afl-address-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #3 - "compile-afl-address-x86_64":      during execution
Step #3 - "compile-afl-address-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #3 - "compile-afl-address-x86_64":      during linking
Step #3 - "compile-afl-address-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #3 - "compile-afl-address-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": See any operating system documentation about shared libraries for
Step #3 - "compile-afl-address-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #3 - "compile-afl-address-x86_64": ----------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": make[2]: Nothing to be done for 'install-data-am'.
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/ogg/src'
Step #3 - "compile-afl-address-x86_64": Making install in include
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": Making install in ogg
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'install-data-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/ogg/include'
Step #3 - "compile-afl-address-x86_64": Making install in doc
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": Making install in libogg
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/ogg/doc'
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": make[2]: Nothing to be done for 'install-exec-am'.
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #3 - "compile-afl-address-x86_64":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #3 - "compile-afl-address-x86_64": + cd /src/fuzzing-headers/
Step #3 - "compile-afl-address-x86_64": + ./install.sh
Step #3 - "compile-afl-address-x86_64": + cd /src/libtheora/
Step #3 - "compile-afl-address-x86_64": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #3 - "compile-afl-address-x86_64": + ./autogen.sh
Step #3 - "compile-afl-address-x86_64": Updating build configuration files, please wait....
Step #3 - "compile-afl-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file './ltmain.sh'
Step #3 - "compile-afl-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file 'm4/libtool.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file 'm4/ltoptions.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file 'm4/ltsugar.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file 'm4/ltversion.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #3 - "compile-afl-address-x86_64": configure.ac:66: installing './compile'
Step #3 - "compile-afl-address-x86_64": configure.ac:9: installing './config.guess'
Step #3 - "compile-afl-address-x86_64": configure.ac:9: installing './config.sub'
Step #3 - "compile-afl-address-x86_64": configure.ac:12: installing './install-sh'
Step #3 - "compile-afl-address-x86_64": configure.ac:12: installing './missing'
Step #3 - "compile-afl-address-x86_64": doc/spec/Makefile.am: installing './depcomp'
Step #3 - "compile-afl-address-x86_64": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #3 - "compile-afl-address-x86_64": parallel-tests: installing './test-driver'
Step #3 - "compile-afl-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  = *sanitize=memory* ]]
Step #3 - "compile-afl-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  = *-m32* ]]
Step #3 - "compile-afl-address-x86_64": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #3 - "compile-afl-address-x86_64": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --enable-static --disable-shared
Step #3 - "compile-afl-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #3 - "compile-afl-address-x86_64": checking whether build environment is sane... yes
Step #3 - "compile-afl-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #3 - "compile-afl-address-x86_64": checking for gawk... no
Step #3 - "compile-afl-address-x86_64": checking for mawk... mawk
Step #3 - "compile-afl-address-x86_64": checking whether make sets $(MAKE)... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... yes
Step #3 - "compile-afl-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #3 - "compile-afl-address-x86_64": checking for gcc... /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether the C compiler works... yes
Step #3 - "compile-afl-address-x86_64": checking for C compiler default output file name... a.out
Step #3 - "compile-afl-address-x86_64": checking for suffix of executables... 
Step #3 - "compile-afl-address-x86_64": checking whether we are cross compiling... no
Step #3 - "compile-afl-address-x86_64": checking for suffix of object files... o
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... gcc3
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... gcc3
Step #3 - "compile-afl-address-x86_64": checking for gcc... (cached) /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... (cached) none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... (cached) gcc3
Step #3 - "compile-afl-address-x86_64": checking how to run the C preprocessor... /src/aflplusplus/afl-clang-fast -E
Step #3 - "compile-afl-address-x86_64": checking how to print strings... printf
Step #3 - "compile-afl-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #3 - "compile-afl-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #3 - "compile-afl-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #3 - "compile-afl-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast... /usr/bin/ld
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #3 - "compile-afl-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #3 - "compile-afl-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #3 - "compile-afl-address-x86_64": checking whether ln -s works... yes
Step #3 - "compile-afl-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #3 - "compile-afl-address-x86_64": checking for objdump... objdump
Step #3 - "compile-afl-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #3 - "compile-afl-address-x86_64": checking for dlltool... no
Step #3 - "compile-afl-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #3 - "compile-afl-address-x86_64": checking for ar... ar
Step #3 - "compile-afl-address-x86_64": checking for archiver @FILE support... @
Step #3 - "compile-afl-address-x86_64": checking for strip... strip
Step #3 - "compile-afl-address-x86_64": checking for ranlib... ranlib
Step #3 - "compile-afl-address-x86_64": checking command to parse /usr/bin/nm -B output from /src/aflplusplus/afl-clang-fast object... ok
Step #3 - "compile-afl-address-x86_64": checking for sysroot... no
Step #3 - "compile-afl-address-x86_64": checking for a working dd... /usr/bin/dd
Step #3 - "compile-afl-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #3 - "compile-afl-address-x86_64": checking for mt... no
Step #3 - "compile-afl-address-x86_64": checking if : is a manifest tool... no
Step #3 - "compile-afl-address-x86_64": checking for ANSI C header files... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/types.h... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/stat.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdlib.h... yes
Step #3 - "compile-afl-address-x86_64": checking for string.h... yes
Step #3 - "compile-afl-address-x86_64": checking for memory.h... yes
Step #3 - "compile-afl-address-x86_64": checking for strings.h... yes
Step #3 - "compile-afl-address-x86_64": checking for inttypes.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdint.h... yes
Step #3 - "compile-afl-address-x86_64": checking for unistd.h... yes
Step #3 - "compile-afl-address-x86_64": checking for dlfcn.h... yes
Step #3 - "compile-afl-address-x86_64": checking for objdir... .libs
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -fno-rtti -fno-exceptions... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to produce PIC... -fPIC -DPIC
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast PIC flag -fPIC -DPIC works... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast static flag -static works... no
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #3 - "compile-afl-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #3 - "compile-afl-address-x86_64": checking whether stripping libraries is possible... yes
Step #3 - "compile-afl-address-x86_64": checking if libtool supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking whether to build shared libraries... no
Step #3 - "compile-afl-address-x86_64": checking whether to build static libraries... yes
Step #3 - "compile-afl-address-x86_64": checking for doxygen... false
Step #3 - "compile-afl-address-x86_64": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #3 - "compile-afl-address-x86_64": checking for pdflatex... no
Step #3 - "compile-afl-address-x86_64": checking for bibtex... no
Step #3 - "compile-afl-address-x86_64": checking for fig2dev... no
Step #3 - "compile-afl-address-x86_64": configure: Checking for packages in ./doc/spec/spec.tex...
Step #3 - "compile-afl-address-x86_64": configure: WARNING: *** Format Specification will not built.
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast... (cached) /usr/bin/ld
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking how to control symbol export... --version-script
Step #3 - "compile-afl-address-x86_64": checking for pkg-config... no
Step #3 - "compile-afl-address-x86_64": checking for Ogg... yes
Step #3 - "compile-afl-address-x86_64": checking for oggpackB_read... yes
Step #3 - "compile-afl-address-x86_64": checking for Vorbis... no
Step #3 - "compile-afl-address-x86_64": *** Could not run Vorbis test program, checking why...
Step #3 - "compile-afl-address-x86_64": *** The test program failed to compile or link. See the file config.log for the
Step #3 - "compile-afl-address-x86_64": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #3 - "compile-afl-address-x86_64": *** or that you have moved Vorbis since it was installed.
Step #3 - "compile-afl-address-x86_64": checking sys/soundcard.h usability... yes
Step #3 - "compile-afl-address-x86_64": checking sys/soundcard.h presence... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/soundcard.h... yes
Step #3 - "compile-afl-address-x86_64": checking for TIFFReadRGBAImage in -ltiff... no
Step #3 - "compile-afl-address-x86_64": checking for clock_gettime... yes
Step #3 - "compile-afl-address-x86_64": checking for getopt_long... yes
Step #3 - "compile-afl-address-x86_64": checking that generated files are newer than configure... done
Step #3 - "compile-afl-address-x86_64": configure: creating ./config.status
Step #3 - "compile-afl-address-x86_64": config.status: creating Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating lib/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating lib/arm/armopts.s
Step #3 - "compile-afl-address-x86_64": config.status: creating include/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/theora/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating examples/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating doc/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating doc/Doxyfile
Step #3 - "compile-afl-address-x86_64": config.status: creating doc/spec/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating tests/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating m4/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating libtheora.spec
Step #3 - "compile-afl-address-x86_64": config.status: creating theora.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating theora-uninstalled.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating theoradec.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating theoradec-uninstalled.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating theoraenc.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating theoraenc-uninstalled.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating config.h
Step #3 - "compile-afl-address-x86_64": config.status: executing depfiles commands
Step #3 - "compile-afl-address-x86_64": config.status: executing libtool commands
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": ------------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64":   libtheora 1.2.0:  Automatic configuration OK.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":   General configuration:
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":     Encoding support: ........... no
Step #3 - "compile-afl-address-x86_64":     Assembly optimization: ...... 64 bit x86
Step #3 - "compile-afl-address-x86_64":     Debugging telemetry: ........ no
Step #3 - "compile-afl-address-x86_64":     Abort on huge files: ........ no
Step #3 - "compile-afl-address-x86_64":     Build example code: ......... no
Step #3 - "compile-afl-address-x86_64":     API Documentation: .......... no
Step #3 - "compile-afl-address-x86_64":     Format Documentation: ....... no
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":   Installation paths:
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":     libtheora: ................... /usr/local/lib
Step #3 - "compile-afl-address-x86_64":     C header files: .............. /usr/local/include/theora
Step #3 - "compile-afl-address-x86_64":     Documentation: ............... /usr/local/share/doc/libtheora
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":   Building:
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":     Type 'make' to compile libtheora.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":     Type 'make install' to install libtheora.
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":   Example programs will be built but not installed.
Step #3 - "compile-afl-address-x86_64": ------------------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": make  all-recursive
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/src/libtheora'
Step #3 - "compile-afl-address-x86_64": Making all in lib
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora/lib'
Step #3 - "compile-afl-address-x86_64": make  all-am
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/libtheora/lib'
Step #3 - "compile-afl-address-x86_64":   CC       apiwrapper.lo
Step #3 - "compile-afl-address-x86_64":   CC       bitpack.lo
Step #3 - "compile-afl-address-x86_64":   CC       decapiwrapper.lo
Step #3 - "compile-afl-address-x86_64":   CC       decinfo.lo
Step #3 - "compile-afl-address-x86_64":   CC       decode.lo
Step #3 - "compile-afl-address-x86_64":   CC       dequant.lo
Step #3 - "compile-afl-address-x86_64":   CC       fragment.lo
Step #3 - "compile-afl-address-x86_64":   CC       huffdec.lo
Step #3 - "compile-afl-address-x86_64":   CC       idct.lo
Step #3 - "compile-afl-address-x86_64":   CC       info.lo
Step #3 - "compile-afl-address-x86_64":   CC       internal.lo
Step #3 - "compile-afl-address-x86_64":   CC       quant.lo
Step #3 - "compile-afl-address-x86_64":   CC       state.lo
Step #3 - "compile-afl-address-x86_64":   CC       encoder_disabled.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/x86cpu.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/mmxfrag.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/mmxidct.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/mmxstate.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/sse2idct.lo
Step #3 - "compile-afl-address-x86_64":   CC       x86/x86state.lo
Step #3 - "compile-afl-address-x86_64":   CCLD     libtheoraenc.la
Step #3 - "compile-afl-address-x86_64":   CCLD     libtheoradec.la
Step #3 - "compile-afl-address-x86_64":   CCLD     libtheora.la
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/libtheora/lib'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora/lib'
Step #3 - "compile-afl-address-x86_64": Making all in include
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora/include'
Step #3 - "compile-afl-address-x86_64": Making all in theora
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/libtheora/include/theora'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/libtheora/include'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/libtheora/include'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora/include'
Step #3 - "compile-afl-address-x86_64": Making all in doc
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora/doc'
Step #3 - "compile-afl-address-x86_64": Making all in spec
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #3 - "compile-afl-address-x86_64":   CC       vp3huff.o
Step #3 - "compile-afl-address-x86_64":   CCLD     vp3huff
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/src/libtheora/doc'
Step #3 - "compile-afl-address-x86_64": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #3 - "compile-afl-address-x86_64": *** Warning: Doxygen not found; documentation will not be built.
Step #3 - "compile-afl-address-x86_64": touch doxygen-build.stamp
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora/doc'
Step #3 - "compile-afl-address-x86_64": Making all in tests
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora/tests'
Step #3 - "compile-afl-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora/tests'
Step #3 - "compile-afl-address-x86_64": Making all in m4
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora/m4'
Step #3 - "compile-afl-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora/m4'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/src/libtheora'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/src/libtheora'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/src/libtheora'
Step #3 - "compile-afl-address-x86_64": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #3 - "compile-afl-address-x86_64": + /src/aflplusplus/afl-clang-fast++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -stdlib=libc++ -DASAN -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a /usr/lib/libFuzzingEngine.a -o /workspace/out/afl-address-x86_64/fuzzer-decoder
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": 7dabb89f8c5b: Already exists
Step #4 - "build-check-afl-address-x86_64": 30ed102afb91: Already exists
Step #4 - "build-check-afl-address-x86_64": 95f66ceeff7a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6cad64eac1d0: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 32597dbf9630: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5b163a9e51c1: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 0f175b020dba: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 830fca8cf969: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b5d937288ac3: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": cd205e1b2ff4: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": ab0307203632: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 275fdda089a9: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 7c639859d587: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 35eff6a9f511: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c0dc70725ddd: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 18cc010c91d6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": f4e3c15d0a00: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": ea7eb630719a: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 22e7c09bb973: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 767d12c2e5bc: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 7761d623ace8: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": d3d9333b9f50: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b6f206cf0d9e: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 67a9aef1ab52: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 90c2c0741e91: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 275fdda089a9: Waiting
Step #4 - "build-check-afl-address-x86_64": 7c639859d587: Waiting
Step #4 - "build-check-afl-address-x86_64": 35eff6a9f511: Waiting
Step #4 - "build-check-afl-address-x86_64": c0dc70725ddd: Waiting
Step #4 - "build-check-afl-address-x86_64": 18cc010c91d6: Waiting
Step #4 - "build-check-afl-address-x86_64": f4e3c15d0a00: Waiting
Step #4 - "build-check-afl-address-x86_64": ea7eb630719a: Waiting
Step #4 - "build-check-afl-address-x86_64": 22e7c09bb973: Waiting
Step #4 - "build-check-afl-address-x86_64": 767d12c2e5bc: Waiting
Step #4 - "build-check-afl-address-x86_64": 7761d623ace8: Waiting
Step #4 - "build-check-afl-address-x86_64": cd205e1b2ff4: Waiting
Step #4 - "build-check-afl-address-x86_64": 67a9aef1ab52: Waiting
Step #4 - "build-check-afl-address-x86_64": d3d9333b9f50: Waiting
Step #4 - "build-check-afl-address-x86_64": 90c2c0741e91: Waiting
Step #4 - "build-check-afl-address-x86_64": b6f206cf0d9e: Waiting
Step #4 - "build-check-afl-address-x86_64": 830fca8cf969: Waiting
Step #4 - "build-check-afl-address-x86_64": ab0307203632: Waiting
Step #4 - "build-check-afl-address-x86_64": 5b163a9e51c1: Waiting
Step #4 - "build-check-afl-address-x86_64": 0f175b020dba: Waiting
Step #4 - "build-check-afl-address-x86_64": b5d937288ac3: Waiting
Step #4 - "build-check-afl-address-x86_64": 32597dbf9630: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 32597dbf9630: Download complete
Step #4 - "build-check-afl-address-x86_64": 95f66ceeff7a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 95f66ceeff7a: Download complete
Step #4 - "build-check-afl-address-x86_64": 6cad64eac1d0: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6cad64eac1d0: Download complete
Step #4 - "build-check-afl-address-x86_64": 0f175b020dba: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 0f175b020dba: Download complete
Step #4 - "build-check-afl-address-x86_64": 95f66ceeff7a: Pull complete
Step #4 - "build-check-afl-address-x86_64": b5d937288ac3: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": b5d937288ac3: Download complete
Step #4 - "build-check-afl-address-x86_64": cd205e1b2ff4: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": cd205e1b2ff4: Download complete
Step #4 - "build-check-afl-address-x86_64": 6cad64eac1d0: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5b163a9e51c1: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 5b163a9e51c1: Download complete
Step #4 - "build-check-afl-address-x86_64": 32597dbf9630: Pull complete
Step #4 - "build-check-afl-address-x86_64": ab0307203632: Download complete
Step #4 - "build-check-afl-address-x86_64": 830fca8cf969: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 830fca8cf969: Download complete
Step #4 - "build-check-afl-address-x86_64": 5b163a9e51c1: Pull complete
Step #4 - "build-check-afl-address-x86_64": 35eff6a9f511: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 35eff6a9f511: Download complete
Step #4 - "build-check-afl-address-x86_64": 7c639859d587: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 7c639859d587: Download complete
Step #4 - "build-check-afl-address-x86_64": 0f175b020dba: Pull complete
Step #4 - "build-check-afl-address-x86_64": c0dc70725ddd: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": c0dc70725ddd: Download complete
Step #4 - "build-check-afl-address-x86_64": f4e3c15d0a00: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": f4e3c15d0a00: Download complete
Step #4 - "build-check-afl-address-x86_64": 275fdda089a9: Download complete
Step #4 - "build-check-afl-address-x86_64": 22e7c09bb973: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 22e7c09bb973: Download complete
Step #4 - "build-check-afl-address-x86_64": 767d12c2e5bc: Download complete
Step #4 - "build-check-afl-address-x86_64": 18cc010c91d6: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 18cc010c91d6: Download complete
Step #4 - "build-check-afl-address-x86_64": d3d9333b9f50: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": d3d9333b9f50: Download complete
Step #4 - "build-check-afl-address-x86_64": 7761d623ace8: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 7761d623ace8: Download complete
Step #4 - "build-check-afl-address-x86_64": 67a9aef1ab52: Download complete
Step #4 - "build-check-afl-address-x86_64": ea7eb630719a: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": ea7eb630719a: Download complete
Step #4 - "build-check-afl-address-x86_64": 90c2c0741e91: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 90c2c0741e91: Download complete
Step #4 - "build-check-afl-address-x86_64": b6f206cf0d9e: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": b6f206cf0d9e: Download complete
Step #4 - "build-check-afl-address-x86_64": 830fca8cf969: Pull complete
Step #4 - "build-check-afl-address-x86_64": b5d937288ac3: Pull complete
Step #4 - "build-check-afl-address-x86_64": cd205e1b2ff4: Pull complete
Step #4 - "build-check-afl-address-x86_64": ab0307203632: Pull complete
Step #4 - "build-check-afl-address-x86_64": 275fdda089a9: Pull complete
Step #4 - "build-check-afl-address-x86_64": 7c639859d587: Pull complete
Step #4 - "build-check-afl-address-x86_64": 35eff6a9f511: Pull complete
Step #4 - "build-check-afl-address-x86_64": c0dc70725ddd: Pull complete
Step #4 - "build-check-afl-address-x86_64": 18cc010c91d6: Pull complete
Step #4 - "build-check-afl-address-x86_64": f4e3c15d0a00: Pull complete
Step #4 - "build-check-afl-address-x86_64": ea7eb630719a: Pull complete
Step #4 - "build-check-afl-address-x86_64": 22e7c09bb973: Pull complete
Step #4 - "build-check-afl-address-x86_64": 767d12c2e5bc: Pull complete
Step #4 - "build-check-afl-address-x86_64": 7761d623ace8: Pull complete
Step #4 - "build-check-afl-address-x86_64": d3d9333b9f50: Pull complete
Step #4 - "build-check-afl-address-x86_64": b6f206cf0d9e: Pull complete
Step #4 - "build-check-afl-address-x86_64": 67a9aef1ab52: Pull complete
Step #4 - "build-check-afl-address-x86_64": 90c2c0741e91: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:3bbe7a612c897f730d62a6f6802f1aacf7cf55b3278bc5c130ed6558517cdec6
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmphaxkl6f0/fuzzer-decoder
Finished Step #4 - "build-check-afl-address-x86_64"
Starting Step #5
Step #5: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #5
Starting Step #6
Step #6: Already have image: gcr.io/oss-fuzz/libtheora
Step #6:   adding: SanitizerCoverageLTO.so (deflated 69%)
Step #6:   adding: SanitizerCoveragePCGUARD.so (deflated 70%)
Step #6:   adding: afl-addseeds (deflated 57%)
Step #6:   adding: afl-analyze (deflated 55%)
Step #6:   adding: afl-c++ (deflated 57%)
Step #6:   adding: afl-c++.8 (deflated 55%)
Step #6:   adding: afl-cc (deflated 57%)
Step #6:   adding: afl-cc.8 (deflated 55%)
Step #6:   adding: afl-clang (deflated 57%)
Step #6:   adding: afl-clang++ (deflated 57%)
Step #6:   adding: afl-clang-fast (deflated 57%)
Step #6:   adding: afl-clang-fast++ (deflated 57%)
Step #6:   adding: afl-clang-fast++.8 (deflated 55%)
Step #6:   adding: afl-clang-fast.8 (deflated 55%)
Step #6:   adding: afl-clang-lto (deflated 57%)
Step #6:   adding: afl-clang-lto++ (deflated 57%)
Step #6:   adding: afl-clang-lto++.8 (deflated 55%)
Step #6:   adding: afl-clang-lto.8 (deflated 55%)
Step #6:   adding: afl-cmin (deflated 70%)
Step #6:   adding: afl-cmin.bash (deflated 65%)
Step #6:   adding: afl-cmin.py (deflated 71%)
Step #6:   adding: afl-compiler-rt-32.o (deflated 54%)
Step #6:   adding: afl-compiler-rt-64.o (deflated 67%)
Step #6:   adding: afl-compiler-rt.o (deflated 67%)
Step #6:   adding: afl-fuzz (deflated 55%)
Step #6:   adding: afl-g++ (deflated 57%)
Step #6:   adding: afl-gcc (deflated 57%)
Step #6:   adding: afl-gotcpu (deflated 62%)
Step #6:   adding: afl-ld-lto (deflated 62%)
Step #6:   adding: afl-llvm-dict2file.so (deflated 69%)
Step #6:   adding: afl-llvm-lto-instrumentlist.so (deflated 71%)
Step #6:   adding: afl-llvm-pass.so (deflated 69%)
Step #6:   adding: afl-llvm-rt-lto-32.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto-64.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto.o (deflated 20%)
Step #6:   adding: afl-lto (deflated 57%)
Step #6:   adding: afl-lto++ (deflated 57%)
Step #6:   adding: afl-lto++.8 (deflated 55%)
Step #6:   adding: afl-lto.8 (deflated 55%)
Step #6:   adding: afl-persistent-config (deflated 59%)
Step #6:   adding: afl-plot (deflated 65%)
Step #6:   adding: afl-showmap (deflated 55%)
Step #6:   adding: afl-system-config (deflated 63%)
Step #6:   adding: afl-tmin (deflated 55%)
Step #6:   adding: afl-whatsup (deflated 69%)
Step #6:   adding: afl-wine-trace (deflated 70%)
Step #6:   adding: afl_options.txt (deflated 20%)
Step #6:   adding: cmplog-instructions-pass.so (deflated 71%)
Step #6:   adding: cmplog-routines-pass.so (deflated 70%)
Step #6:   adding: cmplog-switches-pass.so (deflated 70%)
Step #6:   adding: compare-transform-pass.so (deflated 69%)
Step #6:   adding: dynamic_list.txt (deflated 76%)
Step #6:   adding: fuzzer-decoder (deflated 65%)
Step #6:   adding: injection-pass.so (deflated 70%)
Step #6:   adding: libAFLDriver.a (deflated 64%)
Step #6:   adding: libAFLQemuDriver.a (deflated 65%)
Step #6:   adding: llvm-symbolizer (deflated 65%)
Step #6:   adding: split-compares-pass.so (deflated 69%)
Step #6:   adding: split-switches-pass.so (deflated 70%)
Finished Step #6
Starting Step #7
Step #7: Pulling image: gcr.io/oss-fuzz-base/uploader
Step #7: Using default tag: latest
Step #7: latest: Pulling from oss-fuzz-base/uploader
Step #7: c62795f78da9: Pulling fs layer
Step #7: d4fceeeb758e: Pulling fs layer
Step #7: 5c9125a401ae: Pulling fs layer
Step #7: 0062f774e994: Pulling fs layer
Step #7: 6b33fd031fac: Pulling fs layer
Step #7: 7eb39101e508: Pulling fs layer
Step #7: 89257482f398: Pulling fs layer
Step #7: 0062f774e994: Waiting
Step #7: 6b33fd031fac: Waiting
Step #7: 7eb39101e508: Waiting
Step #7: 89257482f398: Waiting
Step #7: d4fceeeb758e: Verifying Checksum
Step #7: d4fceeeb758e: Download complete
Step #7: 5c9125a401ae: Verifying Checksum
Step #7: 5c9125a401ae: Download complete
Step #7: 0062f774e994: Verifying Checksum
Step #7: 0062f774e994: Download complete
Step #7: 6b33fd031fac: Verifying Checksum
Step #7: 6b33fd031fac: Download complete
Step #7: 89257482f398: Verifying Checksum
Step #7: 89257482f398: Download complete
Step #7: c62795f78da9: Verifying Checksum
Step #7: c62795f78da9: Download complete
Step #7: 7eb39101e508: Verifying Checksum
Step #7: 7eb39101e508: Download complete
Step #7: c62795f78da9: Pull complete
Step #7: d4fceeeb758e: Pull complete
Step #7: 5c9125a401ae: Pull complete
Step #7: 0062f774e994: Pull complete
Step #7: 6b33fd031fac: Pull complete
Step #7: 7eb39101e508: Pull complete
Step #7: 89257482f398: Pull complete
Step #7: Digest: sha256:5717ba63d13b5515063e2a6ccad09fb5bf32a86c8e0798a363d81c2be522e411
Step #7: Status: Downloaded newer image for gcr.io/oss-fuzz-base/uploader:latest
Step #7: gcr.io/oss-fuzz-base/uploader:latest
Step #7:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #7:                                  Dload  Upload   Total   Spent    Left  Speed
Step #7:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3306 --:--:-- --:--:-- --:--:--  3309
Finished Step #7
Starting Step #8
Step #8: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #8:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #8:                                  Dload  Upload   Total   Spent    Left  Speed
Step #8:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 9280k    0     0  100 9280k      0  36.6M --:--:-- --:--:-- --:--:-- 36.6M
Finished Step #8
Starting Step #9
Step #9: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #9:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #9:                                  Dload  Upload   Total   Spent    Left  Speed
Step #9:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     62 --:--:-- --:--:-- --:--:--    62
Finished Step #9
Starting Step #10
Step #10: Already have image (with digest): gcr.io/cloud-builders/curl
Step #10:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #10:                                  Dload  Upload   Total   Spent    Left  Speed
Step #10:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    186 --:--:-- --:--:-- --:--:--   187
Finished Step #10
Starting Step #11
Step #11: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #11
Starting Step #12 - "compile-honggfuzz-address-x86_64"
Step #12 - "compile-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": vm.mmap_rnd_bits = 28
Step #12 - "compile-honggfuzz-address-x86_64": Skipping compilation; using precompiled honggfuzz
Step #12 - "compile-honggfuzz-address-x86_64":  done.
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": CC=clang
Step #12 - "compile-honggfuzz-address-x86_64": CXX=clang++
Step #12 - "compile-honggfuzz-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp
Step #12 - "compile-honggfuzz-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++
Step #12 - "compile-honggfuzz-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp = *sanitize=address* ]]
Step #12 - "compile-honggfuzz-address-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -DASAN'
Step #12 - "compile-honggfuzz-address-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -DASAN'
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp = *sanitize=memory* ]]
Step #12 - "compile-honggfuzz-address-x86_64": + mkdir /src/libogg-install/
Step #12 - "compile-honggfuzz-address-x86_64": + cd /src/ogg
Step #12 - "compile-honggfuzz-address-x86_64": + ./autogen.sh
Step #12 - "compile-honggfuzz-address-x86_64": Updating build configuration files for libogg, please wait....
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:5: installing './compile'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:5: installing './config.guess'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:5: installing './config.sub'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:9: installing './install-sh'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:9: installing './missing'
Step #12 - "compile-honggfuzz-address-x86_64": src/Makefile.am: installing './depcomp'
Step #12 - "compile-honggfuzz-address-x86_64": parallel-tests: installing './test-driver'
Step #12 - "compile-honggfuzz-address-x86_64": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #12 - "compile-honggfuzz-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking how to print strings... printf
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the C compiler works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for C compiler default output file name... a.out
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of executables... 
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are cross compiling... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of object files... o
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #12 - "compile-honggfuzz-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #12 - "compile-honggfuzz-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #12 - "compile-honggfuzz-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #12 - "compile-honggfuzz-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #12 - "compile-honggfuzz-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #12 - "compile-honggfuzz-address-x86_64": checking whether ln -s works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdump... objdump
Step #12 - "compile-honggfuzz-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlltool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #12 - "compile-honggfuzz-address-x86_64": checking for ar... ar
Step #12 - "compile-honggfuzz-address-x86_64": checking for archiver @FILE support... @
Step #12 - "compile-honggfuzz-address-x86_64": checking for strip... strip
Step #12 - "compile-honggfuzz-address-x86_64": checking for ranlib... ranlib
Step #12 - "compile-honggfuzz-address-x86_64": checking for gawk... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for mawk... mawk
Step #12 - "compile-honggfuzz-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #12 - "compile-honggfuzz-address-x86_64": checking for sysroot... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for a working dd... /usr/bin/dd
Step #12 - "compile-honggfuzz-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #12 - "compile-honggfuzz-address-x86_64": checking for mt... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if : is a manifest tool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking how to run the C preprocessor... clang -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for ANSI C header files... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/types.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/stat.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdlib.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for string.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for memory.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for strings.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for inttypes.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdint.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for unistd.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlfcn.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdir... .libs
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang static flag -static works... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #12 - "compile-honggfuzz-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #12 - "compile-honggfuzz-address-x86_64": checking whether stripping libraries is possible... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if libtool supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build shared libraries... no
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build static libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #12 - "compile-honggfuzz-address-x86_64": checking whether build environment is sane... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make sets $(MAKE)... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports nested variables... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... (cached) clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for inttypes.h... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdint.h... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/types.h... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for an ANSI C-conforming const... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking size of int16_t... 2
Step #12 - "compile-honggfuzz-address-x86_64": checking size of uint16_t... 2
Step #12 - "compile-honggfuzz-address-x86_64": checking size of u_int16_t... 2
Step #12 - "compile-honggfuzz-address-x86_64": checking size of int32_t... 4
Step #12 - "compile-honggfuzz-address-x86_64": checking size of uint32_t... 4
Step #12 - "compile-honggfuzz-address-x86_64": checking size of u_int32_t... 4
Step #12 - "compile-honggfuzz-address-x86_64": checking size of int64_t... 8
Step #12 - "compile-honggfuzz-address-x86_64": checking size of uint64_t... 8
Step #12 - "compile-honggfuzz-address-x86_64": checking size of short... 2
Step #12 - "compile-honggfuzz-address-x86_64": checking size of int... 4
Step #12 - "compile-honggfuzz-address-x86_64": checking size of long... 8
Step #12 - "compile-honggfuzz-address-x86_64": checking size of long long... 8
Step #12 - "compile-honggfuzz-address-x86_64": checking for working memcmp... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking that generated files are newer than configure... done
Step #12 - "compile-honggfuzz-address-x86_64": configure: creating ./config.status
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating src/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating doc/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating doc/libogg/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/ogg/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/ogg/config_types.h
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating libogg.spec
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating ogg.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating ogg-uninstalled.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating config.h
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing libtool commands
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing depfiles commands
Step #12 - "compile-honggfuzz-address-x86_64": ++ nproc
Step #12 - "compile-honggfuzz-address-x86_64": + make -j32
Step #12 - "compile-honggfuzz-address-x86_64": make  all-recursive
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in src
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #12 - "compile-honggfuzz-address-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #12 - "compile-honggfuzz-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #12 - "compile-honggfuzz-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #12 - "compile-honggfuzz-address-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #12 - "compile-honggfuzz-address-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #12 - "compile-honggfuzz-address-x86_64": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #12 - "compile-honggfuzz-address-x86_64": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #12 - "compile-honggfuzz-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #12 - "compile-honggfuzz-address-x86_64": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #12 - "compile-honggfuzz-address-x86_64": libtool: link: ranlib .libs/libogg.a
Step #12 - "compile-honggfuzz-address-x86_64": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #12 - "compile-honggfuzz-address-x86_64": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #12 - "compile-honggfuzz-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp   -o test_bitwise test_bitwise-bitwise.o  
Step #12 - "compile-honggfuzz-address-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -o test_bitwise test_bitwise-bitwise.o 
Step #12 - "compile-honggfuzz-address-x86_64": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #12 - "compile-honggfuzz-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp   -o test_framing test_framing-framing.o  
Step #12 - "compile-honggfuzz-address-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -o test_framing test_framing-framing.o 
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in include
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in ogg
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in doc
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in libogg
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": + make install
Step #12 - "compile-honggfuzz-address-x86_64": Making install in src
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #12 - "compile-honggfuzz-address-x86_64":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #12 - "compile-honggfuzz-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #12 - "compile-honggfuzz-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #12 - "compile-honggfuzz-address-x86_64": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #12 - "compile-honggfuzz-address-x86_64": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #12 - "compile-honggfuzz-address-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #12 - "compile-honggfuzz-address-x86_64": ----------------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": Libraries have been installed in:
Step #12 - "compile-honggfuzz-address-x86_64":    /src/libogg-install/lib
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": If you ever happen to want to link against installed libraries
Step #12 - "compile-honggfuzz-address-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #12 - "compile-honggfuzz-address-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #12 - "compile-honggfuzz-address-x86_64": flag during linking and do at least one of the following:
Step #12 - "compile-honggfuzz-address-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #12 - "compile-honggfuzz-address-x86_64":      during execution
Step #12 - "compile-honggfuzz-address-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #12 - "compile-honggfuzz-address-x86_64":      during linking
Step #12 - "compile-honggfuzz-address-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #12 - "compile-honggfuzz-address-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": See any operating system documentation about shared libraries for
Step #12 - "compile-honggfuzz-address-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #12 - "compile-honggfuzz-address-x86_64": ----------------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Nothing to be done for 'install-data-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/ogg/src'
Step #12 - "compile-honggfuzz-address-x86_64": Making install in include
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making install in ogg
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'install-data-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/ogg/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making install in doc
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": Making install in libogg
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/ogg/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Nothing to be done for 'install-exec-am'.
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #12 - "compile-honggfuzz-address-x86_64":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #12 - "compile-honggfuzz-address-x86_64": + cd /src/fuzzing-headers/
Step #12 - "compile-honggfuzz-address-x86_64": + ./install.sh
Step #12 - "compile-honggfuzz-address-x86_64": + cd /src/libtheora/
Step #12 - "compile-honggfuzz-address-x86_64": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #12 - "compile-honggfuzz-address-x86_64": + ./autogen.sh
Step #12 - "compile-honggfuzz-address-x86_64": Updating build configuration files, please wait....
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file './ltmain.sh'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file 'm4/libtool.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file 'm4/ltoptions.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file 'm4/ltsugar.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file 'm4/ltversion.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:66: installing './compile'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:9: installing './config.guess'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:9: installing './config.sub'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:12: installing './install-sh'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:12: installing './missing'
Step #12 - "compile-honggfuzz-address-x86_64": doc/spec/Makefile.am: installing './depcomp'
Step #12 - "compile-honggfuzz-address-x86_64": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #12 - "compile-honggfuzz-address-x86_64": parallel-tests: installing './test-driver'
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp = *sanitize=memory* ]]
Step #12 - "compile-honggfuzz-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp = *-m32* ]]
Step #12 - "compile-honggfuzz-address-x86_64": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #12 - "compile-honggfuzz-address-x86_64": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --enable-static --disable-shared
Step #12 - "compile-honggfuzz-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #12 - "compile-honggfuzz-address-x86_64": checking whether build environment is sane... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #12 - "compile-honggfuzz-address-x86_64": checking for gawk... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for mawk... mawk
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make sets $(MAKE)... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports nested variables... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the C compiler works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for C compiler default output file name... a.out
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of executables... 
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are cross compiling... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of object files... o
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... (cached) clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... (cached) gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking how to run the C preprocessor... clang -E
Step #12 - "compile-honggfuzz-address-x86_64": checking how to print strings... printf
Step #12 - "compile-honggfuzz-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #12 - "compile-honggfuzz-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #12 - "compile-honggfuzz-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #12 - "compile-honggfuzz-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #12 - "compile-honggfuzz-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #12 - "compile-honggfuzz-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #12 - "compile-honggfuzz-address-x86_64": checking whether ln -s works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdump... objdump
Step #12 - "compile-honggfuzz-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlltool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #12 - "compile-honggfuzz-address-x86_64": checking for ar... ar
Step #12 - "compile-honggfuzz-address-x86_64": checking for archiver @FILE support... @
Step #12 - "compile-honggfuzz-address-x86_64": checking for strip... strip
Step #12 - "compile-honggfuzz-address-x86_64": checking for ranlib... ranlib
Step #12 - "compile-honggfuzz-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #12 - "compile-honggfuzz-address-x86_64": checking for sysroot... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for a working dd... /usr/bin/dd
Step #12 - "compile-honggfuzz-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #12 - "compile-honggfuzz-address-x86_64": checking for mt... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if : is a manifest tool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for ANSI C header files... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/types.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/stat.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdlib.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for string.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for memory.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for strings.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for inttypes.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdint.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for unistd.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlfcn.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdir... .libs
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang static flag -static works... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #12 - "compile-honggfuzz-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #12 - "compile-honggfuzz-address-x86_64": checking whether stripping libraries is possible... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if libtool supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build shared libraries... no
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build static libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for doxygen... false
Step #12 - "compile-honggfuzz-address-x86_64": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #12 - "compile-honggfuzz-address-x86_64": checking for pdflatex... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for bibtex... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for fig2dev... no
Step #12 - "compile-honggfuzz-address-x86_64": configure: Checking for packages in ./doc/spec/spec.tex...
Step #12 - "compile-honggfuzz-address-x86_64": configure: WARNING: *** Format Specification will not built.
Step #12 - "compile-honggfuzz-address-x86_64": checking for ld used by clang... (cached) /usr/bin/ld
Step #12 - "compile-honggfuzz-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking how to control symbol export... --version-script
Step #12 - "compile-honggfuzz-address-x86_64": checking for pkg-config... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for Ogg... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for oggpackB_read... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for Vorbis... no
Step #12 - "compile-honggfuzz-address-x86_64": *** Could not run Vorbis test program, checking why...
Step #12 - "compile-honggfuzz-address-x86_64": *** The test program failed to compile or link. See the file config.log for the
Step #12 - "compile-honggfuzz-address-x86_64": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #12 - "compile-honggfuzz-address-x86_64": *** or that you have moved Vorbis since it was installed.
Step #12 - "compile-honggfuzz-address-x86_64": checking sys/soundcard.h usability... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking sys/soundcard.h presence... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/soundcard.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for TIFFReadRGBAImage in -ltiff... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for clock_gettime... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for getopt_long... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking that generated files are newer than configure... done
Step #12 - "compile-honggfuzz-address-x86_64": configure: creating ./config.status
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating lib/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating lib/arm/armopts.s
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/theora/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating examples/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating doc/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating doc/Doxyfile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating doc/spec/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating tests/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating m4/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating libtheora.spec
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theora.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theora-uninstalled.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theoradec.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theoradec-uninstalled.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theoraenc.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating theoraenc-uninstalled.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating config.h
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing depfiles commands
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing libtool commands
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": ------------------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64":   libtheora 1.2.0:  Automatic configuration OK.
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":   General configuration:
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":     Encoding support: ........... no
Step #12 - "compile-honggfuzz-address-x86_64":     Assembly optimization: ...... 64 bit x86
Step #12 - "compile-honggfuzz-address-x86_64":     Debugging telemetry: ........ no
Step #12 - "compile-honggfuzz-address-x86_64":     Abort on huge files: ........ no
Step #12 - "compile-honggfuzz-address-x86_64":     Build example code: ......... no
Step #12 - "compile-honggfuzz-address-x86_64":     API Documentation: .......... no
Step #12 - "compile-honggfuzz-address-x86_64":     Format Documentation: ....... no
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":   Installation paths:
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":     libtheora: ................... /usr/local/lib
Step #12 - "compile-honggfuzz-address-x86_64":     C header files: .............. /usr/local/include/theora
Step #12 - "compile-honggfuzz-address-x86_64":     Documentation: ............... /usr/local/share/doc/libtheora
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":   Building:
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":     Type 'make' to compile libtheora.
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":     Type 'make install' to install libtheora.
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64":   Example programs will be built but not installed.
Step #12 - "compile-honggfuzz-address-x86_64": ------------------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": ++ nproc
Step #12 - "compile-honggfuzz-address-x86_64": + make -j32
Step #12 - "compile-honggfuzz-address-x86_64": make  all-recursive
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/src/libtheora'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in lib
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora/lib'
Step #12 - "compile-honggfuzz-address-x86_64": make  all-am
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/libtheora/lib'
Step #12 - "compile-honggfuzz-address-x86_64":   CC       apiwrapper.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       bitpack.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       decapiwrapper.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       decinfo.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       decode.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       fragment.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       huffdec.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       dequant.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       idct.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       info.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       internal.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       quant.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       state.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       encoder_disabled.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/x86cpu.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/mmxidct.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/mmxfrag.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/mmxstate.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/sse2idct.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       x86/x86state.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtheoraenc.la
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtheoradec.la
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtheora.la
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/libtheora/lib'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora/lib'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in include
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in theora
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/libtheora/include/theora'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/libtheora/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/libtheora/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in doc
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora/doc'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in spec
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #12 - "compile-honggfuzz-address-x86_64":   CC       vp3huff.o
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     vp3huff
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/src/libtheora/doc'
Step #12 - "compile-honggfuzz-address-x86_64": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #12 - "compile-honggfuzz-address-x86_64": *** Warning: Doxygen not found; documentation will not be built.
Step #12 - "compile-honggfuzz-address-x86_64": touch doxygen-build.stamp
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora/doc'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in tests
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora/tests'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora/tests'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in m4
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora/m4'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora/m4'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/src/libtheora'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/src/libtheora'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/src/libtheora'
Step #12 - "compile-honggfuzz-address-x86_64": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #12 - "compile-honggfuzz-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++ -DASAN -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a /usr/lib/libFuzzingEngine.a -o /workspace/out/honggfuzz-address-x86_64/fuzzer-decoder
Finished Step #12 - "compile-honggfuzz-address-x86_64"
Starting Step #13 - "build-check-honggfuzz-address-x86_64"
Step #13 - "build-check-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpwuegz195/fuzzer-decoder
Finished Step #13 - "build-check-honggfuzz-address-x86_64"
Starting Step #14
Step #14: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #14
Starting Step #15
Step #15: Already have image: gcr.io/oss-fuzz/libtheora
Step #15:   adding: fuzzer-decoder (deflated 66%)
Step #15:   adding: honggfuzz (deflated 66%)
Step #15:   adding: llvm-symbolizer (deflated 65%)
Finished Step #15
Starting Step #16
Step #16: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #16:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #16:                                  Dload  Upload   Total   Spent    Left  Speed
Step #16:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3926 --:--:-- --:--:-- --:--:--  3938
Finished Step #16
Starting Step #17
Step #17: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #17:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #17:                                  Dload  Upload   Total   Spent    Left  Speed
Step #17:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 3998k    0     0  100 3998k      0  17.1M --:--:-- --:--:-- --:--:-- 17.1M
Finished Step #17
Starting Step #18
Step #18: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #18:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #18:                                  Dload  Upload   Total   Spent    Left  Speed
Step #18:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     60 --:--:-- --:--:-- --:--:--    60
Finished Step #18
Starting Step #19
Step #19: Already have image (with digest): gcr.io/cloud-builders/curl
Step #19:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #19:                                  Dload  Upload   Total   Spent    Left  Speed
Step #19:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    176 --:--:-- --:--:-- --:--:--   176
Finished Step #19
Starting Step #20
Step #20: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #20
Starting Step #21 - "compile-libfuzzer-address-x86_64"
Step #21 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #21 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": CC=clang
Step #21 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #21 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #21 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #21 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=address* ]]
Step #21 - "compile-libfuzzer-address-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN'
Step #21 - "compile-libfuzzer-address-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN'
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #21 - "compile-libfuzzer-address-x86_64": + mkdir /src/libogg-install/
Step #21 - "compile-libfuzzer-address-x86_64": + cd /src/ogg
Step #21 - "compile-libfuzzer-address-x86_64": + ./autogen.sh
Step #21 - "compile-libfuzzer-address-x86_64": Updating build configuration files for libogg, please wait....
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:5: installing './compile'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:5: installing './config.guess'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:5: installing './config.sub'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:9: installing './install-sh'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:9: installing './missing'
Step #21 - "compile-libfuzzer-address-x86_64": src/Makefile.am: installing './depcomp'
Step #21 - "compile-libfuzzer-address-x86_64": parallel-tests: installing './test-driver'
Step #21 - "compile-libfuzzer-address-x86_64": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #21 - "compile-libfuzzer-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking how to print strings... printf
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the C compiler works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for C compiler default output file name... a.out
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of executables... 
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are cross compiling... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of object files... o
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #21 - "compile-libfuzzer-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #21 - "compile-libfuzzer-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #21 - "compile-libfuzzer-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #21 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #21 - "compile-libfuzzer-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #21 - "compile-libfuzzer-address-x86_64": checking whether ln -s works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdump... objdump
Step #21 - "compile-libfuzzer-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlltool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #21 - "compile-libfuzzer-address-x86_64": checking for ar... ar
Step #21 - "compile-libfuzzer-address-x86_64": checking for archiver @FILE support... @
Step #21 - "compile-libfuzzer-address-x86_64": checking for strip... strip
Step #21 - "compile-libfuzzer-address-x86_64": checking for ranlib... ranlib
Step #21 - "compile-libfuzzer-address-x86_64": checking for gawk... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for mawk... mawk
Step #21 - "compile-libfuzzer-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #21 - "compile-libfuzzer-address-x86_64": checking for sysroot... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for a working dd... /usr/bin/dd
Step #21 - "compile-libfuzzer-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #21 - "compile-libfuzzer-address-x86_64": checking for mt... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if : is a manifest tool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking how to run the C preprocessor... clang -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for ANSI C header files... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/types.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/stat.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdlib.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for string.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for memory.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for strings.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for inttypes.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdint.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for unistd.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlfcn.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdir... .libs
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang static flag -static works... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #21 - "compile-libfuzzer-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #21 - "compile-libfuzzer-address-x86_64": checking whether stripping libraries is possible... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if libtool supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build shared libraries... no
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build static libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #21 - "compile-libfuzzer-address-x86_64": checking whether build environment is sane... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make sets $(MAKE)... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... (cached) clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for inttypes.h... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdint.h... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/types.h... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for an ANSI C-conforming const... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking size of int16_t... 2
Step #21 - "compile-libfuzzer-address-x86_64": checking size of uint16_t... 2
Step #21 - "compile-libfuzzer-address-x86_64": checking size of u_int16_t... 2
Step #21 - "compile-libfuzzer-address-x86_64": checking size of int32_t... 4
Step #21 - "compile-libfuzzer-address-x86_64": checking size of uint32_t... 4
Step #21 - "compile-libfuzzer-address-x86_64": checking size of u_int32_t... 4
Step #21 - "compile-libfuzzer-address-x86_64": checking size of int64_t... 8
Step #21 - "compile-libfuzzer-address-x86_64": checking size of uint64_t... 8
Step #21 - "compile-libfuzzer-address-x86_64": checking size of short... 2
Step #21 - "compile-libfuzzer-address-x86_64": checking size of int... 4
Step #21 - "compile-libfuzzer-address-x86_64": checking size of long... 8
Step #21 - "compile-libfuzzer-address-x86_64": checking size of long long... 8
Step #21 - "compile-libfuzzer-address-x86_64": checking for working memcmp... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking that generated files are newer than configure... done
Step #21 - "compile-libfuzzer-address-x86_64": configure: creating ./config.status
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating src/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating doc/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating doc/libogg/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/ogg/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/ogg/config_types.h
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating libogg.spec
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating ogg.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating ogg-uninstalled.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating config.h
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing libtool commands
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing depfiles commands
Step #21 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-address-x86_64": + make -j32
Step #21 - "compile-libfuzzer-address-x86_64": make  all-recursive
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in src
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #21 - "compile-libfuzzer-address-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #21 - "compile-libfuzzer-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #21 - "compile-libfuzzer-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #21 - "compile-libfuzzer-address-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #21 - "compile-libfuzzer-address-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #21 - "compile-libfuzzer-address-x86_64": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #21 - "compile-libfuzzer-address-x86_64": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #21 - "compile-libfuzzer-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #21 - "compile-libfuzzer-address-x86_64": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #21 - "compile-libfuzzer-address-x86_64": libtool: link: ranlib .libs/libogg.a
Step #21 - "compile-libfuzzer-address-x86_64": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #21 - "compile-libfuzzer-address-x86_64": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #21 - "compile-libfuzzer-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -o test_bitwise test_bitwise-bitwise.o  
Step #21 - "compile-libfuzzer-address-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o test_bitwise test_bitwise-bitwise.o 
Step #21 - "compile-libfuzzer-address-x86_64": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #21 - "compile-libfuzzer-address-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -o test_framing test_framing-framing.o  
Step #21 - "compile-libfuzzer-address-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o test_framing test_framing-framing.o 
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in include
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in ogg
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in doc
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in libogg
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": + make install
Step #21 - "compile-libfuzzer-address-x86_64": Making install in src
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #21 - "compile-libfuzzer-address-x86_64":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #21 - "compile-libfuzzer-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #21 - "compile-libfuzzer-address-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #21 - "compile-libfuzzer-address-x86_64": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #21 - "compile-libfuzzer-address-x86_64": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #21 - "compile-libfuzzer-address-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #21 - "compile-libfuzzer-address-x86_64": ----------------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": Libraries have been installed in:
Step #21 - "compile-libfuzzer-address-x86_64":    /src/libogg-install/lib
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": If you ever happen to want to link against installed libraries
Step #21 - "compile-libfuzzer-address-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #21 - "compile-libfuzzer-address-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #21 - "compile-libfuzzer-address-x86_64": flag during linking and do at least one of the following:
Step #21 - "compile-libfuzzer-address-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #21 - "compile-libfuzzer-address-x86_64":      during execution
Step #21 - "compile-libfuzzer-address-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #21 - "compile-libfuzzer-address-x86_64":      during linking
Step #21 - "compile-libfuzzer-address-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #21 - "compile-libfuzzer-address-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": See any operating system documentation about shared libraries for
Step #21 - "compile-libfuzzer-address-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #21 - "compile-libfuzzer-address-x86_64": ----------------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Nothing to be done for 'install-data-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/ogg/src'
Step #21 - "compile-libfuzzer-address-x86_64": Making install in include
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making install in ogg
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'install-data-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/ogg/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making install in doc
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": Making install in libogg
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/ogg/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Nothing to be done for 'install-exec-am'.
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #21 - "compile-libfuzzer-address-x86_64":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/ogg'
Step #21 - "compile-libfuzzer-address-x86_64": + cd /src/fuzzing-headers/
Step #21 - "compile-libfuzzer-address-x86_64": + ./install.sh
Step #21 - "compile-libfuzzer-address-x86_64": + cd /src/libtheora/
Step #21 - "compile-libfuzzer-address-x86_64": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #21 - "compile-libfuzzer-address-x86_64": + ./autogen.sh
Step #21 - "compile-libfuzzer-address-x86_64": Updating build configuration files, please wait....
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting auxiliary files in '.'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file './ltmain.sh'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file 'm4/libtool.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file 'm4/ltoptions.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file 'm4/ltsugar.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file 'm4/ltversion.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:66: installing './compile'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:9: installing './config.guess'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:9: installing './config.sub'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:12: installing './install-sh'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:12: installing './missing'
Step #21 - "compile-libfuzzer-address-x86_64": doc/spec/Makefile.am: installing './depcomp'
Step #21 - "compile-libfuzzer-address-x86_64": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #21 - "compile-libfuzzer-address-x86_64": parallel-tests: installing './test-driver'
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #21 - "compile-libfuzzer-address-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *-m32* ]]
Step #21 - "compile-libfuzzer-address-x86_64": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #21 - "compile-libfuzzer-address-x86_64": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --enable-static --disable-shared
Step #21 - "compile-libfuzzer-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #21 - "compile-libfuzzer-address-x86_64": checking whether build environment is sane... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #21 - "compile-libfuzzer-address-x86_64": checking for gawk... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for mawk... mawk
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make sets $(MAKE)... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the C compiler works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for C compiler default output file name... a.out
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of executables... 
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are cross compiling... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of object files... o
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... (cached) clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... (cached) gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking how to run the C preprocessor... clang -E
Step #21 - "compile-libfuzzer-address-x86_64": checking how to print strings... printf
Step #21 - "compile-libfuzzer-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #21 - "compile-libfuzzer-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #21 - "compile-libfuzzer-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #21 - "compile-libfuzzer-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #21 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #21 - "compile-libfuzzer-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #21 - "compile-libfuzzer-address-x86_64": checking whether ln -s works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdump... objdump
Step #21 - "compile-libfuzzer-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlltool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #21 - "compile-libfuzzer-address-x86_64": checking for ar... ar
Step #21 - "compile-libfuzzer-address-x86_64": checking for archiver @FILE support... @
Step #21 - "compile-libfuzzer-address-x86_64": checking for strip... strip
Step #21 - "compile-libfuzzer-address-x86_64": checking for ranlib... ranlib
Step #21 - "compile-libfuzzer-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #21 - "compile-libfuzzer-address-x86_64": checking for sysroot... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for a working dd... /usr/bin/dd
Step #21 - "compile-libfuzzer-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #21 - "compile-libfuzzer-address-x86_64": checking for mt... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if : is a manifest tool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for ANSI C header files... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/types.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/stat.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdlib.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for string.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for memory.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for strings.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for inttypes.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdint.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for unistd.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlfcn.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdir... .libs
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang static flag -static works... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #21 - "compile-libfuzzer-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #21 - "compile-libfuzzer-address-x86_64": checking whether stripping libraries is possible... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if libtool supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build shared libraries... no
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build static libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for doxygen... false
Step #21 - "compile-libfuzzer-address-x86_64": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #21 - "compile-libfuzzer-address-x86_64": checking for pdflatex... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for bibtex... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for fig2dev... no
Step #21 - "compile-libfuzzer-address-x86_64": configure: Checking for packages in ./doc/spec/spec.tex...
Step #21 - "compile-libfuzzer-address-x86_64": configure: WARNING: *** Format Specification will not built.
Step #21 - "compile-libfuzzer-address-x86_64": checking for ld used by clang... (cached) /usr/bin/ld
Step #21 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking how to control symbol export... --version-script
Step #21 - "compile-libfuzzer-address-x86_64": checking for pkg-config... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for Ogg... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for oggpackB_read... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for Vorbis... no
Step #21 - "compile-libfuzzer-address-x86_64": *** Could not run Vorbis test program, checking why...
Step #21 - "compile-libfuzzer-address-x86_64": *** The test program failed to compile or link. See the file config.log for the
Step #21 - "compile-libfuzzer-address-x86_64": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #21 - "compile-libfuzzer-address-x86_64": *** or that you have moved Vorbis since it was installed.
Step #21 - "compile-libfuzzer-address-x86_64": checking sys/soundcard.h usability... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking sys/soundcard.h presence... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/soundcard.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for TIFFReadRGBAImage in -ltiff... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for clock_gettime... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for getopt_long... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking that generated files are newer than configure... done
Step #21 - "compile-libfuzzer-address-x86_64": configure: creating ./config.status
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating lib/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating lib/arm/armopts.s
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/theora/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating examples/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating doc/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating doc/Doxyfile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating doc/spec/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating tests/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating m4/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating libtheora.spec
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theora.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theora-uninstalled.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theoradec.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theoradec-uninstalled.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theoraenc.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating theoraenc-uninstalled.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating config.h
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing depfiles commands
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing libtool commands
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": ------------------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64":   libtheora 1.2.0:  Automatic configuration OK.
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":   General configuration:
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":     Encoding support: ........... no
Step #21 - "compile-libfuzzer-address-x86_64":     Assembly optimization: ...... 64 bit x86
Step #21 - "compile-libfuzzer-address-x86_64":     Debugging telemetry: ........ no
Step #21 - "compile-libfuzzer-address-x86_64":     Abort on huge files: ........ no
Step #21 - "compile-libfuzzer-address-x86_64":     Build example code: ......... no
Step #21 - "compile-libfuzzer-address-x86_64":     API Documentation: .......... no
Step #21 - "compile-libfuzzer-address-x86_64":     Format Documentation: ....... no
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":   Installation paths:
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":     libtheora: ................... /usr/local/lib
Step #21 - "compile-libfuzzer-address-x86_64":     C header files: .............. /usr/local/include/theora
Step #21 - "compile-libfuzzer-address-x86_64":     Documentation: ............... /usr/local/share/doc/libtheora
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":   Building:
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":     Type 'make' to compile libtheora.
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":     Type 'make install' to install libtheora.
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64":   Example programs will be built but not installed.
Step #21 - "compile-libfuzzer-address-x86_64": ------------------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-address-x86_64": + make -j32
Step #21 - "compile-libfuzzer-address-x86_64": make  all-recursive
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/src/libtheora'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in lib
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora/lib'
Step #21 - "compile-libfuzzer-address-x86_64": make  all-am
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/libtheora/lib'
Step #21 - "compile-libfuzzer-address-x86_64":   CC       apiwrapper.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       bitpack.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       decapiwrapper.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       decinfo.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       decode.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       dequant.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       fragment.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       huffdec.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       idct.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       info.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       internal.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       quant.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       state.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       encoder_disabled.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/x86cpu.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/mmxidct.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/mmxfrag.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/mmxstate.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/sse2idct.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       x86/x86state.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtheoraenc.la
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtheoradec.la
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtheora.la
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/libtheora/lib'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora/lib'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in include
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in theora
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/libtheora/include/theora'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/libtheora/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/libtheora/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in doc
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora/doc'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in spec
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #21 - "compile-libfuzzer-address-x86_64":   CC       vp3huff.o
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     vp3huff
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/src/libtheora/doc'
Step #21 - "compile-libfuzzer-address-x86_64": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #21 - "compile-libfuzzer-address-x86_64": *** Warning: Doxygen not found; documentation will not be built.
Step #21 - "compile-libfuzzer-address-x86_64": touch doxygen-build.stamp
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/src/libtheora/doc'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora/doc'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in tests
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora/tests'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora/tests'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in m4
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora/m4'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora/m4'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/src/libtheora'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/src/libtheora'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/src/libtheora'
Step #21 - "compile-libfuzzer-address-x86_64": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #21 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a -fsanitize=fuzzer -o /workspace/out/libfuzzer-address-x86_64/fuzzer-decoder
Finished Step #21 - "compile-libfuzzer-address-x86_64"
Starting Step #22 - "build-check-libfuzzer-address-x86_64"
Step #22 - "build-check-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpe3zfv_yb/fuzzer-decoder
Finished Step #22 - "build-check-libfuzzer-address-x86_64"
Starting Step #23
Step #23: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #23
Starting Step #24
Step #24: Already have image: gcr.io/oss-fuzz/libtheora
Step #24:   adding: fuzzer-decoder (deflated 66%)
Step #24:   adding: llvm-symbolizer (deflated 65%)
Finished Step #24
Starting Step #25
Step #25: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #25:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #25:                                  Dload  Upload   Total   Spent    Left  Speed
Step #25:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3216 --:--:-- --:--:-- --:--:--  3226
Finished Step #25
Starting Step #26
Step #26: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #26:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #26:                                  Dload  Upload   Total   Spent    Left  Speed
Step #26:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 4267k    0     0  100 4267k      0  17.5M --:--:-- --:--:-- --:--:-- 17.6M
Finished Step #26
Starting Step #27
Step #27: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #27:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #27:                                  Dload  Upload   Total   Spent    Left  Speed
Step #27:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     73 --:--:-- --:--:-- --:--:--    73100    15    0     0  100    15      0     53 --:--:-- --:--:-- --:--:--    53
Finished Step #27
Starting Step #28
Step #28: Already have image (with digest): gcr.io/cloud-builders/curl
Step #28:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #28:                                  Dload  Upload   Total   Spent    Left  Speed
Step #28:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    170 --:--:-- --:--:-- --:--:--   170
Finished Step #28
Starting Step #29
Step #29: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #29
Starting Step #30 - "compile-libfuzzer-address-i386"
Step #30 - "compile-libfuzzer-address-i386": Already have image (with digest): gcr.io/cloud-builders/docker
Step #30 - "compile-libfuzzer-address-i386": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": vm.mmap_rnd_bits = 28
Step #30 - "compile-libfuzzer-address-i386": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #30 - "compile-libfuzzer-address-i386": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": CC=clang
Step #30 - "compile-libfuzzer-address-i386": CXX=clang++
Step #30 - "compile-libfuzzer-address-i386": CFLAGS=-m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #30 - "compile-libfuzzer-address-i386": CXXFLAGS=-m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #30 - "compile-libfuzzer-address-i386": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #30 - "compile-libfuzzer-address-i386": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": + [[ -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=address* ]]
Step #30 - "compile-libfuzzer-address-i386": + export 'CXXFLAGS=-m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN'
Step #30 - "compile-libfuzzer-address-i386": + CXXFLAGS='-m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN'
Step #30 - "compile-libfuzzer-address-i386": + [[ -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #30 - "compile-libfuzzer-address-i386": + mkdir /src/libogg-install/
Step #30 - "compile-libfuzzer-address-i386": + cd /src/ogg
Step #30 - "compile-libfuzzer-address-i386": + ./autogen.sh
Step #30 - "compile-libfuzzer-address-i386": Updating build configuration files for libogg, please wait....
Step #30 - "compile-libfuzzer-address-i386": libtoolize: putting auxiliary files in '.'.
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file './ltmain.sh'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file 'm4/libtool.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file 'm4/ltoptions.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file 'm4/ltsugar.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file 'm4/ltversion.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:5: installing './compile'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:5: installing './config.guess'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:5: installing './config.sub'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:9: installing './install-sh'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:9: installing './missing'
Step #30 - "compile-libfuzzer-address-i386": src/Makefile.am: installing './depcomp'
Step #30 - "compile-libfuzzer-address-i386": parallel-tests: installing './test-driver'
Step #30 - "compile-libfuzzer-address-i386": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #30 - "compile-libfuzzer-address-i386": checking build system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-address-i386": checking host system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-address-i386": checking how to print strings... printf
Step #30 - "compile-libfuzzer-address-i386": checking for gcc... clang
Step #30 - "compile-libfuzzer-address-i386": checking whether the C compiler works... yes
Step #30 - "compile-libfuzzer-address-i386": checking for C compiler default output file name... a.out
Step #30 - "compile-libfuzzer-address-i386": checking for suffix of executables... 
Step #30 - "compile-libfuzzer-address-i386": checking whether we are cross compiling... no
Step #30 - "compile-libfuzzer-address-i386": checking for suffix of object files... o
Step #30 - "compile-libfuzzer-address-i386": checking whether we are using the GNU C compiler... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether clang accepts -g... yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to accept ISO C89... none needed
Step #30 - "compile-libfuzzer-address-i386": checking whether clang understands -c and -o together... yes
Step #30 - "compile-libfuzzer-address-i386": checking for a sed that does not truncate output... /usr/bin/sed
Step #30 - "compile-libfuzzer-address-i386": checking for grep that handles long lines and -e... /usr/bin/grep
Step #30 - "compile-libfuzzer-address-i386": checking for egrep... /usr/bin/grep -E
Step #30 - "compile-libfuzzer-address-i386": checking for fgrep... /usr/bin/grep -F
Step #30 - "compile-libfuzzer-address-i386": checking for ld used by clang... /usr/bin/ld
Step #30 - "compile-libfuzzer-address-i386": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #30 - "compile-libfuzzer-address-i386": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #30 - "compile-libfuzzer-address-i386": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #30 - "compile-libfuzzer-address-i386": checking whether ln -s works... yes
Step #30 - "compile-libfuzzer-address-i386": checking the maximum length of command line arguments... 1572864
Step #30 - "compile-libfuzzer-address-i386": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #30 - "compile-libfuzzer-address-i386": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #30 - "compile-libfuzzer-address-i386": checking for /usr/bin/ld option to reload object files... -r
Step #30 - "compile-libfuzzer-address-i386": checking for objdump... objdump
Step #30 - "compile-libfuzzer-address-i386": checking how to recognize dependent libraries... pass_all
Step #30 - "compile-libfuzzer-address-i386": checking for dlltool... no
Step #30 - "compile-libfuzzer-address-i386": checking how to associate runtime and link libraries... printf %s\n
Step #30 - "compile-libfuzzer-address-i386": checking for ar... ar
Step #30 - "compile-libfuzzer-address-i386": checking for archiver @FILE support... @
Step #30 - "compile-libfuzzer-address-i386": checking for strip... strip
Step #30 - "compile-libfuzzer-address-i386": checking for ranlib... ranlib
Step #30 - "compile-libfuzzer-address-i386": checking for gawk... no
Step #30 - "compile-libfuzzer-address-i386": checking for mawk... mawk
Step #30 - "compile-libfuzzer-address-i386": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #30 - "compile-libfuzzer-address-i386": checking for sysroot... no
Step #30 - "compile-libfuzzer-address-i386": checking for a working dd... /usr/bin/dd
Step #30 - "compile-libfuzzer-address-i386": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #30 - "compile-libfuzzer-address-i386": checking for mt... no
Step #30 - "compile-libfuzzer-address-i386": checking if : is a manifest tool... no
Step #30 - "compile-libfuzzer-address-i386": checking how to run the C preprocessor... clang -E
Step #30 - "compile-libfuzzer-address-i386": checking for ANSI C header files... yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/types.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/stat.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for stdlib.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for string.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for memory.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for strings.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for inttypes.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for stdint.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for unistd.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for dlfcn.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for objdir... .libs
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to produce PIC... -fPIC -DPIC
Step #30 - "compile-libfuzzer-address-i386": checking if clang PIC flag -fPIC -DPIC works... yes
Step #30 - "compile-libfuzzer-address-i386": checking if clang static flag -static works... no
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -c -o file.o... yes
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -c -o file.o... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking whether the clang linker (/usr/bin/ld -m elf_i386) supports shared libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking dynamic linker characteristics... GNU/Linux ld.so
Step #30 - "compile-libfuzzer-address-i386": checking how to hardcode library paths into programs... immediate
Step #30 - "compile-libfuzzer-address-i386": checking whether stripping libraries is possible... yes
Step #30 - "compile-libfuzzer-address-i386": checking if libtool supports shared libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether to build shared libraries... no
Step #30 - "compile-libfuzzer-address-i386": checking whether to build static libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking for a BSD-compatible install... /usr/bin/install -c
Step #30 - "compile-libfuzzer-address-i386": checking whether build environment is sane... yes
Step #30 - "compile-libfuzzer-address-i386": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #30 - "compile-libfuzzer-address-i386": checking whether make sets $(MAKE)... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether make supports the include directive... yes (GNU style)
Step #30 - "compile-libfuzzer-address-i386": checking whether make supports nested variables... yes
Step #30 - "compile-libfuzzer-address-i386": checking dependency style of clang... gcc3
Step #30 - "compile-libfuzzer-address-i386": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #30 - "compile-libfuzzer-address-i386": checking for gcc... (cached) clang
Step #30 - "compile-libfuzzer-address-i386": checking whether we are using the GNU C compiler... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking whether clang accepts -g... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to accept ISO C89... (cached) none needed
Step #30 - "compile-libfuzzer-address-i386": checking whether clang understands -c and -o together... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for inttypes.h... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for stdint.h... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/types.h... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for an ANSI C-conforming const... yes
Step #30 - "compile-libfuzzer-address-i386": checking size of int16_t... 2
Step #30 - "compile-libfuzzer-address-i386": checking size of uint16_t... 2
Step #30 - "compile-libfuzzer-address-i386": checking size of u_int16_t... 2
Step #30 - "compile-libfuzzer-address-i386": checking size of int32_t... 4
Step #30 - "compile-libfuzzer-address-i386": checking size of uint32_t... 4
Step #30 - "compile-libfuzzer-address-i386": checking size of u_int32_t... 4
Step #30 - "compile-libfuzzer-address-i386": checking size of int64_t... 8
Step #30 - "compile-libfuzzer-address-i386": checking size of uint64_t... 8
Step #30 - "compile-libfuzzer-address-i386": checking size of short... 2
Step #30 - "compile-libfuzzer-address-i386": checking size of int... 4
Step #30 - "compile-libfuzzer-address-i386": checking size of long... 4
Step #30 - "compile-libfuzzer-address-i386": checking size of long long... 8
Step #30 - "compile-libfuzzer-address-i386": checking for working memcmp... yes
Step #30 - "compile-libfuzzer-address-i386": checking that generated files are newer than configure... done
Step #30 - "compile-libfuzzer-address-i386": configure: creating ./config.status
Step #30 - "compile-libfuzzer-address-i386": config.status: creating Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating src/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating doc/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating doc/libogg/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating include/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating include/ogg/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating include/ogg/config_types.h
Step #30 - "compile-libfuzzer-address-i386": config.status: creating libogg.spec
Step #30 - "compile-libfuzzer-address-i386": config.status: creating ogg.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating ogg-uninstalled.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating config.h
Step #30 - "compile-libfuzzer-address-i386": config.status: executing libtool commands
Step #30 - "compile-libfuzzer-address-i386": config.status: executing depfiles commands
Step #30 - "compile-libfuzzer-address-i386": ++ nproc
Step #30 - "compile-libfuzzer-address-i386": + make -j32
Step #30 - "compile-libfuzzer-address-i386": make  all-recursive
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": Making all in src
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #30 - "compile-libfuzzer-address-i386": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #30 - "compile-libfuzzer-address-i386": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #30 - "compile-libfuzzer-address-i386": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #30 - "compile-libfuzzer-address-i386": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #30 - "compile-libfuzzer-address-i386": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #30 - "compile-libfuzzer-address-i386": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #30 - "compile-libfuzzer-address-i386": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #30 - "compile-libfuzzer-address-i386": /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #30 - "compile-libfuzzer-address-i386": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #30 - "compile-libfuzzer-address-i386": libtool: link: ranlib .libs/libogg.a
Step #30 - "compile-libfuzzer-address-i386": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #30 - "compile-libfuzzer-address-i386": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #30 - "compile-libfuzzer-address-i386": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -o test_bitwise test_bitwise-bitwise.o  
Step #30 - "compile-libfuzzer-address-i386": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o test_bitwise test_bitwise-bitwise.o 
Step #30 - "compile-libfuzzer-address-i386": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #30 - "compile-libfuzzer-address-i386": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -o test_framing test_framing-framing.o  
Step #30 - "compile-libfuzzer-address-i386": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o test_framing test_framing-framing.o 
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386": Making all in include
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": Making all in ogg
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all-am'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": Making all in doc
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": Making all in libogg
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all-am'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": + make install
Step #30 - "compile-libfuzzer-address-i386": Making install in src
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #30 - "compile-libfuzzer-address-i386":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #30 - "compile-libfuzzer-address-i386": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #30 - "compile-libfuzzer-address-i386": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #30 - "compile-libfuzzer-address-i386": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #30 - "compile-libfuzzer-address-i386": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #30 - "compile-libfuzzer-address-i386": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #30 - "compile-libfuzzer-address-i386": ----------------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": Libraries have been installed in:
Step #30 - "compile-libfuzzer-address-i386":    /src/libogg-install/lib
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386": If you ever happen to want to link against installed libraries
Step #30 - "compile-libfuzzer-address-i386": in a given directory, LIBDIR, you must either use libtool, and
Step #30 - "compile-libfuzzer-address-i386": specify the full pathname of the library, or use the '-LLIBDIR'
Step #30 - "compile-libfuzzer-address-i386": flag during linking and do at least one of the following:
Step #30 - "compile-libfuzzer-address-i386":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #30 - "compile-libfuzzer-address-i386":      during execution
Step #30 - "compile-libfuzzer-address-i386":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #30 - "compile-libfuzzer-address-i386":      during linking
Step #30 - "compile-libfuzzer-address-i386":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #30 - "compile-libfuzzer-address-i386":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386": See any operating system documentation about shared libraries for
Step #30 - "compile-libfuzzer-address-i386": more information, such as the ld(1) and ld.so(8) manual pages.
Step #30 - "compile-libfuzzer-address-i386": ----------------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": make[2]: Nothing to be done for 'install-data-am'.
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/ogg/src'
Step #30 - "compile-libfuzzer-address-i386": Making install in include
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": Making install in ogg
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'install-exec-am'.
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'install-exec-am'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'install-data-am'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/ogg/include'
Step #30 - "compile-libfuzzer-address-i386": Making install in doc
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": Making install in libogg
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'install-exec-am'.
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'install-exec-am'.
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/ogg/doc'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Nothing to be done for 'install-exec-am'.
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #30 - "compile-libfuzzer-address-i386":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/ogg'
Step #30 - "compile-libfuzzer-address-i386": + cd /src/fuzzing-headers/
Step #30 - "compile-libfuzzer-address-i386": + ./install.sh
Step #30 - "compile-libfuzzer-address-i386": + cd /src/libtheora/
Step #30 - "compile-libfuzzer-address-i386": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #30 - "compile-libfuzzer-address-i386": + ./autogen.sh
Step #30 - "compile-libfuzzer-address-i386": Updating build configuration files, please wait....
Step #30 - "compile-libfuzzer-address-i386": libtoolize: putting auxiliary files in '.'.
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file './ltmain.sh'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file 'm4/libtool.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file 'm4/ltoptions.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file 'm4/ltsugar.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file 'm4/ltversion.m4'
Step #30 - "compile-libfuzzer-address-i386": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:66: installing './compile'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:9: installing './config.guess'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:9: installing './config.sub'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:12: installing './install-sh'
Step #30 - "compile-libfuzzer-address-i386": configure.ac:12: installing './missing'
Step #30 - "compile-libfuzzer-address-i386": doc/spec/Makefile.am: installing './depcomp'
Step #30 - "compile-libfuzzer-address-i386": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #30 - "compile-libfuzzer-address-i386": parallel-tests: installing './test-driver'
Step #30 - "compile-libfuzzer-address-i386": + [[ -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #30 - "compile-libfuzzer-address-i386": + [[ -m32 -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link = *-m32* ]]
Step #30 - "compile-libfuzzer-address-i386": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #30 - "compile-libfuzzer-address-i386": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --disable-asm --enable-static --disable-shared
Step #30 - "compile-libfuzzer-address-i386": checking build system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-address-i386": checking host system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-address-i386": checking for a BSD-compatible install... /usr/bin/install -c
Step #30 - "compile-libfuzzer-address-i386": checking whether build environment is sane... yes
Step #30 - "compile-libfuzzer-address-i386": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #30 - "compile-libfuzzer-address-i386": checking for gawk... no
Step #30 - "compile-libfuzzer-address-i386": checking for mawk... mawk
Step #30 - "compile-libfuzzer-address-i386": checking whether make sets $(MAKE)... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether make supports nested variables... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether make supports nested variables... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking whether make supports the include directive... yes (GNU style)
Step #30 - "compile-libfuzzer-address-i386": checking for gcc... clang
Step #30 - "compile-libfuzzer-address-i386": checking whether the C compiler works... yes
Step #30 - "compile-libfuzzer-address-i386": checking for C compiler default output file name... a.out
Step #30 - "compile-libfuzzer-address-i386": checking for suffix of executables... 
Step #30 - "compile-libfuzzer-address-i386": checking whether we are cross compiling... no
Step #30 - "compile-libfuzzer-address-i386": checking for suffix of object files... o
Step #30 - "compile-libfuzzer-address-i386": checking whether we are using the GNU C compiler... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether clang accepts -g... yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to accept ISO C89... none needed
Step #30 - "compile-libfuzzer-address-i386": checking whether clang understands -c and -o together... yes
Step #30 - "compile-libfuzzer-address-i386": checking dependency style of clang... gcc3
Step #30 - "compile-libfuzzer-address-i386": checking dependency style of clang... gcc3
Step #30 - "compile-libfuzzer-address-i386": checking for gcc... (cached) clang
Step #30 - "compile-libfuzzer-address-i386": checking whether we are using the GNU C compiler... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking whether clang accepts -g... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to accept ISO C89... (cached) none needed
Step #30 - "compile-libfuzzer-address-i386": checking whether clang understands -c and -o together... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking dependency style of clang... (cached) gcc3
Step #30 - "compile-libfuzzer-address-i386": checking how to run the C preprocessor... clang -E
Step #30 - "compile-libfuzzer-address-i386": checking how to print strings... printf
Step #30 - "compile-libfuzzer-address-i386": checking for a sed that does not truncate output... /usr/bin/sed
Step #30 - "compile-libfuzzer-address-i386": checking for grep that handles long lines and -e... /usr/bin/grep
Step #30 - "compile-libfuzzer-address-i386": checking for egrep... /usr/bin/grep -E
Step #30 - "compile-libfuzzer-address-i386": checking for fgrep... /usr/bin/grep -F
Step #30 - "compile-libfuzzer-address-i386": checking for ld used by clang... /usr/bin/ld
Step #30 - "compile-libfuzzer-address-i386": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #30 - "compile-libfuzzer-address-i386": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #30 - "compile-libfuzzer-address-i386": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #30 - "compile-libfuzzer-address-i386": checking whether ln -s works... yes
Step #30 - "compile-libfuzzer-address-i386": checking the maximum length of command line arguments... 1572864
Step #30 - "compile-libfuzzer-address-i386": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #30 - "compile-libfuzzer-address-i386": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #30 - "compile-libfuzzer-address-i386": checking for /usr/bin/ld option to reload object files... -r
Step #30 - "compile-libfuzzer-address-i386": checking for objdump... objdump
Step #30 - "compile-libfuzzer-address-i386": checking how to recognize dependent libraries... pass_all
Step #30 - "compile-libfuzzer-address-i386": checking for dlltool... no
Step #30 - "compile-libfuzzer-address-i386": checking how to associate runtime and link libraries... printf %s\n
Step #30 - "compile-libfuzzer-address-i386": checking for ar... ar
Step #30 - "compile-libfuzzer-address-i386": checking for archiver @FILE support... @
Step #30 - "compile-libfuzzer-address-i386": checking for strip... strip
Step #30 - "compile-libfuzzer-address-i386": checking for ranlib... ranlib
Step #30 - "compile-libfuzzer-address-i386": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #30 - "compile-libfuzzer-address-i386": checking for sysroot... no
Step #30 - "compile-libfuzzer-address-i386": checking for a working dd... /usr/bin/dd
Step #30 - "compile-libfuzzer-address-i386": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #30 - "compile-libfuzzer-address-i386": checking for mt... no
Step #30 - "compile-libfuzzer-address-i386": checking if : is a manifest tool... no
Step #30 - "compile-libfuzzer-address-i386": checking for ANSI C header files... yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/types.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/stat.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for stdlib.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for string.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for memory.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for strings.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for inttypes.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for stdint.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for unistd.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for dlfcn.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for objdir... .libs
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #30 - "compile-libfuzzer-address-i386": checking for clang option to produce PIC... -fPIC -DPIC
Step #30 - "compile-libfuzzer-address-i386": checking if clang PIC flag -fPIC -DPIC works... yes
Step #30 - "compile-libfuzzer-address-i386": checking if clang static flag -static works... no
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -c -o file.o... yes
Step #30 - "compile-libfuzzer-address-i386": checking if clang supports -c -o file.o... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking whether the clang linker (/usr/bin/ld -m elf_i386) supports shared libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking dynamic linker characteristics... GNU/Linux ld.so
Step #30 - "compile-libfuzzer-address-i386": checking how to hardcode library paths into programs... immediate
Step #30 - "compile-libfuzzer-address-i386": checking whether stripping libraries is possible... yes
Step #30 - "compile-libfuzzer-address-i386": checking if libtool supports shared libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking whether to build shared libraries... no
Step #30 - "compile-libfuzzer-address-i386": checking whether to build static libraries... yes
Step #30 - "compile-libfuzzer-address-i386": checking for doxygen... false
Step #30 - "compile-libfuzzer-address-i386": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #30 - "compile-libfuzzer-address-i386": checking for pdflatex... no
Step #30 - "compile-libfuzzer-address-i386": checking for bibtex... no
Step #30 - "compile-libfuzzer-address-i386": checking for fig2dev... no
Step #30 - "compile-libfuzzer-address-i386": configure: Checking for packages in ./doc/spec/spec.tex...
Step #30 - "compile-libfuzzer-address-i386": configure: WARNING: *** Format Specification will not built.
Step #30 - "compile-libfuzzer-address-i386": checking for ld used by clang... (cached) /usr/bin/ld
Step #30 - "compile-libfuzzer-address-i386": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #30 - "compile-libfuzzer-address-i386": checking how to control symbol export... --version-script
Step #30 - "compile-libfuzzer-address-i386": checking for pkg-config... no
Step #30 - "compile-libfuzzer-address-i386": checking for Ogg... yes
Step #30 - "compile-libfuzzer-address-i386": checking for oggpackB_read... yes
Step #30 - "compile-libfuzzer-address-i386": checking for Vorbis... no
Step #30 - "compile-libfuzzer-address-i386": *** Could not run Vorbis test program, checking why...
Step #30 - "compile-libfuzzer-address-i386": *** The test program failed to compile or link. See the file config.log for the
Step #30 - "compile-libfuzzer-address-i386": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #30 - "compile-libfuzzer-address-i386": *** or that you have moved Vorbis since it was installed.
Step #30 - "compile-libfuzzer-address-i386": checking sys/soundcard.h usability... yes
Step #30 - "compile-libfuzzer-address-i386": checking sys/soundcard.h presence... yes
Step #30 - "compile-libfuzzer-address-i386": checking for sys/soundcard.h... yes
Step #30 - "compile-libfuzzer-address-i386": checking for TIFFReadRGBAImage in -ltiff... no
Step #30 - "compile-libfuzzer-address-i386": checking for clock_gettime... yes
Step #30 - "compile-libfuzzer-address-i386": checking for getopt_long... yes
Step #30 - "compile-libfuzzer-address-i386": checking that generated files are newer than configure... done
Step #30 - "compile-libfuzzer-address-i386": configure: creating ./config.status
Step #30 - "compile-libfuzzer-address-i386": config.status: creating Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating lib/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating lib/arm/armopts.s
Step #30 - "compile-libfuzzer-address-i386": config.status: creating include/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating include/theora/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating examples/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating doc/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating doc/Doxyfile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating doc/spec/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating tests/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating m4/Makefile
Step #30 - "compile-libfuzzer-address-i386": config.status: creating libtheora.spec
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theora.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theora-uninstalled.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theoradec.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theoradec-uninstalled.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theoraenc.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating theoraenc-uninstalled.pc
Step #30 - "compile-libfuzzer-address-i386": config.status: creating config.h
Step #30 - "compile-libfuzzer-address-i386": config.status: executing depfiles commands
Step #30 - "compile-libfuzzer-address-i386": config.status: executing libtool commands
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386": ------------------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386":   libtheora 1.2.0:  Automatic configuration OK.
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":   General configuration:
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":     Encoding support: ........... no
Step #30 - "compile-libfuzzer-address-i386":     Assembly optimization: ...... disabled
Step #30 - "compile-libfuzzer-address-i386":     Debugging telemetry: ........ no
Step #30 - "compile-libfuzzer-address-i386":     Abort on huge files: ........ no
Step #30 - "compile-libfuzzer-address-i386":     Build example code: ......... no
Step #30 - "compile-libfuzzer-address-i386":     API Documentation: .......... no
Step #30 - "compile-libfuzzer-address-i386":     Format Documentation: ....... no
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":   Installation paths:
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":     libtheora: ................... /usr/local/lib
Step #30 - "compile-libfuzzer-address-i386":     C header files: .............. /usr/local/include/theora
Step #30 - "compile-libfuzzer-address-i386":     Documentation: ............... /usr/local/share/doc/libtheora
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":   Building:
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":     Type 'make' to compile libtheora.
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":     Type 'make install' to install libtheora.
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386":   Example programs will be built but not installed.
Step #30 - "compile-libfuzzer-address-i386": ------------------------------------------------------------------------
Step #30 - "compile-libfuzzer-address-i386": 
Step #30 - "compile-libfuzzer-address-i386": ++ nproc
Step #30 - "compile-libfuzzer-address-i386": + make -j32
Step #30 - "compile-libfuzzer-address-i386": make  all-recursive
Step #30 - "compile-libfuzzer-address-i386": make[1]: Entering directory '/src/libtheora'
Step #30 - "compile-libfuzzer-address-i386": Making all in lib
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora/lib'
Step #30 - "compile-libfuzzer-address-i386": make  all-am
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/libtheora/lib'
Step #30 - "compile-libfuzzer-address-i386":   CC       apiwrapper.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       bitpack.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       decapiwrapper.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       decinfo.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       decode.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       dequant.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       fragment.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       huffdec.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       idct.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       info.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       internal.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       quant.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       state.lo
Step #30 - "compile-libfuzzer-address-i386":   CC       encoder_disabled.lo
Step #30 - "compile-libfuzzer-address-i386":   CCLD     libtheoraenc.la
Step #30 - "compile-libfuzzer-address-i386":   CCLD     libtheoradec.la
Step #30 - "compile-libfuzzer-address-i386":   CCLD     libtheora.la
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/libtheora/lib'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora/lib'
Step #30 - "compile-libfuzzer-address-i386": Making all in include
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora/include'
Step #30 - "compile-libfuzzer-address-i386": Making all in theora
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/libtheora/include/theora'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/libtheora/include'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Nothing to be done for 'all-am'.
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/libtheora/include'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora/include'
Step #30 - "compile-libfuzzer-address-i386": Making all in doc
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora/doc'
Step #30 - "compile-libfuzzer-address-i386": Making all in spec
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #30 - "compile-libfuzzer-address-i386":   CC       vp3huff.o
Step #30 - "compile-libfuzzer-address-i386":   CCLD     vp3huff
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #30 - "compile-libfuzzer-address-i386": make[3]: Entering directory '/src/libtheora/doc'
Step #30 - "compile-libfuzzer-address-i386": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #30 - "compile-libfuzzer-address-i386": *** Warning: Doxygen not found; documentation will not be built.
Step #30 - "compile-libfuzzer-address-i386": touch doxygen-build.stamp
Step #30 - "compile-libfuzzer-address-i386": make[3]: Leaving directory '/src/libtheora/doc'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora/doc'
Step #30 - "compile-libfuzzer-address-i386": Making all in tests
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora/tests'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora/tests'
Step #30 - "compile-libfuzzer-address-i386": Making all in m4
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora/m4'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora/m4'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Entering directory '/src/libtheora'
Step #30 - "compile-libfuzzer-address-i386": make[2]: Leaving directory '/src/libtheora'
Step #30 - "compile-libfuzzer-address-i386": make[1]: Leaving directory '/src/libtheora'
Step #30 - "compile-libfuzzer-address-i386": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #30 - "compile-libfuzzer-address-i386": + clang++ -m32 -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a -fsanitize=fuzzer -o /workspace/out/libfuzzer-address-i386/fuzzer-decoder
Finished Step #30 - "compile-libfuzzer-address-i386"
Starting Step #31 - "build-check-libfuzzer-address-i386"
Step #31 - "build-check-libfuzzer-address-i386": Already have image (with digest): gcr.io/cloud-builders/docker
Step #31 - "build-check-libfuzzer-address-i386": INFO: performing bad build checks for /tmp/not-out/tmpn_1gd8hf/fuzzer-decoder
Finished Step #31 - "build-check-libfuzzer-address-i386"
Starting Step #32
Step #32: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #32
Starting Step #33
Step #33: Already have image: gcr.io/oss-fuzz/libtheora
Step #33:   adding: fuzzer-decoder (deflated 64%)
Step #33:   adding: llvm-symbolizer (deflated 65%)
Finished Step #33
Starting Step #34
Step #34: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #34:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #34:                                  Dload  Upload   Total   Spent    Left  Speed
Step #34:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3029 --:--:-- --:--:-- --:--:--  3042
Finished Step #34
Starting Step #35
Step #35: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #35:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #35:                                  Dload  Upload   Total   Spent    Left  Speed
Step #35:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 4239k    0     0  100 4239k      0  16.6M --:--:-- --:--:-- --:--:-- 16.7M
Finished Step #35
Starting Step #36
Step #36: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #36:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #36:                                  Dload  Upload   Total   Spent    Left  Speed
Step #36:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     58 --:--:-- --:--:-- --:--:--    58
Finished Step #36
Starting Step #37
Step #37: Already have image (with digest): gcr.io/cloud-builders/curl
Step #37:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #37:                                  Dload  Upload   Total   Spent    Left  Speed
Step #37:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    151 --:--:-- --:--:-- --:--:--   151
Finished Step #37
Starting Step #38
Step #38: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #38
Starting Step #39 - "compile-libfuzzer-memory-x86_64"
Step #39 - "compile-libfuzzer-memory-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #39 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": vm.mmap_rnd_bits = 28
Step #39 - "compile-libfuzzer-memory-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #39 - "compile-libfuzzer-memory-x86_64": Building without MSan instrumented libraries.
Step #39 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": CC=clang
Step #39 - "compile-libfuzzer-memory-x86_64": CXX=clang++
Step #39 - "compile-libfuzzer-memory-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link
Step #39 - "compile-libfuzzer-memory-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -stdlib=libc++
Step #39 - "compile-libfuzzer-memory-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=memory -Cdebuginfo=1 -Cforce-frame-pointers
Step #39 - "compile-libfuzzer-memory-x86_64": ---------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link = *sanitize=address* ]]
Step #39 - "compile-libfuzzer-memory-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #39 - "compile-libfuzzer-memory-x86_64": + export 'CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -stdlib=libc++ -DMSAN'
Step #39 - "compile-libfuzzer-memory-x86_64": + CXXFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -stdlib=libc++ -DMSAN'
Step #39 - "compile-libfuzzer-memory-x86_64": + mkdir /src/libogg-install/
Step #39 - "compile-libfuzzer-memory-x86_64": + cd /src/ogg
Step #39 - "compile-libfuzzer-memory-x86_64": + ./autogen.sh
Step #39 - "compile-libfuzzer-memory-x86_64": Updating build configuration files for libogg, please wait....
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: putting auxiliary files in '.'.
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file './ltmain.sh'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:5: installing './compile'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:5: installing './config.guess'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:5: installing './config.sub'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:9: installing './install-sh'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:9: installing './missing'
Step #39 - "compile-libfuzzer-memory-x86_64": src/Makefile.am: installing './depcomp'
Step #39 - "compile-libfuzzer-memory-x86_64": parallel-tests: installing './test-driver'
Step #39 - "compile-libfuzzer-memory-x86_64": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #39 - "compile-libfuzzer-memory-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #39 - "compile-libfuzzer-memory-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to print strings... printf
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gcc... clang
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether the C compiler works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for C compiler default output file name... a.out
Step #39 - "compile-libfuzzer-memory-x86_64": checking for suffix of executables... 
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are cross compiling... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for suffix of object files... o
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are using the GNU C compiler... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang accepts -g... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to accept ISO C89... none needed
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang understands -c and -o together... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #39 - "compile-libfuzzer-memory-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #39 - "compile-libfuzzer-memory-x86_64": checking for egrep... /usr/bin/grep -E
Step #39 - "compile-libfuzzer-memory-x86_64": checking for fgrep... /usr/bin/grep -F
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ld used by clang... /usr/bin/ld
Step #39 - "compile-libfuzzer-memory-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #39 - "compile-libfuzzer-memory-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether ln -s works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking the maximum length of command line arguments... 1572864
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #39 - "compile-libfuzzer-memory-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #39 - "compile-libfuzzer-memory-x86_64": checking for objdump... objdump
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to recognize dependent libraries... pass_all
Step #39 - "compile-libfuzzer-memory-x86_64": checking for dlltool... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ar... ar
Step #39 - "compile-libfuzzer-memory-x86_64": checking for archiver @FILE support... @
Step #39 - "compile-libfuzzer-memory-x86_64": checking for strip... strip
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ranlib... ranlib
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gawk... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for mawk... mawk
Step #39 - "compile-libfuzzer-memory-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sysroot... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a working dd... /usr/bin/dd
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #39 - "compile-libfuzzer-memory-x86_64": checking for mt... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking if : is a manifest tool... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to run the C preprocessor... clang -E
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ANSI C header files... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/types.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/stat.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for stdlib.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for string.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for memory.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for strings.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for inttypes.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for stdint.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for unistd.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for dlfcn.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for objdir... .libs
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang static flag -static works... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -c -o file.o... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to hardcode library paths into programs... immediate
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether stripping libraries is possible... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if libtool supports shared libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to build shared libraries... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to build static libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether build environment is sane... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make sets $(MAKE)... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make supports nested variables... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking dependency style of clang... gcc3
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gcc... (cached) clang
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang accepts -g... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for inttypes.h... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for stdint.h... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/types.h... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for an ANSI C-conforming const... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of int16_t... 2
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of uint16_t... 2
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of u_int16_t... 2
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of int32_t... 4
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of uint32_t... 4
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of u_int32_t... 4
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of int64_t... 8
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of uint64_t... 8
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of short... 2
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of int... 4
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of long... 8
Step #39 - "compile-libfuzzer-memory-x86_64": checking size of long long... 8
Step #39 - "compile-libfuzzer-memory-x86_64": checking for working memcmp... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking that generated files are newer than configure... done
Step #39 - "compile-libfuzzer-memory-x86_64": configure: creating ./config.status
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating src/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating doc/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating doc/libogg/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating include/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating include/ogg/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating include/ogg/config_types.h
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating libogg.spec
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating ogg.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating ogg-uninstalled.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating config.h
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: executing libtool commands
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: executing depfiles commands
Step #39 - "compile-libfuzzer-memory-x86_64": ++ nproc
Step #39 - "compile-libfuzzer-memory-x86_64": + make -j32
Step #39 - "compile-libfuzzer-memory-x86_64": make  all-recursive
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in src
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #39 - "compile-libfuzzer-memory-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #39 - "compile-libfuzzer-memory-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #39 - "compile-libfuzzer-memory-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #39 - "compile-libfuzzer-memory-x86_64": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #39 - "compile-libfuzzer-memory-x86_64": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #39 - "compile-libfuzzer-memory-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: link: ranlib .libs/libogg.a
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #39 - "compile-libfuzzer-memory-x86_64": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #39 - "compile-libfuzzer-memory-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link   -o test_bitwise test_bitwise-bitwise.o  
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -o test_bitwise test_bitwise-bitwise.o 
Step #39 - "compile-libfuzzer-memory-x86_64": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #39 - "compile-libfuzzer-memory-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link   -o test_framing test_framing-framing.o  
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -o test_framing test_framing-framing.o 
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in include
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in ogg
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in doc
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in libogg
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": + make install
Step #39 - "compile-libfuzzer-memory-x86_64": Making install in src
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #39 - "compile-libfuzzer-memory-x86_64":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #39 - "compile-libfuzzer-memory-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #39 - "compile-libfuzzer-memory-x86_64": ----------------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": Libraries have been installed in:
Step #39 - "compile-libfuzzer-memory-x86_64":    /src/libogg-install/lib
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64": If you ever happen to want to link against installed libraries
Step #39 - "compile-libfuzzer-memory-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #39 - "compile-libfuzzer-memory-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #39 - "compile-libfuzzer-memory-x86_64": flag during linking and do at least one of the following:
Step #39 - "compile-libfuzzer-memory-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #39 - "compile-libfuzzer-memory-x86_64":      during execution
Step #39 - "compile-libfuzzer-memory-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #39 - "compile-libfuzzer-memory-x86_64":      during linking
Step #39 - "compile-libfuzzer-memory-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #39 - "compile-libfuzzer-memory-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64": See any operating system documentation about shared libraries for
Step #39 - "compile-libfuzzer-memory-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #39 - "compile-libfuzzer-memory-x86_64": ----------------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Nothing to be done for 'install-data-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/ogg/src'
Step #39 - "compile-libfuzzer-memory-x86_64": Making install in include
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making install in ogg
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'install-data-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/ogg/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making install in doc
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": Making install in libogg
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/ogg/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Nothing to be done for 'install-exec-am'.
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #39 - "compile-libfuzzer-memory-x86_64":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/ogg'
Step #39 - "compile-libfuzzer-memory-x86_64": + cd /src/fuzzing-headers/
Step #39 - "compile-libfuzzer-memory-x86_64": + ./install.sh
Step #39 - "compile-libfuzzer-memory-x86_64": + cd /src/libtheora/
Step #39 - "compile-libfuzzer-memory-x86_64": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #39 - "compile-libfuzzer-memory-x86_64": + ./autogen.sh
Step #39 - "compile-libfuzzer-memory-x86_64": Updating build configuration files, please wait....
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: putting auxiliary files in '.'.
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file './ltmain.sh'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file 'm4/libtool.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file 'm4/ltoptions.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file 'm4/ltsugar.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file 'm4/ltversion.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:66: installing './compile'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:9: installing './config.guess'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:9: installing './config.sub'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:12: installing './install-sh'
Step #39 - "compile-libfuzzer-memory-x86_64": configure.ac:12: installing './missing'
Step #39 - "compile-libfuzzer-memory-x86_64": doc/spec/Makefile.am: installing './depcomp'
Step #39 - "compile-libfuzzer-memory-x86_64": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #39 - "compile-libfuzzer-memory-x86_64": parallel-tests: installing './test-driver'
Step #39 - "compile-libfuzzer-memory-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link = *sanitize=memory* ]]
Step #39 - "compile-libfuzzer-memory-x86_64": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #39 - "compile-libfuzzer-memory-x86_64": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --disable-asm --enable-static --disable-shared
Step #39 - "compile-libfuzzer-memory-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #39 - "compile-libfuzzer-memory-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether build environment is sane... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gawk... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for mawk... mawk
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make sets $(MAKE)... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make supports nested variables... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make supports nested variables... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gcc... clang
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether the C compiler works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for C compiler default output file name... a.out
Step #39 - "compile-libfuzzer-memory-x86_64": checking for suffix of executables... 
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are cross compiling... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for suffix of object files... o
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are using the GNU C compiler... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang accepts -g... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to accept ISO C89... none needed
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang understands -c and -o together... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking dependency style of clang... gcc3
Step #39 - "compile-libfuzzer-memory-x86_64": checking dependency style of clang... gcc3
Step #39 - "compile-libfuzzer-memory-x86_64": checking for gcc... (cached) clang
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang accepts -g... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking dependency style of clang... (cached) gcc3
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to run the C preprocessor... clang -E
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to print strings... printf
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #39 - "compile-libfuzzer-memory-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #39 - "compile-libfuzzer-memory-x86_64": checking for egrep... /usr/bin/grep -E
Step #39 - "compile-libfuzzer-memory-x86_64": checking for fgrep... /usr/bin/grep -F
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ld used by clang... /usr/bin/ld
Step #39 - "compile-libfuzzer-memory-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #39 - "compile-libfuzzer-memory-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether ln -s works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking the maximum length of command line arguments... 1572864
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #39 - "compile-libfuzzer-memory-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #39 - "compile-libfuzzer-memory-x86_64": checking for objdump... objdump
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to recognize dependent libraries... pass_all
Step #39 - "compile-libfuzzer-memory-x86_64": checking for dlltool... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ar... ar
Step #39 - "compile-libfuzzer-memory-x86_64": checking for archiver @FILE support... @
Step #39 - "compile-libfuzzer-memory-x86_64": checking for strip... strip
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ranlib... ranlib
Step #39 - "compile-libfuzzer-memory-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sysroot... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for a working dd... /usr/bin/dd
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #39 - "compile-libfuzzer-memory-x86_64": checking for mt... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking if : is a manifest tool... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ANSI C header files... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/types.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/stat.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for stdlib.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for string.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for memory.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for strings.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for inttypes.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for stdint.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for unistd.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for dlfcn.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for objdir... .libs
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang static flag -static works... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -c -o file.o... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to hardcode library paths into programs... immediate
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether stripping libraries is possible... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking if libtool supports shared libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to build shared libraries... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking whether to build static libraries... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for doxygen... false
Step #39 - "compile-libfuzzer-memory-x86_64": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #39 - "compile-libfuzzer-memory-x86_64": checking for pdflatex... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for bibtex... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for fig2dev... no
Step #39 - "compile-libfuzzer-memory-x86_64": configure: Checking for packages in ./doc/spec/spec.tex...
Step #39 - "compile-libfuzzer-memory-x86_64": configure: WARNING: *** Format Specification will not built.
Step #39 - "compile-libfuzzer-memory-x86_64": checking for ld used by clang... (cached) /usr/bin/ld
Step #39 - "compile-libfuzzer-memory-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking how to control symbol export... --version-script
Step #39 - "compile-libfuzzer-memory-x86_64": checking for pkg-config... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for Ogg... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for oggpackB_read... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for Vorbis... no
Step #39 - "compile-libfuzzer-memory-x86_64": *** Could not run Vorbis test program, checking why...
Step #39 - "compile-libfuzzer-memory-x86_64": *** The test program failed to compile or link. See the file config.log for the
Step #39 - "compile-libfuzzer-memory-x86_64": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #39 - "compile-libfuzzer-memory-x86_64": *** or that you have moved Vorbis since it was installed.
Step #39 - "compile-libfuzzer-memory-x86_64": checking sys/soundcard.h usability... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking sys/soundcard.h presence... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for sys/soundcard.h... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for TIFFReadRGBAImage in -ltiff... no
Step #39 - "compile-libfuzzer-memory-x86_64": checking for clock_gettime... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking for getopt_long... yes
Step #39 - "compile-libfuzzer-memory-x86_64": checking that generated files are newer than configure... done
Step #39 - "compile-libfuzzer-memory-x86_64": configure: creating ./config.status
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating lib/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating lib/arm/armopts.s
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating include/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating include/theora/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating examples/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating doc/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating doc/Doxyfile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating doc/spec/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating tests/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating m4/Makefile
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating libtheora.spec
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theora.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theora-uninstalled.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theoradec.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theoradec-uninstalled.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theoraenc.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating theoraenc-uninstalled.pc
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: creating config.h
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: executing depfiles commands
Step #39 - "compile-libfuzzer-memory-x86_64": config.status: executing libtool commands
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64": ------------------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64":   libtheora 1.2.0:  Automatic configuration OK.
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":   General configuration:
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":     Encoding support: ........... no
Step #39 - "compile-libfuzzer-memory-x86_64":     Assembly optimization: ...... disabled
Step #39 - "compile-libfuzzer-memory-x86_64":     Debugging telemetry: ........ no
Step #39 - "compile-libfuzzer-memory-x86_64":     Abort on huge files: ........ no
Step #39 - "compile-libfuzzer-memory-x86_64":     Build example code: ......... no
Step #39 - "compile-libfuzzer-memory-x86_64":     API Documentation: .......... no
Step #39 - "compile-libfuzzer-memory-x86_64":     Format Documentation: ....... no
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":   Installation paths:
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":     libtheora: ................... /usr/local/lib
Step #39 - "compile-libfuzzer-memory-x86_64":     C header files: .............. /usr/local/include/theora
Step #39 - "compile-libfuzzer-memory-x86_64":     Documentation: ............... /usr/local/share/doc/libtheora
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":   Building:
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":     Type 'make' to compile libtheora.
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":     Type 'make install' to install libtheora.
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64":   Example programs will be built but not installed.
Step #39 - "compile-libfuzzer-memory-x86_64": ------------------------------------------------------------------------
Step #39 - "compile-libfuzzer-memory-x86_64": 
Step #39 - "compile-libfuzzer-memory-x86_64": ++ nproc
Step #39 - "compile-libfuzzer-memory-x86_64": + make -j32
Step #39 - "compile-libfuzzer-memory-x86_64": make  all-recursive
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Entering directory '/src/libtheora'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in lib
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora/lib'
Step #39 - "compile-libfuzzer-memory-x86_64": make  all-am
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/libtheora/lib'
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       apiwrapper.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       bitpack.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       decapiwrapper.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       decinfo.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       decode.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       dequant.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       fragment.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       huffdec.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       idct.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       info.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       internal.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       quant.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       state.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       encoder_disabled.lo
Step #39 - "compile-libfuzzer-memory-x86_64":   CCLD     libtheoraenc.la
Step #39 - "compile-libfuzzer-memory-x86_64":   CCLD     libtheoradec.la
Step #39 - "compile-libfuzzer-memory-x86_64":   CCLD     libtheora.la
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/libtheora/lib'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora/lib'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in include
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in theora
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/libtheora/include/theora'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/libtheora/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/libtheora/include'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora/include'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in doc
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in spec
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #39 - "compile-libfuzzer-memory-x86_64":   CC       vp3huff.o
Step #39 - "compile-libfuzzer-memory-x86_64":   CCLD     vp3huff
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Entering directory '/src/libtheora/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #39 - "compile-libfuzzer-memory-x86_64": *** Warning: Doxygen not found; documentation will not be built.
Step #39 - "compile-libfuzzer-memory-x86_64": touch doxygen-build.stamp
Step #39 - "compile-libfuzzer-memory-x86_64": make[3]: Leaving directory '/src/libtheora/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora/doc'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in tests
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora/tests'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Nothing to be done for 'all'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora/tests'
Step #39 - "compile-libfuzzer-memory-x86_64": Making all in m4
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora/m4'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Nothing to be done for 'all'.
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora/m4'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Entering directory '/src/libtheora'
Step #39 - "compile-libfuzzer-memory-x86_64": make[2]: Leaving directory '/src/libtheora'
Step #39 - "compile-libfuzzer-memory-x86_64": make[1]: Leaving directory '/src/libtheora'
Step #39 - "compile-libfuzzer-memory-x86_64": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #39 - "compile-libfuzzer-memory-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=memory -fsanitize-memory-track-origins -fsanitize=fuzzer-no-link -stdlib=libc++ -DMSAN -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a -fsanitize=fuzzer -o /workspace/out/libfuzzer-memory-x86_64/fuzzer-decoder
Finished Step #39 - "compile-libfuzzer-memory-x86_64"
Starting Step #40 - "build-check-libfuzzer-memory-x86_64"
Step #40 - "build-check-libfuzzer-memory-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #40 - "build-check-libfuzzer-memory-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpvdygtxf_/fuzzer-decoder
Finished Step #40 - "build-check-libfuzzer-memory-x86_64"
Starting Step #41
Step #41: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #41
Starting Step #42
Step #42: Already have image: gcr.io/oss-fuzz/libtheora
Step #42:   adding: fuzzer-decoder (deflated 65%)
Step #42:   adding: llvm-symbolizer (deflated 65%)
Finished Step #42
Starting Step #43
Step #43: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #43:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #43:                                  Dload  Upload   Total   Spent    Left  Speed
Step #43:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3385 --:--:-- --:--:-- --:--:--  3396
Finished Step #43
Starting Step #44
Step #44: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #44:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #44:                                  Dload  Upload   Total   Spent    Left  Speed
Step #44:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 42 4408k    0     0   42 1872k      0  25.5M --:--:-- --:--:-- --:--:-- 25.3M100 4408k    0     0  100 4408k      0  18.5M --:--:-- --:--:-- --:--:-- 18.4M
Finished Step #44
Starting Step #45
Step #45: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #45:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #45:                                  Dload  Upload   Total   Spent    Left  Speed
Step #45:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     63 --:--:-- --:--:-- --:--:--    63
Finished Step #45
Starting Step #46
Step #46: Already have image (with digest): gcr.io/cloud-builders/curl
Step #46:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #46:                                  Dload  Upload   Total   Spent    Left  Speed
Step #46:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    33    0     0  100    33      0    176 --:--:-- --:--:-- --:--:--   176
Finished Step #46
Starting Step #47
Step #47: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #47
Starting Step #48 - "compile-libfuzzer-undefined-x86_64"
Step #48 - "compile-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": vm.mmap_rnd_bits = 28
Step #48 - "compile-libfuzzer-undefined-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": CC=clang
Step #48 - "compile-libfuzzer-undefined-x86_64": CXX=clang++
Step #48 - "compile-libfuzzer-undefined-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function
Step #48 - "compile-libfuzzer-undefined-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++
Step #48 - "compile-libfuzzer-undefined-x86_64": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #48 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function = *sanitize=address* ]]
Step #48 - "compile-libfuzzer-undefined-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function = *sanitize=memory* ]]
Step #48 - "compile-libfuzzer-undefined-x86_64": + mkdir /src/libogg-install/
Step #48 - "compile-libfuzzer-undefined-x86_64": + cd /src/ogg
Step #48 - "compile-libfuzzer-undefined-x86_64": + ./autogen.sh
Step #48 - "compile-libfuzzer-undefined-x86_64": Updating build configuration files for libogg, please wait....
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting auxiliary files in '.'.
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file './ltmain.sh'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:5: installing './compile'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:5: installing './config.guess'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:5: installing './config.sub'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:9: installing './install-sh'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:9: installing './missing'
Step #48 - "compile-libfuzzer-undefined-x86_64": src/Makefile.am: installing './depcomp'
Step #48 - "compile-libfuzzer-undefined-x86_64": parallel-tests: installing './test-driver'
Step #48 - "compile-libfuzzer-undefined-x86_64": + ./configure --prefix=/src/libogg-install --enable-static --disable-shared --disable-crc
Step #48 - "compile-libfuzzer-undefined-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #48 - "compile-libfuzzer-undefined-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to print strings... printf
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gcc... clang
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether the C compiler works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for C compiler default output file name... a.out
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for suffix of executables... 
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are cross compiling... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for suffix of object files... o
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... none needed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for egrep... /usr/bin/grep -E
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for fgrep... /usr/bin/grep -F
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang... /usr/bin/ld
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #48 - "compile-libfuzzer-undefined-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether ln -s works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking the maximum length of command line arguments... 1572864
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for objdump... objdump
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to recognize dependent libraries... pass_all
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for dlltool... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ar... ar
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for archiver @FILE support... @
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for strip... strip
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ranlib... ranlib
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gawk... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for mawk... mawk
Step #48 - "compile-libfuzzer-undefined-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sysroot... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a working dd... /usr/bin/dd
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for mt... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if : is a manifest tool... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to run the C preprocessor... clang -E
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ANSI C header files... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/types.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/stat.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for stdlib.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for string.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for memory.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for strings.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for inttypes.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for stdint.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for unistd.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for dlfcn.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for objdir... .libs
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -fno-rtti -fno-exceptions... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang static flag -static works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to hardcode library paths into programs... immediate
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether stripping libraries is possible... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if libtool supports shared libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to build shared libraries... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to build static libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether build environment is sane... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make sets $(MAKE)... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... gcc3
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gcc... (cached) clang
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for inttypes.h... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for stdint.h... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/types.h... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for an ANSI C-conforming const... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of int16_t... 2
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of uint16_t... 2
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of u_int16_t... 2
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of int32_t... 4
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of uint32_t... 4
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of u_int32_t... 4
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of int64_t... 8
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of uint64_t... 8
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of short... 2
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of int... 4
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of long... 8
Step #48 - "compile-libfuzzer-undefined-x86_64": checking size of long long... 8
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for working memcmp... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking that generated files are newer than configure... done
Step #48 - "compile-libfuzzer-undefined-x86_64": configure: creating ./config.status
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating src/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating doc/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating doc/libogg/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/ogg/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/ogg/config_types.h
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating libogg.spec
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating ogg.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating ogg-uninstalled.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating config.h
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: executing libtool commands
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: executing depfiles commands
Step #48 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #48 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #48 - "compile-libfuzzer-undefined-x86_64": make  all-recursive
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in src
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT test_bitwise-bitwise.o -MD -MP -MF .deps/test_bitwise-bitwise.Tpo -c -o test_bitwise-bitwise.o `test -f 'bitwise.c' || echo './'`bitwise.c
Step #48 - "compile-libfuzzer-undefined-x86_64": clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include  -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT test_framing-framing.o -MD -MP -MF .deps/test_framing-framing.Tpo -c -o test_framing-framing.o `test -f 'framing.c' || echo './'`framing.c
Step #48 - "compile-libfuzzer-undefined-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c -o framing.lo framing.c
Step #48 - "compile-libfuzzer-undefined-x86_64": /bin/bash ../libtool  --tag=CC   --mode=compile clang -DHAVE_CONFIG_H -I. -I..  -I../include -I../include   -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c -o bitwise.lo bitwise.c
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT bitwise.lo -MD -MP -MF .deps/bitwise.Tpo -c bitwise.c -o bitwise.o
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: compile:  clang -DHAVE_CONFIG_H -I. -I.. -I../include -I../include -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -MT framing.lo -MD -MP -MF .deps/framing.Tpo -c framing.c -o framing.o
Step #48 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/bitwise.Tpo .deps/bitwise.Plo
Step #48 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/framing.Tpo .deps/framing.Plo
Step #48 - "compile-libfuzzer-undefined-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang  -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -no-undefined -version-info 8:6:8  -o libogg.la -rpath /src/libogg-install/lib framing.lo bitwise.lo  
Step #48 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/test_bitwise-bitwise.Tpo .deps/test_bitwise-bitwise.Po
Step #48 - "compile-libfuzzer-undefined-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function   -o test_bitwise test_bitwise-bitwise.o  
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: link: ar cr .libs/libogg.a  framing.o bitwise.o
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: link: ranlib .libs/libogg.a
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: link: ( cd ".libs" && rm -f "libogg.la" && ln -s "../libogg.la" "libogg.la" )
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -o test_bitwise test_bitwise-bitwise.o 
Step #48 - "compile-libfuzzer-undefined-x86_64": mv -f .deps/test_framing-framing.Tpo .deps/test_framing-framing.Po
Step #48 - "compile-libfuzzer-undefined-x86_64": /bin/bash ../libtool  --tag=CC   --mode=link clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function   -o test_framing test_framing-framing.o  
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: link: clang -D_V_SELFTEST -O2 -Wall -Wextra -ffast-math -fsigned-char -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -o test_framing test_framing-framing.o 
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in include
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in ogg
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in doc
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in libogg
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": + make install
Step #48 - "compile-libfuzzer-undefined-x86_64": Making install in src
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /bin/bash ../libtool   --mode=install /usr/bin/install -c   libogg.la '/src/libogg-install/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.lai /src/libogg-install/lib/libogg.la
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: install: /usr/bin/install -c .libs/libogg.a /src/libogg-install/lib/libogg.a
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: install: chmod 644 /src/libogg-install/lib/libogg.a
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: install: ranlib /src/libogg-install/lib/libogg.a
Step #48 - "compile-libfuzzer-undefined-x86_64": libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/out:/sbin" ldconfig -n /src/libogg-install/lib
Step #48 - "compile-libfuzzer-undefined-x86_64": ----------------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": Libraries have been installed in:
Step #48 - "compile-libfuzzer-undefined-x86_64":    /src/libogg-install/lib
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64": If you ever happen to want to link against installed libraries
Step #48 - "compile-libfuzzer-undefined-x86_64": in a given directory, LIBDIR, you must either use libtool, and
Step #48 - "compile-libfuzzer-undefined-x86_64": specify the full pathname of the library, or use the '-LLIBDIR'
Step #48 - "compile-libfuzzer-undefined-x86_64": flag during linking and do at least one of the following:
Step #48 - "compile-libfuzzer-undefined-x86_64":    - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
Step #48 - "compile-libfuzzer-undefined-x86_64":      during execution
Step #48 - "compile-libfuzzer-undefined-x86_64":    - add LIBDIR to the 'LD_RUN_PATH' environment variable
Step #48 - "compile-libfuzzer-undefined-x86_64":      during linking
Step #48 - "compile-libfuzzer-undefined-x86_64":    - use the '-Wl,-rpath -Wl,LIBDIR' linker flag
Step #48 - "compile-libfuzzer-undefined-x86_64":    - have your system administrator add LIBDIR to '/etc/ld.so.conf'
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64": See any operating system documentation about shared libraries for
Step #48 - "compile-libfuzzer-undefined-x86_64": more information, such as the ld(1) and ld.so(8) manual pages.
Step #48 - "compile-libfuzzer-undefined-x86_64": ----------------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Nothing to be done for 'install-data-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/ogg/src'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making install in include
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making install in ogg
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 config_types.h '/src/libogg-install/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 ogg.h os_types.h '/src/libogg-install/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/include/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'install-data-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/ogg/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making install in doc
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making install in libogg
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 bitpacking.html datastructures.html decoding.html encoding.html general.html index.html ogg_iovec_t.html ogg_packet.html ogg_packet_clear.html ogg_page.html ogg_page_bos.html ogg_page_checksum_set.html ogg_page_continued.html ogg_page_eos.html ogg_page_granulepos.html ogg_page_packets.html ogg_page_pageno.html ogg_page_serialno.html ogg_page_version.html ogg_stream_check.html ogg_stream_clear.html ogg_stream_destroy.html ogg_stream_eos.html ogg_stream_flush.html ogg_stream_flush_fill.html ogg_stream_init.html ogg_stream_iovecin.html ogg_stream_packetin.html ogg_stream_packetout.html ogg_stream_packetpeek.html ogg_stream_pagein.html ogg_stream_pageout.html ogg_stream_pageout_fill.html ogg_stream_reset.html ogg_stream_reset_serialno.html ogg_stream_state.html ogg_sync_buffer.html ogg_sync_check.html ogg_sync_clear.html ogg_sync_destroy.html '/src/libogg-install/share/doc/libogg/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 ogg_sync_init.html ogg_sync_pageout.html ogg_sync_pageseek.html ogg_sync_reset.html ogg_sync_state.html ogg_sync_wrote.html oggpack_adv.html oggpack_adv1.html oggpack_bits.html oggpack_buffer.html oggpack_bytes.html oggpack_get_buffer.html oggpack_look.html oggpack_look1.html oggpack_read.html oggpack_read1.html oggpack_readinit.html oggpack_reset.html oggpack_write.html oggpack_writealign.html oggpack_writecheck.html oggpack_writeclear.html oggpack_writecopy.html oggpack_writeinit.html oggpack_writetrunc.html overview.html reference.html style.css '/src/libogg-install/share/doc/libogg/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'install-exec-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 framing.html index.html oggstream.html ogg-multiplex.html fish_xiph_org.png multiplex1.png packets.png pages.png stream.png vorbisword2.png white-ogg.png white-xifish.png rfc3533.txt rfc5334.txt skeleton.html '/src/libogg-install/share/doc/libogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/ogg/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Nothing to be done for 'install-exec-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/share/aclocal'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 ogg.m4 '/src/libogg-install/share/aclocal'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/mkdir -p '/src/libogg-install/lib/pkgconfig'
Step #48 - "compile-libfuzzer-undefined-x86_64":  /usr/bin/install -c -m 644 ogg.pc '/src/libogg-install/lib/pkgconfig'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/ogg'
Step #48 - "compile-libfuzzer-undefined-x86_64": + cd /src/fuzzing-headers/
Step #48 - "compile-libfuzzer-undefined-x86_64": + ./install.sh
Step #48 - "compile-libfuzzer-undefined-x86_64": + cd /src/libtheora/
Step #48 - "compile-libfuzzer-undefined-x86_64": + sed -i 's/AC_PREREQ(\[[^]]*\])/AC_PREREQ([2.60])/' configure.ac
Step #48 - "compile-libfuzzer-undefined-x86_64": + ./autogen.sh
Step #48 - "compile-libfuzzer-undefined-x86_64": Updating build configuration files, please wait....
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting auxiliary files in '.'.
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file './ltmain.sh'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file 'm4/libtool.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file 'm4/ltoptions.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file 'm4/ltsugar.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file 'm4/ltversion.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": libtoolize: linking file 'm4/lt~obsolete.m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:66: installing './compile'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:9: installing './config.guess'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:9: installing './config.sub'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:12: installing './install-sh'
Step #48 - "compile-libfuzzer-undefined-x86_64": configure.ac:12: installing './missing'
Step #48 - "compile-libfuzzer-undefined-x86_64": doc/spec/Makefile.am: installing './depcomp'
Step #48 - "compile-libfuzzer-undefined-x86_64": lib/Makefile.am:306: warning: '%'-style pattern rules are a GNU make extension
Step #48 - "compile-libfuzzer-undefined-x86_64": parallel-tests: installing './test-driver'
Step #48 - "compile-libfuzzer-undefined-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function = *sanitize=memory* ]]
Step #48 - "compile-libfuzzer-undefined-x86_64": + [[ -O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function = *-m32* ]]
Step #48 - "compile-libfuzzer-undefined-x86_64": + LD_LIBRARY_PATH=/src/libogg-install/lib
Step #48 - "compile-libfuzzer-undefined-x86_64": + ./configure --with-ogg=/src/libogg-install --disable-encode --disable-examples --enable-static --disable-shared
Step #48 - "compile-libfuzzer-undefined-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #48 - "compile-libfuzzer-undefined-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether build environment is sane... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gawk... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for mawk... mawk
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make sets $(MAKE)... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to enable maintainer-specific portions of Makefiles... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gcc... clang
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether the C compiler works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for C compiler default output file name... a.out
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for suffix of executables... 
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are cross compiling... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for suffix of object files... o
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... none needed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... gcc3
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... gcc3
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for gcc... (cached) clang
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... (cached) gcc3
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to run the C preprocessor... clang -E
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to print strings... printf
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for egrep... /usr/bin/grep -E
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for fgrep... /usr/bin/grep -F
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang... /usr/bin/ld
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #48 - "compile-libfuzzer-undefined-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether ln -s works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking the maximum length of command line arguments... 1572864
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for objdump... objdump
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to recognize dependent libraries... pass_all
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for dlltool... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ar... ar
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for archiver @FILE support... @
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for strip... strip
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ranlib... ranlib
Step #48 - "compile-libfuzzer-undefined-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sysroot... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for a working dd... /usr/bin/dd
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for mt... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if : is a manifest tool... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ANSI C header files... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/types.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/stat.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for stdlib.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for string.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for memory.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for strings.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for inttypes.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for stdint.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for unistd.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for dlfcn.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for objdir... .libs
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -fno-rtti -fno-exceptions... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang static flag -static works... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to hardcode library paths into programs... immediate
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether stripping libraries is possible... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if libtool supports shared libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to build shared libraries... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking whether to build static libraries... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for doxygen... false
Step #48 - "compile-libfuzzer-undefined-x86_64": configure: WARNING: *** doxygen not found, API documentation will not be built
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for pdflatex... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for bibtex... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for fig2dev... no
Step #48 - "compile-libfuzzer-undefined-x86_64": configure: Checking for packages in ./doc/spec/spec.tex...
Step #48 - "compile-libfuzzer-undefined-x86_64": configure: WARNING: *** Format Specification will not built.
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang... (cached) /usr/bin/ld
Step #48 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... (cached) yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking how to control symbol export... --version-script
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for pkg-config... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for Ogg... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for oggpackB_read... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for Vorbis... no
Step #48 - "compile-libfuzzer-undefined-x86_64": *** Could not run Vorbis test program, checking why...
Step #48 - "compile-libfuzzer-undefined-x86_64": *** The test program failed to compile or link. See the file config.log for the
Step #48 - "compile-libfuzzer-undefined-x86_64": *** exact error that occurred. This usually means Vorbis was incorrectly installed
Step #48 - "compile-libfuzzer-undefined-x86_64": *** or that you have moved Vorbis since it was installed.
Step #48 - "compile-libfuzzer-undefined-x86_64": checking sys/soundcard.h usability... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking sys/soundcard.h presence... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for sys/soundcard.h... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for TIFFReadRGBAImage in -ltiff... no
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for clock_gettime... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking for getopt_long... yes
Step #48 - "compile-libfuzzer-undefined-x86_64": checking that generated files are newer than configure... done
Step #48 - "compile-libfuzzer-undefined-x86_64": configure: creating ./config.status
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating lib/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating lib/arm/armopts.s
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/theora/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating examples/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating doc/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating doc/Doxyfile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating doc/spec/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating tests/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating m4/Makefile
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating libtheora.spec
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theora.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theora-uninstalled.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theoradec.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theoradec-uninstalled.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theoraenc.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating theoraenc-uninstalled.pc
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: creating config.h
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: executing depfiles commands
Step #48 - "compile-libfuzzer-undefined-x86_64": config.status: executing libtool commands
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64": ------------------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64":   libtheora 1.2.0:  Automatic configuration OK.
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":   General configuration:
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":     Encoding support: ........... no
Step #48 - "compile-libfuzzer-undefined-x86_64":     Assembly optimization: ...... 64 bit x86
Step #48 - "compile-libfuzzer-undefined-x86_64":     Debugging telemetry: ........ no
Step #48 - "compile-libfuzzer-undefined-x86_64":     Abort on huge files: ........ no
Step #48 - "compile-libfuzzer-undefined-x86_64":     Build example code: ......... no
Step #48 - "compile-libfuzzer-undefined-x86_64":     API Documentation: .......... no
Step #48 - "compile-libfuzzer-undefined-x86_64":     Format Documentation: ....... no
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":   Installation paths:
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":     libtheora: ................... /usr/local/lib
Step #48 - "compile-libfuzzer-undefined-x86_64":     C header files: .............. /usr/local/include/theora
Step #48 - "compile-libfuzzer-undefined-x86_64":     Documentation: ............... /usr/local/share/doc/libtheora
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":   Building:
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":     Type 'make' to compile libtheora.
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":     Type 'make install' to install libtheora.
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":     Type 'make check' to run test suite (Valgrind testing not enabled)
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64":   Example programs will be built but not installed.
Step #48 - "compile-libfuzzer-undefined-x86_64": ------------------------------------------------------------------------
Step #48 - "compile-libfuzzer-undefined-x86_64": 
Step #48 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #48 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #48 - "compile-libfuzzer-undefined-x86_64": make  all-recursive
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/src/libtheora'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in lib
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64": make  all-am
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/libtheora/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       apiwrapper.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       bitpack.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       decapiwrapper.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       decinfo.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       decode.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       dequant.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       fragment.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       huffdec.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       idct.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       info.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       internal.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       quant.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       state.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       encoder_disabled.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/x86cpu.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/mmxidct.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/mmxfrag.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/mmxstate.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/sse2idct.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       x86/x86state.lo
Step #48 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtheoraenc.la
Step #48 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtheoradec.la
Step #48 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtheora.la
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/libtheora/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora/lib'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in include
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in theora
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/libtheora/include/theora'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/libtheora/include/theora'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/libtheora/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/libtheora/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora/include'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in doc
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in spec
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/libtheora/doc/spec'
Step #48 - "compile-libfuzzer-undefined-x86_64":   CC       vp3huff.o
Step #48 - "compile-libfuzzer-undefined-x86_64":   CCLD     vp3huff
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/libtheora/doc/spec'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/src/libtheora/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": echo "*** Warning: Doxygen not found; documentation will not be built."
Step #48 - "compile-libfuzzer-undefined-x86_64": *** Warning: Doxygen not found; documentation will not be built.
Step #48 - "compile-libfuzzer-undefined-x86_64": touch doxygen-build.stamp
Step #48 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/src/libtheora/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora/doc'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in tests
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora/tests'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Nothing to be done for 'all'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora/tests'
Step #48 - "compile-libfuzzer-undefined-x86_64": Making all in m4
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora/m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Nothing to be done for 'all'.
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora/m4'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/src/libtheora'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/src/libtheora'
Step #48 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/src/libtheora'
Step #48 - "compile-libfuzzer-undefined-x86_64": + cd /src/oss-fuzz-fuzzers/libtheora/
Step #48 - "compile-libfuzzer-undefined-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++ -I /src/libtheora/include/ -I /src/libogg-install/include fuzzer.cpp /src/libtheora/lib/.libs/libtheora.a -fsanitize=fuzzer -o /workspace/out/libfuzzer-undefined-x86_64/fuzzer-decoder
Finished Step #48 - "compile-libfuzzer-undefined-x86_64"
Starting Step #49 - "build-check-libfuzzer-undefined-x86_64"
Step #49 - "build-check-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #49 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp3nh7ndhw/fuzzer-decoder
Finished Step #49 - "build-check-libfuzzer-undefined-x86_64"
Starting Step #50
Step #50: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #50
Starting Step #51
Step #51: Already have image: gcr.io/oss-fuzz/libtheora
Step #51:   adding: fuzzer-decoder (deflated 65%)
Step #51:   adding: llvm-symbolizer (deflated 65%)
Finished Step #51
Starting Step #52
Step #52: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #52:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #52:                                  Dload  Upload   Total   Spent    Left  Speed
Step #52:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   642    0     0  100   642      0   3398 --:--:-- --:--:-- --:--:--  3414
Finished Step #52
Starting Step #53
Step #53: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #53:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #53:                                  Dload  Upload   Total   Spent    Left  Speed
Step #53:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 3583k    0     0  100 3583k      0  13.9M --:--:-- --:--:-- --:--:-- 13.9M
Finished Step #53
Starting Step #54
Step #54: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #54:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #54:                                  Dload  Upload   Total   Spent    Left  Speed
Step #54:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    15    0     0  100    15      0     58 --:--:-- --:--:-- --:--:--    58
Finished Step #54
Starting Step #55
Step #55: Already have image (with digest): gcr.io/cloud-builders/curl
Step #55:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #55:                                  Dload  Upload   Total   Spent    Left  Speed
Step #55:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    36    0     0  100    36      0    177 --:--:-- --:--:-- --:--:--   176100    36    0     0  100    36      0    176 --:--:-- --:--:-- --:--:--   175
Finished Step #55
Starting Step #56
Step #56: Already have image: gcr.io/oss-fuzz/libtheora
Finished Step #56
PUSH
DONE
