starting build "2c948324-bbdc-460d-8ebb-399ab0f6837c"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206"
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Sending build context to Docker daemon   5.12kB
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Step 1/5 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b549f31133a9: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7c5c1e3302c: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 4d10d210e237: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a0e72f3ecde7: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 29dc64ba5758: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": aeb5712dbfb1: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 2ac0d5abe89f: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 392a9ee6a997: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 130aa5f6198c: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 29dc64ba5758: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e6dd266af302: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": aeb5712dbfb1: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f9f867d1983b: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0cbfb74c6717: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f009d5fcbf7c: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a0e72f3ecde7: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": cf96d6c3761b: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 2ac0d5abe89f: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 392a9ee6a997: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 15700a076335: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 130aa5f6198c: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f89bba1b24a7: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0cbfb74c6717: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 86fb9281e3f3: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e6dd266af302: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f9f867d1983b: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f009d5fcbf7c: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": cf96d6c3761b: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 309c26e601f8: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 7fb381b5997d: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0de482a74ef7: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 309c26e601f8: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 7fb381b5997d: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 17fc4f6ea710: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0de482a74ef7: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 86fb9281e3f3: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f89bba1b24a7: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bff8c9bba403: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 15700a076335: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 3bdd50f6b837: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e0ad7b16073b: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0a9e3d85d272: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bff8c9bba403: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": dfb2e61d7c68: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 3bdd50f6b837: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9f4f662f63dc: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0a9e3d85d272: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": dfb2e61d7c68: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0aeced434930: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9eef757c4076: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0aeced434930: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9f4f662f63dc: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9eef757c4076: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 6b698a788045: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bc5e6086f3c0: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7481b367256: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a3b71657f2de: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bc5e6086f3c0: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b9007560d059: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 6b698a788045: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a5ae13fd435c: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a3b71657f2de: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b9007560d059: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 320c0cc4ab9f: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 11bec1929cef: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f6ec5b54eee1: Pulling fs layer
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a5ae13fd435c: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 320c0cc4ab9f: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 11bec1929cef: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f6ec5b54eee1: Waiting
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 4d10d210e237: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 4d10d210e237: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b549f31133a9: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b549f31133a9: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a0e72f3ecde7: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a0e72f3ecde7: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 29dc64ba5758: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 29dc64ba5758: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 2ac0d5abe89f: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 2ac0d5abe89f: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7c5c1e3302c: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7c5c1e3302c: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 392a9ee6a997: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 392a9ee6a997: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b549f31133a9: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e6dd266af302: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e6dd266af302: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f9f867d1983b: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f9f867d1983b: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0cbfb74c6717: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0cbfb74c6717: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f009d5fcbf7c: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f009d5fcbf7c: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": cf96d6c3761b: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": cf96d6c3761b: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 15700a076335: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 15700a076335: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f89bba1b24a7: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f89bba1b24a7: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 86fb9281e3f3: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 86fb9281e3f3: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 309c26e601f8: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 309c26e601f8: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 7fb381b5997d: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0de482a74ef7: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0de482a74ef7: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 17fc4f6ea710: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 17fc4f6ea710: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bff8c9bba403: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bff8c9bba403: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7c5c1e3302c: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 3bdd50f6b837: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 3bdd50f6b837: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 4d10d210e237: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": aeb5712dbfb1: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": aeb5712dbfb1: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e0ad7b16073b: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e0ad7b16073b: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0a9e3d85d272: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0a9e3d85d272: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": dfb2e61d7c68: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": dfb2e61d7c68: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9f4f662f63dc: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9f4f662f63dc: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9eef757c4076: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9eef757c4076: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0aeced434930: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0aeced434930: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bc5e6086f3c0: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 6b698a788045: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 6b698a788045: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7481b367256: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7481b367256: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a3b71657f2de: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a3b71657f2de: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b9007560d059: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a5ae13fd435c: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 320c0cc4ab9f: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 320c0cc4ab9f: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a0e72f3ecde7: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 29dc64ba5758: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 11bec1929cef: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 11bec1929cef: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f6ec5b54eee1: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f6ec5b54eee1: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 130aa5f6198c: Verifying Checksum
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 130aa5f6198c: Download complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": aeb5712dbfb1: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 2ac0d5abe89f: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 392a9ee6a997: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 130aa5f6198c: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e6dd266af302: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f9f867d1983b: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0cbfb74c6717: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f009d5fcbf7c: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": cf96d6c3761b: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 15700a076335: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f89bba1b24a7: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 86fb9281e3f3: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 309c26e601f8: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 7fb381b5997d: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0de482a74ef7: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 17fc4f6ea710: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bff8c9bba403: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 3bdd50f6b837: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e0ad7b16073b: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0a9e3d85d272: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": dfb2e61d7c68: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9f4f662f63dc: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0aeced434930: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 9eef757c4076: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 6b698a788045: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": bc5e6086f3c0: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": e7481b367256: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a3b71657f2de: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": b9007560d059: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": a5ae13fd435c: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 320c0cc4ab9f: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 11bec1929cef: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": f6ec5b54eee1: Pull complete
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Digest: sha256:c2d93f6861bc383a4b035f84c4a0dbb5cef5e0df319c88e3f2f76da8b8a5a41f
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> afb78f3bd8a4
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Step 2/5 : RUN         apt-get update &&         apt-get install -y         make autoconf automake libtool         libstdc++-9-dev         libssl-dev libseccomp-dev pkg-config
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> Running in 71ca37778cf0
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [128 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [128 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease [128 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Fetched 383 kB in 1s (719 kB/s)
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Reading package lists...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Reading package lists...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Building dependency tree...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Reading state information...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": make is already the newest version (4.2.1-1.2).
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": make set to manually installed.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": libssl-dev is already the newest version (1.1.1f-1ubuntu2.24).
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": libstdc++-9-dev is already the newest version (9.4.0-1ubuntu1~20.04.2).
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": libstdc++-9-dev set to manually installed.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": The following additional packages will be installed:
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   file libglib2.0-0 libglib2.0-data libicu66 libltdl-dev libltdl7 libmagic-mgc
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   libmagic1 libxml2 shared-mime-info xdg-user-dirs
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Suggested packages:
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   autoconf-archive gnu-standards autoconf-doc gettext libtool-doc seccomp
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   gfortran | fortran95-compiler gcj-jdk
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": The following NEW packages will be installed:
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   autoconf automake file libglib2.0-0 libglib2.0-data libicu66 libltdl-dev
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   libltdl7 libmagic-mgc libmagic1 libseccomp-dev libtool libxml2 pkg-config
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":   shared-mime-info xdg-user-dirs
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": 0 upgraded, 16 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Need to get 12.6 MB of archives.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": After this operation, 55.9 MB of additional disk space will be used.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic-mgc amd64 1:5.38-4 [218 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic1 amd64 1:5.38-4 [75.9 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 file amd64 1:5.38-4 [23.3 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-0 amd64 2.64.6-1~ubuntu20.04.9 [1290 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-data all 2.64.6-1~ubuntu20.04.9 [5836 B]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libicu66 amd64 66.1-2ubuntu2.1 [8515 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libxml2 amd64 2.9.10+dfsg-5ubuntu0.20.04.10 [640 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 shared-mime-info amd64 1.15-1 [430 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:9 http://archive.ubuntu.com/ubuntu focal/main amd64 xdg-user-dirs amd64 0.17-2ubuntu1 [48.3 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:11 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl7 amd64 2.4.6-14 [38.5 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:13 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libseccomp-dev amd64 2.5.1-1ubuntu1~20.04.2 [83.6 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Get:16 http://archive.ubuntu.com/ubuntu focal/main amd64 pkg-config amd64 0.29.1-0ubuntu4 [45.5 kB]
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": [91mdebconf: delaying package configuration, since apt-utils is not installed
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": [0mFetched 12.6 MB in 1s (23.0 MB/s)
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libmagic-mgc.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": (Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17483 files and directories currently installed.)
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../00-libmagic-mgc_1%3a5.38-4_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libmagic-mgc (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libmagic1:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../01-libmagic1_1%3a5.38-4_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package file.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../02-file_1%3a5.38-4_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking file (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libglib2.0-0:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../03-libglib2.0-0_2.64.6-1~ubuntu20.04.9_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libglib2.0-data.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../04-libglib2.0-data_2.64.6-1~ubuntu20.04.9_all.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libicu66:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../05-libicu66_66.1-2ubuntu2.1_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libxml2:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../06-libxml2_2.9.10+dfsg-5ubuntu0.20.04.10_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package shared-mime-info.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../07-shared-mime-info_1.15-1_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking shared-mime-info (1.15-1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package xdg-user-dirs.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../08-xdg-user-dirs_0.17-2ubuntu1_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package autoconf.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../09-autoconf_2.69-11.1_all.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking autoconf (2.69-11.1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package automake.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../10-automake_1%3a1.16.1-4ubuntu6_all.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libltdl7:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../11-libltdl7_2.4.6-14_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libltdl-dev:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../12-libltdl-dev_2.4.6-14_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libseccomp-dev:amd64.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../13-libseccomp-dev_2.5.1-1ubuntu1~20.04.2_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libseccomp-dev:amd64 (2.5.1-1ubuntu1~20.04.2) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package libtool.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../14-libtool_2.4.6-14_all.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking libtool (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Selecting previously unselected package pkg-config.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Preparing to unpack .../15-pkg-config_0.29.1-0ubuntu4_amd64.deb ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Unpacking pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libseccomp-dev:amd64 (2.5.1-1ubuntu1~20.04.2) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up xdg-user-dirs (0.17-2ubuntu1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libmagic-mgc (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": No schema files found: doing nothing.
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libicu66:amd64 (66.1-2ubuntu2.1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libmagic1:amd64 (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up file (1:5.38-4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libglib2.0-data (2.64.6-1~ubuntu20.04.9) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up pkg-config (0.29.1-0ubuntu4) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libltdl7:amd64 (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up autoconf (2.69-11.1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libxml2:amd64 (2.9.10+dfsg-5ubuntu0.20.04.10) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up automake (1:1.16.1-4ubuntu6) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libtool (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up libltdl-dev:amd64 (2.4.6-14) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Setting up shared-mime-info (1.15-1) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Processing triggers for libc-bin (2.31-0ubuntu9.18) ...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Removing intermediate container 71ca37778cf0
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> 577cf8327353
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Step 3/5 : RUN git clone --depth 1 https://github.com/stefanberger/libtpms libtpms
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> Running in ab3aaa15c8ea
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": [91mCloning into 'libtpms'...
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": [0mRemoving intermediate container ab3aaa15c8ea
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> c7549aa0d63b
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Step 4/5 : WORKDIR libtpms
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> Running in 42dff467cdf3
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Removing intermediate container 42dff467cdf3
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> f57952334786
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Step 5/5 : COPY build.sh $SRC/
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206":  ---> d02ec13bb836
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Successfully built d02ec13bb836
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Successfully tagged gcr.io/oss-fuzz/libtpms:latest
Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/libtpms:latest
Finished Step #1 - "build-f6f9cf4c-a70b-49ae-b4a7-339c7273a206"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/libtpms
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/fileVbWj4P
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c++ == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/libtpms/.git
Step #2 - "srcmap": + GIT_DIR=/src/libtpms
Step #2 - "srcmap": + cd /src/libtpms
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/stefanberger/libtpms
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=22855f184b4e762b71b2e3cc7f78d77bb8d96a04
Step #2 - "srcmap": + jq_inplace /tmp/fileVbWj4P '."/src/libtpms" = { type: "git", url: "https://github.com/stefanberger/libtpms", rev: "22855f184b4e762b71b2e3cc7f78d77bb8d96a04" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/filejm2gQa
Step #2 - "srcmap": + cat /tmp/fileVbWj4P
Step #2 - "srcmap": + jq '."/src/libtpms" = { type: "git", url: "https://github.com/stefanberger/libtpms", rev: "22855f184b4e762b71b2e3cc7f78d77bb8d96a04" }'
Step #2 - "srcmap": + mv /tmp/filejm2gQa /tmp/fileVbWj4P
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/fileVbWj4P
Step #2 - "srcmap": + rm /tmp/fileVbWj4P
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/libtpms": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/stefanberger/libtpms",
Step #2 - "srcmap":     "rev": "22855f184b4e762b71b2e3cc7f78d77bb8d96a04"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-afl-address-x86_64"
Step #3 - "compile-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-afl-address-x86_64": Copying precompiled AFL++
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AFL++ target compilation setup:
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_UNKNOWN_ENVS=1
Step #3 - "compile-afl-address-x86_64": AFL_QUIET=1
Step #3 - "compile-afl-address-x86_64": AFL_IGNORE_PROBLEMS=1
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64":  done.
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope 
Step #3 - "compile-afl-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -stdlib=libc++
Step #3 - "compile-afl-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-afl-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-afl-address-x86_64": + tests/oss-fuzz.sh
Step #3 - "compile-afl-address-x86_64": + export CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": + CC=/src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": + export CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": + CXX=/src/aflplusplus/afl-clang-fast++
Step #3 - "compile-afl-address-x86_64": + export WORK=/work
Step #3 - "compile-afl-address-x86_64": + WORK=/work
Step #3 - "compile-afl-address-x86_64": + export OUT=/workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + OUT=/workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + CFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -fno-sanitize=bounds'
Step #3 - "compile-afl-address-x86_64": + mkdir -p /workspace/out/afl-address-x86_64
Step #3 - "compile-afl-address-x86_64": + build=/work/build
Step #3 - "compile-afl-address-x86_64": + rm -rf /work/build
Step #3 - "compile-afl-address-x86_64": + mkdir -p /work/build
Step #3 - "compile-afl-address-x86_64": ++ pwd
Step #3 - "compile-afl-address-x86_64": + export LIBTPMS=/src/libtpms
Step #3 - "compile-afl-address-x86_64": + LIBTPMS=/src/libtpms
Step #3 - "compile-afl-address-x86_64": + autoreconf -vfi
Step #3 - "compile-afl-address-x86_64": autoreconf: Entering directory `.'
Step #3 - "compile-afl-address-x86_64": autoreconf: configure.ac: not using Gettext
Step #3 - "compile-afl-address-x86_64": autoreconf: running: aclocal --force -I m4
Step #3 - "compile-afl-address-x86_64": autoreconf: configure.ac: tracing
Step #3 - "compile-afl-address-x86_64": autoreconf: running: libtoolize --copy --force
Step #3 - "compile-afl-address-x86_64": libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, '.'.
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #3 - "compile-afl-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #3 - "compile-afl-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #3 - "compile-afl-address-x86_64": autoreconf: running: /usr/bin/autoconf --force
Step #3 - "compile-afl-address-x86_64": autoreconf: running: /usr/bin/autoheader --force
Step #3 - "compile-afl-address-x86_64": autoreconf: running: automake --add-missing --copy --force-missing
Step #3 - "compile-afl-address-x86_64": configure.ac:31: installing './compile'
Step #3 - "compile-afl-address-x86_64": configure.ac:13: installing './config.guess'
Step #3 - "compile-afl-address-x86_64": configure.ac:13: installing './config.sub'
Step #3 - "compile-afl-address-x86_64": configure.ac:14: installing './install-sh'
Step #3 - "compile-afl-address-x86_64": configure.ac:14: installing './missing'
Step #3 - "compile-afl-address-x86_64": src/Makefile.am: installing './depcomp'
Step #3 - "compile-afl-address-x86_64": parallel-tests: installing './test-driver'
Step #3 - "compile-afl-address-x86_64": autoreconf: Leaving directory `.'
Step #3 - "compile-afl-address-x86_64": + cd /work/build
Step #3 - "compile-afl-address-x86_64": + /src/libtpms/configure --disable-shared --enable-static --with-openssl --with-tpm2
Step #3 - "compile-afl-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking target system type... x86_64-pc-linux-gnu
Step #3 - "compile-afl-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #3 - "compile-afl-address-x86_64": checking whether build environment is sane... yes
Step #3 - "compile-afl-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #3 - "compile-afl-address-x86_64": checking for gawk... no
Step #3 - "compile-afl-address-x86_64": checking for mawk... mawk
Step #3 - "compile-afl-address-x86_64": checking whether make sets $(MAKE)... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #3 - "compile-afl-address-x86_64": checking for gcc... /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether the C compiler works... yes
Step #3 - "compile-afl-address-x86_64": checking for C compiler default output file name... a.out
Step #3 - "compile-afl-address-x86_64": checking for suffix of executables... 
Step #3 - "compile-afl-address-x86_64": checking whether we are cross compiling... no
Step #3 - "compile-afl-address-x86_64": checking for suffix of object files... o
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... gcc3
Step #3 - "compile-afl-address-x86_64": checking whether the linker accepts -Wl,--version-script=/src/libtpms/src/test.syms... yes
Step #3 - "compile-afl-address-x86_64": Building with TPM2 support
Step #3 - "compile-afl-address-x86_64": checking how to run the C preprocessor... /src/aflplusplus/afl-clang-fast -E
Step #3 - "compile-afl-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #3 - "compile-afl-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #3 - "compile-afl-address-x86_64": checking for ANSI C header files... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/types.h... yes
Step #3 - "compile-afl-address-x86_64": checking for sys/stat.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdlib.h... yes
Step #3 - "compile-afl-address-x86_64": checking for string.h... yes
Step #3 - "compile-afl-address-x86_64": checking for memory.h... yes
Step #3 - "compile-afl-address-x86_64": checking for strings.h... yes
Step #3 - "compile-afl-address-x86_64": checking for inttypes.h... yes
Step #3 - "compile-afl-address-x86_64": checking for stdint.h... yes
Step #3 - "compile-afl-address-x86_64": checking for unistd.h... yes
Step #3 - "compile-afl-address-x86_64": checking for AES_set_encrypt_key in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking openssl/aes.h usability... yes
Step #3 - "compile-afl-address-x86_64": checking openssl/aes.h presence... yes
Step #3 - "compile-afl-address-x86_64": checking for openssl/aes.h... yes
Step #3 - "compile-afl-address-x86_64": Building with openssl crypto library
Step #3 - "compile-afl-address-x86_64": checking for EVP_CIPHER_CTX_new in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_EncryptInit_ex in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_aes_128_cbc in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_des_ede3_cbc in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_camellia_128_cbc in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for DES_random_key in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_CIPHER_CTX_iv in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EC_KEY_set_group in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EC_KEY_generate_key in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EC_KEY_get0_private_key in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for ECDSA_SIG_new in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for ECDSA_SIG_set0 in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for ECDSA_do_verify in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for ECDSA_do_sign in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EC_KEY_set_group in -lcrypto... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for RSA_set0_key in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for RSA_set0_factors in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for RSA_set0_crt_params in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for RSA_generate_key_ex in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_CTX_new in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_assign in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_encrypt_init in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_encrypt in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_decrypt_init in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_decrypt in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_sign_init in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_sign in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_verify_init in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_PKEY_verify in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking for EVP_get_digestbyname in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking whether EVP_PKEY_CTX_set0_rsa_oaep_label is defined in <openssl/rsa.h>... yes
Step #3 - "compile-afl-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_padding is defined in <openssl/rsa.h>... yes
Step #3 - "compile-afl-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_oaep_md is defined in <openssl/rsa.h>... yes
Step #3 - "compile-afl-address-x86_64": checking whether EVP_PKEY_CTX_set_signature_md is defined in <openssl/evp.h>... yes
Step #3 - "compile-afl-address-x86_64": checking whether OSSL_KDF_NAME_SSKDF is defined in <openssl/core_names.h>... no
Step #3 - "compile-afl-address-x86_64": checking for EC_POINT_get_affine_coordinates in -lcrypto... yes
Step #3 - "compile-afl-address-x86_64": checking how to print strings... printf
Step #3 - "compile-afl-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #3 - "compile-afl-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast... /usr/bin/ld
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #3 - "compile-afl-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #3 - "compile-afl-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #3 - "compile-afl-address-x86_64": checking whether ln -s works... yes
Step #3 - "compile-afl-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #3 - "compile-afl-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #3 - "compile-afl-address-x86_64": checking for objdump... objdump
Step #3 - "compile-afl-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #3 - "compile-afl-address-x86_64": checking for dlltool... no
Step #3 - "compile-afl-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #3 - "compile-afl-address-x86_64": checking for ar... ar
Step #3 - "compile-afl-address-x86_64": checking for archiver @FILE support... @
Step #3 - "compile-afl-address-x86_64": checking for strip... strip
Step #3 - "compile-afl-address-x86_64": checking for ranlib... ranlib
Step #3 - "compile-afl-address-x86_64": checking command to parse /usr/bin/nm -B output from /src/aflplusplus/afl-clang-fast object... ok
Step #3 - "compile-afl-address-x86_64": checking for sysroot... no
Step #3 - "compile-afl-address-x86_64": checking for a working dd... /usr/bin/dd
Step #3 - "compile-afl-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #3 - "compile-afl-address-x86_64": checking for mt... no
Step #3 - "compile-afl-address-x86_64": checking if : is a manifest tool... no
Step #3 - "compile-afl-address-x86_64": checking for dlfcn.h... yes
Step #3 - "compile-afl-address-x86_64": checking for objdir... .libs
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -fno-rtti -fno-exceptions... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to produce PIC... -fPIC -DPIC
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast PIC flag -fPIC -DPIC works... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast static flag -static works... no
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast supports -c -o file.o... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #3 - "compile-afl-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #3 - "compile-afl-address-x86_64": checking whether stripping libraries is possible... yes
Step #3 - "compile-afl-address-x86_64": checking if libtool supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking whether to build shared libraries... no
Step #3 - "compile-afl-address-x86_64": checking whether to build static libraries... yes
Step #3 - "compile-afl-address-x86_64": checking for gcc... (cached) /src/aflplusplus/afl-clang-fast
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast accepts -g... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast option to accept ISO C89... (cached) none needed
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast understands -c and -o together... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast... (cached) gcc3
Step #3 - "compile-afl-address-x86_64": checking whether we are using the GNU C++ compiler... yes
Step #3 - "compile-afl-address-x86_64": checking whether /src/aflplusplus/afl-clang-fast++ accepts -g... yes
Step #3 - "compile-afl-address-x86_64": checking dependency style of /src/aflplusplus/afl-clang-fast++... gcc3
Step #3 - "compile-afl-address-x86_64": checking how to run the C++ preprocessor... /src/aflplusplus/afl-clang-fast++ -E
Step #3 - "compile-afl-address-x86_64": checking for ld used by /src/aflplusplus/afl-clang-fast++... /usr/bin/ld -m elf_x86_64
Step #3 - "compile-afl-address-x86_64": checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking for /src/aflplusplus/afl-clang-fast++ option to produce PIC... -fPIC -DPIC
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast++ PIC flag -fPIC -DPIC works... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast++ static flag -static works... no
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast++ supports -c -o file.o... yes
Step #3 - "compile-afl-address-x86_64": checking if /src/aflplusplus/afl-clang-fast++ supports -c -o file.o... (cached) yes
Step #3 - "compile-afl-address-x86_64": checking whether the /src/aflplusplus/afl-clang-fast++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #3 - "compile-afl-address-x86_64": checking dynamic linker characteristics... (cached) GNU/Linux ld.so
Step #3 - "compile-afl-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #3 - "compile-afl-address-x86_64": checking for an ANSI C-conforming const... yes
Step #3 - "compile-afl-address-x86_64": checking for inline... inline
Step #3 - "compile-afl-address-x86_64": checking for size_t... yes
Step #3 - "compile-afl-address-x86_64": checking for clock_gettime in -lc... yes
Step #3 - "compile-afl-address-x86_64": checking whether linker supports -Wl,-z,relro... yes
Step #3 - "compile-afl-address-x86_64": checking whether linker supports -Wl,-z,now... yes
Step #3 - "compile-afl-address-x86_64": checking that generated files are newer than configure... done
Step #3 - "compile-afl-address-x86_64": configure: creating ./config.status
Step #3 - "compile-afl-address-x86_64": config.status: creating Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating dist/libtpms.spec
Step #3 - "compile-afl-address-x86_64": config.status: creating include/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/libtpms/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating include/libtpms/tpm_library.h
Step #3 - "compile-afl-address-x86_64": config.status: creating man/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating man/man3/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating src/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating libtpms.pc
Step #3 - "compile-afl-address-x86_64": config.status: creating tests/Makefile
Step #3 - "compile-afl-address-x86_64": config.status: creating config.h
Step #3 - "compile-afl-address-x86_64": config.status: executing depfiles commands
Step #3 - "compile-afl-address-x86_64": config.status: executing libtool commands
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": AM_CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope  -fno-sanitize=bounds -DUSE_OPENSSL_FUNCTIONS_SYMMETRIC=1 -DUSE_OPENSSL_FUNCTIONS_EC=1 -DUSE_OPENSSL_FUNCTIONS_ECDSA=1 -DUSE_OPENSSL_FUNCTIONS_RSA=1 -DUSE_OPENSSL_FUNCTIONS_SSKDF=0 -DUSE_EC_POINT_GET_AFFINE_COORDINATES_API=1  -Wall -Werror -Wshadow -Wreturn-type -Wsign-compare -Wno-self-assign -Wmissing-prototypes
Step #3 - "compile-afl-address-x86_64": HARDENING_CFLAGS=
Step #3 - "compile-afl-address-x86_64": HARDENING_LDFLAGS= -Wl,-z,relro -Wl,-z,now
Step #3 - "compile-afl-address-x86_64": AM_LDFLAGS= 
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": Version to build        : 0.11.0
Step #3 - "compile-afl-address-x86_64": Crypto library          : openssl
Step #3 - "compile-afl-address-x86_64": Debug build             : 
Step #3 - "compile-afl-address-x86_64": With TPM1.2 support     : yes
Step #3 - "compile-afl-address-x86_64": With TPM2 support       : yes
Step #3 - "compile-afl-address-x86_64": HAVE_VERSION_SCRIPT     : yes
Step #3 - "compile-afl-address-x86_64": Use openssl crypto for  : symmetric (AES, TDES) general elliptic curve (EC) elliptic curve (ECDSA) RSA 
Step #3 - "compile-afl-address-x86_64": Test coverage           : 
Step #3 - "compile-afl-address-x86_64": Static build            : yes
Step #3 - "compile-afl-address-x86_64": Statically linked tests : yes
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": 
Step #3 - "compile-afl-address-x86_64": ++ nproc
Step #3 - "compile-afl-address-x86_64": + make -j32
Step #3 - "compile-afl-address-x86_64": make  all-recursive
Step #3 - "compile-afl-address-x86_64": make[1]: Entering directory '/work/build'
Step #3 - "compile-afl-address-x86_64": Making all in include
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/work/build/include'
Step #3 - "compile-afl-address-x86_64": Making all in libtpms
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/work/build/include/libtpms'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/work/build/include/libtpms'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/work/build/include'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/work/build/include'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/work/build/include'
Step #3 - "compile-afl-address-x86_64": Making all in man
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/work/build/man'
Step #3 - "compile-afl-address-x86_64": Making all in man3
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/work/build/man/man3'
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/work/build/man/man3'
Step #3 - "compile-afl-address-x86_64": make[3]: Entering directory '/work/build/man'
Step #3 - "compile-afl-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #3 - "compile-afl-address-x86_64": make[3]: Leaving directory '/work/build/man'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/work/build/man'
Step #3 - "compile-afl-address-x86_64": Making all in src
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/work/build/src'
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_la-disabled_interface.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_la-tpm_debug.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_la-tpm_library.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_la-tpm_memory.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_la-tpm_nvfile.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_interface.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_tis.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_interface.lo
Step #3 - "compile-afl-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_tis.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_admin.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_audit.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_auth.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_cryptoh.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_daa.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_counter.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_delegate.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_digest.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_error.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_global.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_init.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_identity.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_libtpms_io.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_key.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_load.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_maint.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_migration.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nonce.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nvram.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_openssl_helpers.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_owner.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_pcr.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_permanent.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_platform.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_process.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_secret.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_session.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_sizedbuffer.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_startup.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_store.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_storage.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ticks.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_time.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_transport.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ver.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_svnrevision.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_crypto.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACT_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACTCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmCap.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmTests.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AsymmetricCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AttestationCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Attest_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AuditCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Bits.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnEccConstants.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnConvert.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMath.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMemory.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Cancel.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CapabilityCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Clock.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ClockCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandAudit.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandCodeAttributes.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandDispatcher.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ContextCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Context_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptEccData.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptSelfTest.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptUtil.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DA.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DebugHelpers.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DictionaryCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DuplicationCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EACommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EncryptDecrypt_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entity.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entropy.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EphemeralCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExecCommand.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExtraData.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Global.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Handle.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HashCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Hierarchy.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HierarchyCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IntegrityCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IoBuffers.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Locality.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LocalityPlat.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ManagementCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Manufacture.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Marshal.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-MathOnByteBuffers.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Memory.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvDynamic.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMem.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvReserved.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NV_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ObjectCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PCR.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformACT.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformData.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformPcr.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Policy_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Power.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PowerPlat.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PP.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PPPlat.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PrimeData.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PropertyCap.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RandomCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Response.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ResponseCodeProcessing.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RunCommand.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Session.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionProcess.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SigningCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StartupCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SymmetricCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TestingCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Ticket.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Time.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmASN1.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmBigNumThunks.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDAA.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDSA.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Schnorr.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_SM2.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Util.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Util.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Debug.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Util.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmSizeChecks.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TPMCmdp.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmFail.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unique.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unmarshal.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-VendorInfo.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Vendor_TCG_Test.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_ECC.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_RSA.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_spt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityBitArray.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityObject.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LibtpmsCallbacks.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMarshal.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAlgorithm.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAttributes.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeCommands.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeProfile.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StateMarshal.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Volatile.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-BnToOsslMath.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptCmac.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptDes.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccCrypt.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccKeyExchange.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccMain.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccSignature.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptHash.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrime.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrimeSieve.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRand.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRsa.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSmac.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSym.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-ExpDCache.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-Helpers.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslDesSupport.lo
Step #3 - "compile-afl-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslSupport.lo
Step #3 - "compile-afl-address-x86_64":   CCLD     libtpms_tpm12.la
Step #3 - "compile-afl-address-x86_64":   CCLD     libtpms_tpm2.la
Step #3 - "compile-afl-address-x86_64":   CCLD     libtpms.la
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/work/build/src'
Step #3 - "compile-afl-address-x86_64": Making all in tests
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/work/build/tests'
Step #3 - "compile-afl-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/work/build/tests'
Step #3 - "compile-afl-address-x86_64": make[2]: Entering directory '/work/build'
Step #3 - "compile-afl-address-x86_64": make[2]: Leaving directory '/work/build'
Step #3 - "compile-afl-address-x86_64": make[1]: Leaving directory '/work/build'
Step #3 - "compile-afl-address-x86_64": + make -C tests fuzz
Step #3 - "compile-afl-address-x86_64": make: Entering directory '/work/build/tests'
Step #3 - "compile-afl-address-x86_64":   CXX      fuzz-fuzz.o
Step #3 - "compile-afl-address-x86_64":   CXXLD    fuzz
Step #3 - "compile-afl-address-x86_64": make: Leaving directory '/work/build/tests'
Step #3 - "compile-afl-address-x86_64": + zip -jqr /workspace/out/afl-address-x86_64/fuzz_seed_corpus.zip /src/libtpms/tests/corpus-execute-command
Step #3 - "compile-afl-address-x86_64": + find /work/build -type f -executable -name 'fuzz*' -exec mv '{}' /workspace/out/afl-address-x86_64 ';'
Step #3 - "compile-afl-address-x86_64": + find /work/build -type f -name '*.options' -exec mv '{}' /workspace/out/afl-address-x86_64 ';'
Finished Step #3 - "compile-afl-address-x86_64"
Starting Step #4 - "build-check-afl-address-x86_64"
Step #4 - "build-check-afl-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #4 - "build-check-afl-address-x86_64": Unable to find image 'gcr.io/oss-fuzz-base/base-runner:latest' locally
Step #4 - "build-check-afl-address-x86_64": latest: Pulling from oss-fuzz-base/base-runner
Step #4 - "build-check-afl-address-x86_64": b549f31133a9: Already exists
Step #4 - "build-check-afl-address-x86_64": e7c5c1e3302c: Already exists
Step #4 - "build-check-afl-address-x86_64": 4d10d210e237: Already exists
Step #4 - "build-check-afl-address-x86_64": 42a07a5785a5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 0fb4be1d9bfe: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6d29a19cdec7: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 3020bde97a73: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": e2874a61e651: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": dd23d39ee5a6: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 47b31de4ba9f: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 2f63767cbf6d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": d37efa9d9261: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": b8ed3be40480: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 4c72c12b0ef4: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 01d57463b2ec: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": a8902b3fba67: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 5785c5f5e65c: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c8b63103c266: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 870cffd2f877: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 15cbaa4d71e0: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 8f288d92ab80: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": f8ff0c73c628: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 1f0452ba650d: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": c3f075c65091: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": fe70b686834f: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 6343422521f5: Pulling fs layer
Step #4 - "build-check-afl-address-x86_64": 15cbaa4d71e0: Waiting
Step #4 - "build-check-afl-address-x86_64": 8f288d92ab80: Waiting
Step #4 - "build-check-afl-address-x86_64": 870cffd2f877: Waiting
Step #4 - "build-check-afl-address-x86_64": 2f63767cbf6d: Waiting
Step #4 - "build-check-afl-address-x86_64": f8ff0c73c628: Waiting
Step #4 - "build-check-afl-address-x86_64": 1f0452ba650d: Waiting
Step #4 - "build-check-afl-address-x86_64": d37efa9d9261: Waiting
Step #4 - "build-check-afl-address-x86_64": c3f075c65091: Waiting
Step #4 - "build-check-afl-address-x86_64": b8ed3be40480: Waiting
Step #4 - "build-check-afl-address-x86_64": fe70b686834f: Waiting
Step #4 - "build-check-afl-address-x86_64": 6343422521f5: Waiting
Step #4 - "build-check-afl-address-x86_64": 4c72c12b0ef4: Waiting
Step #4 - "build-check-afl-address-x86_64": 01d57463b2ec: Waiting
Step #4 - "build-check-afl-address-x86_64": a8902b3fba67: Waiting
Step #4 - "build-check-afl-address-x86_64": 5785c5f5e65c: Waiting
Step #4 - "build-check-afl-address-x86_64": c8b63103c266: Waiting
Step #4 - "build-check-afl-address-x86_64": dd23d39ee5a6: Waiting
Step #4 - "build-check-afl-address-x86_64": 47b31de4ba9f: Waiting
Step #4 - "build-check-afl-address-x86_64": 3020bde97a73: Waiting
Step #4 - "build-check-afl-address-x86_64": 6d29a19cdec7: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6d29a19cdec7: Download complete
Step #4 - "build-check-afl-address-x86_64": 42a07a5785a5: Download complete
Step #4 - "build-check-afl-address-x86_64": 0fb4be1d9bfe: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 0fb4be1d9bfe: Download complete
Step #4 - "build-check-afl-address-x86_64": e2874a61e651: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": e2874a61e651: Download complete
Step #4 - "build-check-afl-address-x86_64": 42a07a5785a5: Pull complete
Step #4 - "build-check-afl-address-x86_64": 3020bde97a73: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 3020bde97a73: Download complete
Step #4 - "build-check-afl-address-x86_64": 47b31de4ba9f: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 47b31de4ba9f: Download complete
Step #4 - "build-check-afl-address-x86_64": 2f63767cbf6d: Download complete
Step #4 - "build-check-afl-address-x86_64": 0fb4be1d9bfe: Pull complete
Step #4 - "build-check-afl-address-x86_64": d37efa9d9261: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": d37efa9d9261: Download complete
Step #4 - "build-check-afl-address-x86_64": 6d29a19cdec7: Pull complete
Step #4 - "build-check-afl-address-x86_64": dd23d39ee5a6: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": dd23d39ee5a6: Download complete
Step #4 - "build-check-afl-address-x86_64": 4c72c12b0ef4: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 4c72c12b0ef4: Download complete
Step #4 - "build-check-afl-address-x86_64": a8902b3fba67: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": a8902b3fba67: Download complete
Step #4 - "build-check-afl-address-x86_64": 01d57463b2ec: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 01d57463b2ec: Download complete
Step #4 - "build-check-afl-address-x86_64": 3020bde97a73: Pull complete
Step #4 - "build-check-afl-address-x86_64": c8b63103c266: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": c8b63103c266: Download complete
Step #4 - "build-check-afl-address-x86_64": e2874a61e651: Pull complete
Step #4 - "build-check-afl-address-x86_64": b8ed3be40480: Download complete
Step #4 - "build-check-afl-address-x86_64": 15cbaa4d71e0: Download complete
Step #4 - "build-check-afl-address-x86_64": 8f288d92ab80: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 8f288d92ab80: Download complete
Step #4 - "build-check-afl-address-x86_64": 5785c5f5e65c: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 5785c5f5e65c: Download complete
Step #4 - "build-check-afl-address-x86_64": f8ff0c73c628: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": f8ff0c73c628: Download complete
Step #4 - "build-check-afl-address-x86_64": 1f0452ba650d: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 1f0452ba650d: Download complete
Step #4 - "build-check-afl-address-x86_64": c3f075c65091: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": c3f075c65091: Download complete
Step #4 - "build-check-afl-address-x86_64": fe70b686834f: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": fe70b686834f: Download complete
Step #4 - "build-check-afl-address-x86_64": 6343422521f5: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 6343422521f5: Download complete
Step #4 - "build-check-afl-address-x86_64": 870cffd2f877: Verifying Checksum
Step #4 - "build-check-afl-address-x86_64": 870cffd2f877: Download complete
Step #4 - "build-check-afl-address-x86_64": dd23d39ee5a6: Pull complete
Step #4 - "build-check-afl-address-x86_64": 47b31de4ba9f: Pull complete
Step #4 - "build-check-afl-address-x86_64": 2f63767cbf6d: Pull complete
Step #4 - "build-check-afl-address-x86_64": d37efa9d9261: Pull complete
Step #4 - "build-check-afl-address-x86_64": b8ed3be40480: Pull complete
Step #4 - "build-check-afl-address-x86_64": 4c72c12b0ef4: Pull complete
Step #4 - "build-check-afl-address-x86_64": 01d57463b2ec: Pull complete
Step #4 - "build-check-afl-address-x86_64": a8902b3fba67: Pull complete
Step #4 - "build-check-afl-address-x86_64": 5785c5f5e65c: Pull complete
Step #4 - "build-check-afl-address-x86_64": c8b63103c266: Pull complete
Step #4 - "build-check-afl-address-x86_64": 870cffd2f877: Pull complete
Step #4 - "build-check-afl-address-x86_64": 15cbaa4d71e0: Pull complete
Step #4 - "build-check-afl-address-x86_64": 8f288d92ab80: Pull complete
Step #4 - "build-check-afl-address-x86_64": f8ff0c73c628: Pull complete
Step #4 - "build-check-afl-address-x86_64": 1f0452ba650d: Pull complete
Step #4 - "build-check-afl-address-x86_64": c3f075c65091: Pull complete
Step #4 - "build-check-afl-address-x86_64": fe70b686834f: Pull complete
Step #4 - "build-check-afl-address-x86_64": 6343422521f5: Pull complete
Step #4 - "build-check-afl-address-x86_64": Digest: sha256:70dc2a8f10d39039f1030f693652eadc4eb1484e1c9a222a5d9b473d6b6576cc
Step #4 - "build-check-afl-address-x86_64": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-runner:latest
Step #4 - "build-check-afl-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmp02sj649w/fuzz
Finished Step #4 - "build-check-afl-address-x86_64"
Starting Step #5
Step #5: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #5
Starting Step #6
Step #6: Already have image: gcr.io/oss-fuzz/libtpms
Step #6:   adding: SanitizerCoverageLTO.so (deflated 69%)
Step #6:   adding: SanitizerCoveragePCGUARD.so (deflated 70%)
Step #6:   adding: afl-addseeds (deflated 57%)
Step #6:   adding: afl-analyze (deflated 55%)
Step #6:   adding: afl-c++ (deflated 57%)
Step #6:   adding: afl-c++.8 (deflated 55%)
Step #6:   adding: afl-cc (deflated 57%)
Step #6:   adding: afl-cc.8 (deflated 55%)
Step #6:   adding: afl-clang (deflated 57%)
Step #6:   adding: afl-clang++ (deflated 57%)
Step #6:   adding: afl-clang-fast (deflated 57%)
Step #6:   adding: afl-clang-fast++ (deflated 57%)
Step #6:   adding: afl-clang-fast++.8 (deflated 55%)
Step #6:   adding: afl-clang-fast.8 (deflated 55%)
Step #6:   adding: afl-clang-lto (deflated 57%)
Step #6:   adding: afl-clang-lto++ (deflated 57%)
Step #6:   adding: afl-clang-lto++.8 (deflated 55%)
Step #6:   adding: afl-clang-lto.8 (deflated 55%)
Step #6:   adding: afl-cmin (deflated 70%)
Step #6:   adding: afl-cmin.bash (deflated 65%)
Step #6:   adding: afl-cmin.py (deflated 71%)
Step #6:   adding: afl-compiler-rt-32.o (deflated 54%)
Step #6:   adding: afl-compiler-rt-64.o (deflated 67%)
Step #6:   adding: afl-compiler-rt.o (deflated 67%)
Step #6:   adding: afl-fuzz (deflated 55%)
Step #6:   adding: afl-g++ (deflated 57%)
Step #6:   adding: afl-gcc (deflated 57%)
Step #6:   adding: afl-gotcpu (deflated 62%)
Step #6:   adding: afl-ld-lto (deflated 62%)
Step #6:   adding: afl-llvm-dict2file.so (deflated 69%)
Step #6:   adding: afl-llvm-lto-instrumentlist.so (deflated 71%)
Step #6:   adding: afl-llvm-pass.so (deflated 69%)
Step #6:   adding: afl-llvm-rt-lto-32.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto-64.o (deflated 20%)
Step #6:   adding: afl-llvm-rt-lto.o (deflated 20%)
Step #6:   adding: afl-lto (deflated 57%)
Step #6:   adding: afl-lto++ (deflated 57%)
Step #6:   adding: afl-lto++.8 (deflated 55%)
Step #6:   adding: afl-lto.8 (deflated 55%)
Step #6:   adding: afl-persistent-config (deflated 59%)
Step #6:   adding: afl-plot (deflated 65%)
Step #6:   adding: afl-showmap (deflated 55%)
Step #6:   adding: afl-system-config (deflated 63%)
Step #6:   adding: afl-tmin (deflated 55%)
Step #6:   adding: afl-whatsup (deflated 69%)
Step #6:   adding: afl-wine-trace (deflated 70%)
Step #6:   adding: afl_options.txt (deflated 20%)
Step #6:   adding: cmplog-instructions-pass.so (deflated 71%)
Step #6:   adding: cmplog-routines-pass.so (deflated 70%)
Step #6:   adding: cmplog-switches-pass.so (deflated 70%)
Step #6:   adding: compare-transform-pass.so (deflated 69%)
Step #6:   adding: dynamic_list.txt (deflated 76%)
Step #6:   adding: fuzz (deflated 63%)
Step #6:   adding: fuzz_seed_corpus.zip (stored 0%)
Step #6:   adding: injection-pass.so (deflated 70%)
Step #6:   adding: libAFLDriver.a (deflated 64%)
Step #6:   adding: libAFLQemuDriver.a (deflated 65%)
Step #6:   adding: llvm-symbolizer (deflated 65%)
Step #6:   adding: split-compares-pass.so (deflated 69%)
Step #6:   adding: split-switches-pass.so (deflated 70%)
Finished Step #6
Starting Step #7
Step #7: Pulling image: gcr.io/oss-fuzz-base/uploader
Step #7: Using default tag: latest
Step #7: latest: Pulling from oss-fuzz-base/uploader
Step #7: c62795f78da9: Pulling fs layer
Step #7: d4fceeeb758e: Pulling fs layer
Step #7: 5c9125a401ae: Pulling fs layer
Step #7: 0062f774e994: Pulling fs layer
Step #7: 6b33fd031fac: Pulling fs layer
Step #7: 7eb39101e508: Pulling fs layer
Step #7: 89257482f398: Pulling fs layer
Step #7: 0062f774e994: Waiting
Step #7: 7eb39101e508: Waiting
Step #7: 6b33fd031fac: Waiting
Step #7: 89257482f398: Waiting
Step #7: d4fceeeb758e: Verifying Checksum
Step #7: d4fceeeb758e: Download complete
Step #7: 5c9125a401ae: Verifying Checksum
Step #7: 5c9125a401ae: Download complete
Step #7: 0062f774e994: Verifying Checksum
Step #7: 0062f774e994: Download complete
Step #7: 6b33fd031fac: Download complete
Step #7: 89257482f398: Verifying Checksum
Step #7: 89257482f398: Download complete
Step #7: c62795f78da9: Verifying Checksum
Step #7: c62795f78da9: Download complete
Step #7: 7eb39101e508: Verifying Checksum
Step #7: 7eb39101e508: Download complete
Step #7: c62795f78da9: Pull complete
Step #7: d4fceeeb758e: Pull complete
Step #7: 5c9125a401ae: Pull complete
Step #7: 0062f774e994: Pull complete
Step #7: 6b33fd031fac: Pull complete
Step #7: 7eb39101e508: Pull complete
Step #7: 89257482f398: Pull complete
Step #7: Digest: sha256:5717ba63d13b5515063e2a6ccad09fb5bf32a86c8e0798a363d81c2be522e411
Step #7: Status: Downloaded newer image for gcr.io/oss-fuzz-base/uploader:latest
Step #7: gcr.io/oss-fuzz-base/uploader:latest
Step #7:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #7:                                  Dload  Upload   Total   Spent    Left  Speed
Step #7:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0     0  100   155      0    758 --:--:-- --:--:-- --:--:--   759
Finished Step #7
Starting Step #8
Step #8: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #8:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #8:                                  Dload  Upload   Total   Spent    Left  Speed
Step #8:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 11.7M    0     0  100 11.7M      0  38.5M --:--:-- --:--:-- --:--:-- 38.6M
Finished Step #8
Starting Step #9
Step #9: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #9:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #9:                                  Dload  Upload   Total   Spent    Left  Speed
Step #9:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100     5    0     0  100     5      0     24 --:--:-- --:--:-- --:--:--    24100     5    0     0  100     5      0     18 --:--:-- --:--:-- --:--:--    18
Finished Step #9
Starting Step #10
Step #10: Already have image (with digest): gcr.io/cloud-builders/curl
Step #10:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #10:                                  Dload  Upload   Total   Spent    Left  Speed
Step #10:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    32    0     0  100    32      0    150 --:--:-- --:--:-- --:--:--   150
Finished Step #10
Starting Step #11
Step #11: Already have image: gcr.io/oss-fuzz/libtpms
Finished Step #11
Starting Step #12 - "compile-honggfuzz-address-x86_64"
Step #12 - "compile-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": vm.mmap_rnd_bits = 28
Step #12 - "compile-honggfuzz-address-x86_64": Skipping compilation; using precompiled honggfuzz
Step #12 - "compile-honggfuzz-address-x86_64":  done.
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": CC=clang
Step #12 - "compile-honggfuzz-address-x86_64": CXX=clang++
Step #12 - "compile-honggfuzz-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp
Step #12 - "compile-honggfuzz-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -stdlib=libc++
Step #12 - "compile-honggfuzz-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #12 - "compile-honggfuzz-address-x86_64": ---------------------------------------------------------------
Step #12 - "compile-honggfuzz-address-x86_64": + tests/oss-fuzz.sh
Step #12 - "compile-honggfuzz-address-x86_64": + export CC=clang
Step #12 - "compile-honggfuzz-address-x86_64": + CC=clang
Step #12 - "compile-honggfuzz-address-x86_64": + export CXX=clang++
Step #12 - "compile-honggfuzz-address-x86_64": + CXX=clang++
Step #12 - "compile-honggfuzz-address-x86_64": + export WORK=/work
Step #12 - "compile-honggfuzz-address-x86_64": + WORK=/work
Step #12 - "compile-honggfuzz-address-x86_64": + export OUT=/workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + OUT=/workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + CFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -fno-sanitize=bounds'
Step #12 - "compile-honggfuzz-address-x86_64": + mkdir -p /workspace/out/honggfuzz-address-x86_64
Step #12 - "compile-honggfuzz-address-x86_64": + build=/work/build
Step #12 - "compile-honggfuzz-address-x86_64": + rm -rf /work/build
Step #12 - "compile-honggfuzz-address-x86_64": + mkdir -p /work/build
Step #12 - "compile-honggfuzz-address-x86_64": ++ pwd
Step #12 - "compile-honggfuzz-address-x86_64": + export LIBTPMS=/src/libtpms
Step #12 - "compile-honggfuzz-address-x86_64": + LIBTPMS=/src/libtpms
Step #12 - "compile-honggfuzz-address-x86_64": + autoreconf -vfi
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: Entering directory `.'
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: configure.ac: not using Gettext
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: running: aclocal --force -I m4
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: configure.ac: tracing
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: running: libtoolize --copy --force
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, '.'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #12 - "compile-honggfuzz-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: running: /usr/bin/autoconf --force
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: running: /usr/bin/autoheader --force
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: running: automake --add-missing --copy --force-missing
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:31: installing './compile'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:13: installing './config.guess'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:13: installing './config.sub'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:14: installing './install-sh'
Step #12 - "compile-honggfuzz-address-x86_64": configure.ac:14: installing './missing'
Step #12 - "compile-honggfuzz-address-x86_64": src/Makefile.am: installing './depcomp'
Step #12 - "compile-honggfuzz-address-x86_64": parallel-tests: installing './test-driver'
Step #12 - "compile-honggfuzz-address-x86_64": autoreconf: Leaving directory `.'
Step #12 - "compile-honggfuzz-address-x86_64": + cd /work/build
Step #12 - "compile-honggfuzz-address-x86_64": + /src/libtpms/configure --disable-shared --enable-static --with-openssl --with-tpm2
Step #12 - "compile-honggfuzz-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking target system type... x86_64-pc-linux-gnu
Step #12 - "compile-honggfuzz-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #12 - "compile-honggfuzz-address-x86_64": checking whether build environment is sane... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #12 - "compile-honggfuzz-address-x86_64": checking for gawk... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for mawk... mawk
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make sets $(MAKE)... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports nested variables... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the C compiler works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for C compiler default output file name... a.out
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of executables... 
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are cross compiling... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for suffix of object files... o
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the linker accepts -Wl,--version-script=/src/libtpms/src/test.syms... yes
Step #12 - "compile-honggfuzz-address-x86_64": Building with TPM2 support
Step #12 - "compile-honggfuzz-address-x86_64": checking how to run the C preprocessor... clang -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #12 - "compile-honggfuzz-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for ANSI C header files... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/types.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for sys/stat.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdlib.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for string.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for memory.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for strings.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for inttypes.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for stdint.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for unistd.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for AES_set_encrypt_key in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking openssl/aes.h usability... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking openssl/aes.h presence... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for openssl/aes.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": Building with openssl crypto library
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_CIPHER_CTX_new in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_EncryptInit_ex in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_aes_128_cbc in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_des_ede3_cbc in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_camellia_128_cbc in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for DES_random_key in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_CIPHER_CTX_iv in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EC_KEY_set_group in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EC_KEY_generate_key in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EC_KEY_get0_private_key in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for ECDSA_SIG_new in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for ECDSA_SIG_set0 in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for ECDSA_do_verify in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for ECDSA_do_sign in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EC_KEY_set_group in -lcrypto... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for RSA_set0_key in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for RSA_set0_factors in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for RSA_set0_crt_params in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for RSA_generate_key_ex in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_CTX_new in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_assign in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_encrypt_init in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_encrypt in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_decrypt_init in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_decrypt in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_sign_init in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_sign in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_verify_init in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_PKEY_verify in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for EVP_get_digestbyname in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether EVP_PKEY_CTX_set0_rsa_oaep_label is defined in <openssl/rsa.h>... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_padding is defined in <openssl/rsa.h>... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_oaep_md is defined in <openssl/rsa.h>... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether EVP_PKEY_CTX_set_signature_md is defined in <openssl/evp.h>... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether OSSL_KDF_NAME_SSKDF is defined in <openssl/core_names.h>... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for EC_POINT_get_affine_coordinates in -lcrypto... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking how to print strings... printf
Step #12 - "compile-honggfuzz-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #12 - "compile-honggfuzz-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #12 - "compile-honggfuzz-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #12 - "compile-honggfuzz-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #12 - "compile-honggfuzz-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #12 - "compile-honggfuzz-address-x86_64": checking whether ln -s works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #12 - "compile-honggfuzz-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdump... objdump
Step #12 - "compile-honggfuzz-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlltool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #12 - "compile-honggfuzz-address-x86_64": checking for ar... ar
Step #12 - "compile-honggfuzz-address-x86_64": checking for archiver @FILE support... @
Step #12 - "compile-honggfuzz-address-x86_64": checking for strip... strip
Step #12 - "compile-honggfuzz-address-x86_64": checking for ranlib... ranlib
Step #12 - "compile-honggfuzz-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #12 - "compile-honggfuzz-address-x86_64": checking for sysroot... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for a working dd... /usr/bin/dd
Step #12 - "compile-honggfuzz-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #12 - "compile-honggfuzz-address-x86_64": checking for mt... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if : is a manifest tool... no
Step #12 - "compile-honggfuzz-address-x86_64": checking for dlfcn.h... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for objdir... .libs
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang static flag -static works... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #12 - "compile-honggfuzz-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #12 - "compile-honggfuzz-address-x86_64": checking whether stripping libraries is possible... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if libtool supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build shared libraries... no
Step #12 - "compile-honggfuzz-address-x86_64": checking whether to build static libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for gcc... (cached) clang
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang... (cached) gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking whether we are using the GNU C++ compiler... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether clang++ accepts -g... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dependency style of clang++... gcc3
Step #12 - "compile-honggfuzz-address-x86_64": checking how to run the C++ preprocessor... clang++ -E
Step #12 - "compile-honggfuzz-address-x86_64": checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
Step #12 - "compile-honggfuzz-address-x86_64": checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clang++ option to produce PIC... -fPIC -DPIC
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang++ PIC flag -fPIC -DPIC works... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang++ static flag -static works... no
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang++ supports -c -o file.o... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking if clang++ supports -c -o file.o... (cached) yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking dynamic linker characteristics... (cached) GNU/Linux ld.so
Step #12 - "compile-honggfuzz-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #12 - "compile-honggfuzz-address-x86_64": checking for an ANSI C-conforming const... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for inline... inline
Step #12 - "compile-honggfuzz-address-x86_64": checking for size_t... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking for clock_gettime in -lc... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether linker supports -Wl,-z,relro... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking whether linker supports -Wl,-z,now... yes
Step #12 - "compile-honggfuzz-address-x86_64": checking that generated files are newer than configure... done
Step #12 - "compile-honggfuzz-address-x86_64": configure: creating ./config.status
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating dist/libtpms.spec
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/libtpms/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating include/libtpms/tpm_library.h
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating man/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating man/man3/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating src/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating libtpms.pc
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating tests/Makefile
Step #12 - "compile-honggfuzz-address-x86_64": config.status: creating config.h
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing depfiles commands
Step #12 - "compile-honggfuzz-address-x86_64": config.status: executing libtool commands
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": AM_CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-cmp -fno-sanitize=bounds -DUSE_OPENSSL_FUNCTIONS_SYMMETRIC=1 -DUSE_OPENSSL_FUNCTIONS_EC=1 -DUSE_OPENSSL_FUNCTIONS_ECDSA=1 -DUSE_OPENSSL_FUNCTIONS_RSA=1 -DUSE_OPENSSL_FUNCTIONS_SSKDF=0 -DUSE_EC_POINT_GET_AFFINE_COORDINATES_API=1  -Wall -Werror -Wshadow -Wreturn-type -Wsign-compare -Wno-self-assign -Wmissing-prototypes
Step #12 - "compile-honggfuzz-address-x86_64": HARDENING_CFLAGS=-fstack-protector-strong  -D_FORTIFY_SOURCE=2
Step #12 - "compile-honggfuzz-address-x86_64": HARDENING_LDFLAGS= -Wl,-z,relro -Wl,-z,now
Step #12 - "compile-honggfuzz-address-x86_64": AM_LDFLAGS= 
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": Version to build        : 0.11.0
Step #12 - "compile-honggfuzz-address-x86_64": Crypto library          : openssl
Step #12 - "compile-honggfuzz-address-x86_64": Debug build             : 
Step #12 - "compile-honggfuzz-address-x86_64": With TPM1.2 support     : yes
Step #12 - "compile-honggfuzz-address-x86_64": With TPM2 support       : yes
Step #12 - "compile-honggfuzz-address-x86_64": HAVE_VERSION_SCRIPT     : yes
Step #12 - "compile-honggfuzz-address-x86_64": Use openssl crypto for  : symmetric (AES, TDES) general elliptic curve (EC) elliptic curve (ECDSA) RSA 
Step #12 - "compile-honggfuzz-address-x86_64": Test coverage           : 
Step #12 - "compile-honggfuzz-address-x86_64": Static build            : yes
Step #12 - "compile-honggfuzz-address-x86_64": Statically linked tests : yes
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": 
Step #12 - "compile-honggfuzz-address-x86_64": ++ nproc
Step #12 - "compile-honggfuzz-address-x86_64": + make -j32
Step #12 - "compile-honggfuzz-address-x86_64": make  all-recursive
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Entering directory '/work/build'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in include
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/work/build/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in libtpms
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/work/build/include/libtpms'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/work/build/include/libtpms'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/work/build/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/work/build/include'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/work/build/include'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in man
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/work/build/man'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in man3
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/work/build/man/man3'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/work/build/man/man3'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Entering directory '/work/build/man'
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #12 - "compile-honggfuzz-address-x86_64": make[3]: Leaving directory '/work/build/man'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/work/build/man'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in src
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/work/build/src'
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_la-disabled_interface.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_la-tpm_debug.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_la-tpm_library.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_la-tpm_memory.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_la-tpm_nvfile.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_interface.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_tis.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_interface.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_tis.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_admin.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_audit.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_auth.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_cryptoh.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_daa.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_counter.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_delegate.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_digest.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_error.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_global.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_identity.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_init.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_libtpms_io.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_key.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_load.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_maint.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_migration.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nonce.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nvram.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_openssl_helpers.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_owner.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_pcr.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_permanent.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_platform.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_process.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_secret.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_session.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_sizedbuffer.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_startup.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_store.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_storage.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ticks.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_time.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_transport.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ver.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_svnrevision.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_crypto.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACT_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACTCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmCap.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmTests.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AsymmetricCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AttestationCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Attest_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AuditCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Bits.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnEccConstants.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnConvert.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMath.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMemory.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Cancel.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CapabilityCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Clock.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ClockCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandAudit.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandCodeAttributes.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandDispatcher.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ContextCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Context_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptEccData.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptSelfTest.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptUtil.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DA.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DebugHelpers.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DictionaryCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DuplicationCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EACommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EncryptDecrypt_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entity.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entropy.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EphemeralCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExecCommand.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExtraData.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Global.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HashCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Handle.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Hierarchy.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HierarchyCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IntegrityCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IoBuffers.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Locality.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LocalityPlat.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ManagementCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Manufacture.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Marshal.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-MathOnByteBuffers.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Memory.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvDynamic.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMem.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvReserved.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NV_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ObjectCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PCR.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformACT.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformData.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformPcr.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Policy_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Power.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PowerPlat.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PP.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PPPlat.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PrimeData.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PropertyCap.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RandomCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Response.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ResponseCodeProcessing.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RunCommand.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Session.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionProcess.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SigningCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StartupCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SymmetricCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TestingCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Ticket.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Time.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmASN1.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmBigNumThunks.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDAA.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDSA.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Schnorr.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_SM2.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Util.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Util.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Debug.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Util.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmSizeChecks.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TPMCmdp.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmFail.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unique.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unmarshal.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-VendorInfo.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Vendor_TCG_Test.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_ECC.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_RSA.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_spt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityBitArray.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityObject.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LibtpmsCallbacks.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMarshal.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAlgorithm.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAttributes.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeCommands.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeProfile.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StateMarshal.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Volatile.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-BnToOsslMath.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptCmac.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptDes.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccCrypt.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccKeyExchange.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccMain.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccSignature.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptHash.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrime.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrimeSieve.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRand.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRsa.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSmac.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSym.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-ExpDCache.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-Helpers.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslDesSupport.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslSupport.lo
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtpms_tpm12.la
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtpms_tpm2.la
Step #12 - "compile-honggfuzz-address-x86_64":   CCLD     libtpms.la
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/work/build/src'
Step #12 - "compile-honggfuzz-address-x86_64": Making all in tests
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/work/build/tests'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/work/build/tests'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Entering directory '/work/build'
Step #12 - "compile-honggfuzz-address-x86_64": make[2]: Leaving directory '/work/build'
Step #12 - "compile-honggfuzz-address-x86_64": make[1]: Leaving directory '/work/build'
Step #12 - "compile-honggfuzz-address-x86_64": + make -C tests fuzz
Step #12 - "compile-honggfuzz-address-x86_64": make: Entering directory '/work/build/tests'
Step #12 - "compile-honggfuzz-address-x86_64":   CXX      fuzz-fuzz.o
Step #12 - "compile-honggfuzz-address-x86_64":   CXXLD    fuzz
Step #12 - "compile-honggfuzz-address-x86_64": make: Leaving directory '/work/build/tests'
Step #12 - "compile-honggfuzz-address-x86_64": + zip -jqr /workspace/out/honggfuzz-address-x86_64/fuzz_seed_corpus.zip /src/libtpms/tests/corpus-execute-command
Step #12 - "compile-honggfuzz-address-x86_64": + find /work/build -type f -executable -name 'fuzz*' -exec mv '{}' /workspace/out/honggfuzz-address-x86_64 ';'
Step #12 - "compile-honggfuzz-address-x86_64": + find /work/build -type f -name '*.options' -exec mv '{}' /workspace/out/honggfuzz-address-x86_64 ';'
Finished Step #12 - "compile-honggfuzz-address-x86_64"
Starting Step #13 - "build-check-honggfuzz-address-x86_64"
Step #13 - "build-check-honggfuzz-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #13 - "build-check-honggfuzz-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmper2h5wfg/fuzz
Finished Step #13 - "build-check-honggfuzz-address-x86_64"
Starting Step #14
Step #14: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #14
Starting Step #15
Step #15: Already have image: gcr.io/oss-fuzz/libtpms
Step #15:   adding: fuzz (deflated 65%)
Step #15:   adding: fuzz_seed_corpus.zip (stored 0%)
Step #15:   adding: honggfuzz (deflated 66%)
Step #15:   adding: llvm-symbolizer (deflated 65%)
Finished Step #15
Starting Step #16
Step #16: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #16:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #16:                                  Dload  Upload   Total   Spent    Left  Speed
Step #16:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0     0  100   155      0    887 --:--:-- --:--:-- --:--:--   890
Finished Step #16
Starting Step #17
Step #17: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #17:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #17:                                  Dload  Upload   Total   Spent    Left  Speed
Step #17:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 5762k    0     0  100 5762k      0  27.4M --:--:-- --:--:-- --:--:-- 27.4M100 5762k    0     0  100 5762k      0  18.7M --:--:-- --:--:-- --:--:-- 18.6M
Finished Step #17
Starting Step #18
Step #18: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #18:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #18:                                  Dload  Upload   Total   Spent    Left  Speed
Step #18:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100     5    0     0  100     5      0     19 --:--:-- --:--:-- --:--:--    19100     5    0     0  100     5      0     19 --:--:-- --:--:-- --:--:--    19
Finished Step #18
Starting Step #19
Step #19: Already have image (with digest): gcr.io/cloud-builders/curl
Step #19:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #19:                                  Dload  Upload   Total   Spent    Left  Speed
Step #19:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    32    0     0  100    32      0    180 --:--:-- --:--:-- --:--:--   180
Finished Step #19
Starting Step #20
Step #20: Already have image: gcr.io/oss-fuzz/libtpms
Finished Step #20
Starting Step #21 - "compile-libfuzzer-address-x86_64"
Step #21 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #21 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": CC=clang
Step #21 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #21 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #21 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #21 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #21 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #21 - "compile-libfuzzer-address-x86_64": + tests/oss-fuzz.sh
Step #21 - "compile-libfuzzer-address-x86_64": + export CC=clang
Step #21 - "compile-libfuzzer-address-x86_64": + CC=clang
Step #21 - "compile-libfuzzer-address-x86_64": + export CXX=clang++
Step #21 - "compile-libfuzzer-address-x86_64": + CXX=clang++
Step #21 - "compile-libfuzzer-address-x86_64": + export WORK=/work
Step #21 - "compile-libfuzzer-address-x86_64": + WORK=/work
Step #21 - "compile-libfuzzer-address-x86_64": + export OUT=/workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + OUT=/workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + CFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fno-sanitize=bounds'
Step #21 - "compile-libfuzzer-address-x86_64": + mkdir -p /workspace/out/libfuzzer-address-x86_64
Step #21 - "compile-libfuzzer-address-x86_64": + build=/work/build
Step #21 - "compile-libfuzzer-address-x86_64": + rm -rf /work/build
Step #21 - "compile-libfuzzer-address-x86_64": + mkdir -p /work/build
Step #21 - "compile-libfuzzer-address-x86_64": ++ pwd
Step #21 - "compile-libfuzzer-address-x86_64": + export LIBTPMS=/src/libtpms
Step #21 - "compile-libfuzzer-address-x86_64": + LIBTPMS=/src/libtpms
Step #21 - "compile-libfuzzer-address-x86_64": + autoreconf -vfi
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: Entering directory `.'
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: configure.ac: not using Gettext
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: running: aclocal --force -I m4
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: configure.ac: tracing
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: running: libtoolize --copy --force
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, '.'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file './ltmain.sh'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #21 - "compile-libfuzzer-address-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: running: /usr/bin/autoconf --force
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: running: /usr/bin/autoheader --force
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: running: automake --add-missing --copy --force-missing
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:31: installing './compile'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:13: installing './config.guess'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:13: installing './config.sub'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:14: installing './install-sh'
Step #21 - "compile-libfuzzer-address-x86_64": configure.ac:14: installing './missing'
Step #21 - "compile-libfuzzer-address-x86_64": src/Makefile.am: installing './depcomp'
Step #21 - "compile-libfuzzer-address-x86_64": parallel-tests: installing './test-driver'
Step #21 - "compile-libfuzzer-address-x86_64": autoreconf: Leaving directory `.'
Step #21 - "compile-libfuzzer-address-x86_64": + cd /work/build
Step #21 - "compile-libfuzzer-address-x86_64": + /src/libtpms/configure --disable-shared --enable-static --with-openssl --with-tpm2
Step #21 - "compile-libfuzzer-address-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking target system type... x86_64-pc-linux-gnu
Step #21 - "compile-libfuzzer-address-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #21 - "compile-libfuzzer-address-x86_64": checking whether build environment is sane... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #21 - "compile-libfuzzer-address-x86_64": checking for gawk... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for mawk... mawk
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make sets $(MAKE)... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports nested variables... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the C compiler works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for C compiler default output file name... a.out
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of executables... 
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are cross compiling... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for suffix of object files... o
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the linker accepts -Wl,--version-script=/src/libtpms/src/test.syms... yes
Step #21 - "compile-libfuzzer-address-x86_64": Building with TPM2 support
Step #21 - "compile-libfuzzer-address-x86_64": checking how to run the C preprocessor... clang -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #21 - "compile-libfuzzer-address-x86_64": checking for egrep... /usr/bin/grep -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for ANSI C header files... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/types.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for sys/stat.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdlib.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for string.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for memory.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for strings.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for inttypes.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for stdint.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for unistd.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for AES_set_encrypt_key in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking openssl/aes.h usability... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking openssl/aes.h presence... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for openssl/aes.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": Building with openssl crypto library
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_CIPHER_CTX_new in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_EncryptInit_ex in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_aes_128_cbc in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_des_ede3_cbc in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_camellia_128_cbc in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for DES_random_key in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_CIPHER_CTX_iv in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EC_KEY_set_group in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EC_KEY_generate_key in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EC_KEY_get0_private_key in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for ECDSA_SIG_new in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for ECDSA_SIG_set0 in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for ECDSA_do_verify in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for ECDSA_do_sign in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EC_KEY_set_group in -lcrypto... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for RSA_set0_key in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for RSA_set0_factors in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for RSA_set0_crt_params in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for RSA_generate_key_ex in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_CTX_new in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_assign in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_encrypt_init in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_encrypt in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_decrypt_init in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_decrypt in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_sign_init in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_sign in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_verify_init in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_PKEY_verify in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for EVP_get_digestbyname in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether EVP_PKEY_CTX_set0_rsa_oaep_label is defined in <openssl/rsa.h>... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_padding is defined in <openssl/rsa.h>... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether EVP_PKEY_CTX_set_rsa_oaep_md is defined in <openssl/rsa.h>... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether EVP_PKEY_CTX_set_signature_md is defined in <openssl/evp.h>... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether OSSL_KDF_NAME_SSKDF is defined in <openssl/core_names.h>... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for EC_POINT_get_affine_coordinates in -lcrypto... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking how to print strings... printf
Step #21 - "compile-libfuzzer-address-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #21 - "compile-libfuzzer-address-x86_64": checking for fgrep... /usr/bin/grep -F
Step #21 - "compile-libfuzzer-address-x86_64": checking for ld used by clang... /usr/bin/ld
Step #21 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #21 - "compile-libfuzzer-address-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #21 - "compile-libfuzzer-address-x86_64": checking whether ln -s works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking the maximum length of command line arguments... 1572864
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #21 - "compile-libfuzzer-address-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdump... objdump
Step #21 - "compile-libfuzzer-address-x86_64": checking how to recognize dependent libraries... pass_all
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlltool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #21 - "compile-libfuzzer-address-x86_64": checking for ar... ar
Step #21 - "compile-libfuzzer-address-x86_64": checking for archiver @FILE support... @
Step #21 - "compile-libfuzzer-address-x86_64": checking for strip... strip
Step #21 - "compile-libfuzzer-address-x86_64": checking for ranlib... ranlib
Step #21 - "compile-libfuzzer-address-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #21 - "compile-libfuzzer-address-x86_64": checking for sysroot... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for a working dd... /usr/bin/dd
Step #21 - "compile-libfuzzer-address-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #21 - "compile-libfuzzer-address-x86_64": checking for mt... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if : is a manifest tool... no
Step #21 - "compile-libfuzzer-address-x86_64": checking for dlfcn.h... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for objdir... .libs
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -fno-rtti -fno-exceptions... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang static flag -static works... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #21 - "compile-libfuzzer-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #21 - "compile-libfuzzer-address-x86_64": checking whether stripping libraries is possible... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if libtool supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build shared libraries... no
Step #21 - "compile-libfuzzer-address-x86_64": checking whether to build static libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for gcc... (cached) clang
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang accepts -g... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang... (cached) gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking whether we are using the GNU C++ compiler... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether clang++ accepts -g... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dependency style of clang++... gcc3
Step #21 - "compile-libfuzzer-address-x86_64": checking how to run the C++ preprocessor... clang++ -E
Step #21 - "compile-libfuzzer-address-x86_64": checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
Step #21 - "compile-libfuzzer-address-x86_64": checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clang++ option to produce PIC... -fPIC -DPIC
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang++ PIC flag -fPIC -DPIC works... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang++ static flag -static works... no
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang++ supports -c -o file.o... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking if clang++ supports -c -o file.o... (cached) yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking dynamic linker characteristics... (cached) GNU/Linux ld.so
Step #21 - "compile-libfuzzer-address-x86_64": checking how to hardcode library paths into programs... immediate
Step #21 - "compile-libfuzzer-address-x86_64": checking for an ANSI C-conforming const... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for inline... inline
Step #21 - "compile-libfuzzer-address-x86_64": checking for size_t... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking for clock_gettime in -lc... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether linker supports -Wl,-z,relro... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking whether linker supports -Wl,-z,now... yes
Step #21 - "compile-libfuzzer-address-x86_64": checking that generated files are newer than configure... done
Step #21 - "compile-libfuzzer-address-x86_64": configure: creating ./config.status
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating dist/libtpms.spec
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/libtpms/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating include/libtpms/tpm_library.h
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating man/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating man/man3/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating src/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating libtpms.pc
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating tests/Makefile
Step #21 - "compile-libfuzzer-address-x86_64": config.status: creating config.h
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing depfiles commands
Step #21 - "compile-libfuzzer-address-x86_64": config.status: executing libtool commands
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": AM_CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fno-sanitize=bounds -DUSE_OPENSSL_FUNCTIONS_SYMMETRIC=1 -DUSE_OPENSSL_FUNCTIONS_EC=1 -DUSE_OPENSSL_FUNCTIONS_ECDSA=1 -DUSE_OPENSSL_FUNCTIONS_RSA=1 -DUSE_OPENSSL_FUNCTIONS_SSKDF=0 -DUSE_EC_POINT_GET_AFFINE_COORDINATES_API=1  -Wall -Werror -Wshadow -Wreturn-type -Wsign-compare -Wno-self-assign -Wmissing-prototypes
Step #21 - "compile-libfuzzer-address-x86_64": HARDENING_CFLAGS=-fstack-protector-strong  -D_FORTIFY_SOURCE=2
Step #21 - "compile-libfuzzer-address-x86_64": HARDENING_LDFLAGS= -Wl,-z,relro -Wl,-z,now
Step #21 - "compile-libfuzzer-address-x86_64": AM_LDFLAGS= 
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": Version to build        : 0.11.0
Step #21 - "compile-libfuzzer-address-x86_64": Crypto library          : openssl
Step #21 - "compile-libfuzzer-address-x86_64": Debug build             : 
Step #21 - "compile-libfuzzer-address-x86_64": With TPM1.2 support     : yes
Step #21 - "compile-libfuzzer-address-x86_64": With TPM2 support       : yes
Step #21 - "compile-libfuzzer-address-x86_64": HAVE_VERSION_SCRIPT     : yes
Step #21 - "compile-libfuzzer-address-x86_64": Use openssl crypto for  : symmetric (AES, TDES) general elliptic curve (EC) elliptic curve (ECDSA) RSA 
Step #21 - "compile-libfuzzer-address-x86_64": Test coverage           : 
Step #21 - "compile-libfuzzer-address-x86_64": Static build            : yes
Step #21 - "compile-libfuzzer-address-x86_64": Statically linked tests : yes
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": 
Step #21 - "compile-libfuzzer-address-x86_64": ++ nproc
Step #21 - "compile-libfuzzer-address-x86_64": + make -j32
Step #21 - "compile-libfuzzer-address-x86_64": make  all-recursive
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Entering directory '/work/build'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in include
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/work/build/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in libtpms
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/work/build/include/libtpms'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/work/build/include/libtpms'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/work/build/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/work/build/include'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/work/build/include'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in man
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/work/build/man'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in man3
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/work/build/man/man3'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/work/build/man/man3'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Entering directory '/work/build/man'
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #21 - "compile-libfuzzer-address-x86_64": make[3]: Leaving directory '/work/build/man'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/work/build/man'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in src
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/work/build/src'
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_la-disabled_interface.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_la-tpm_debug.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_la-tpm_library.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_la-tpm_memory.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_la-tpm_nvfile.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_interface.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_tis.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_interface.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_tis.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_audit.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_admin.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_auth.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_cryptoh.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_counter.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_delegate.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_daa.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_digest.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_error.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_global.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_identity.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_init.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_libtpms_io.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_key.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_load.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_maint.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_migration.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nonce.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nvram.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_openssl_helpers.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_pcr.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_permanent.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_owner.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_platform.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_process.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_secret.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_session.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_sizedbuffer.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_startup.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_store.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_storage.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ticks.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_time.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_transport.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ver.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_svnrevision.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_crypto.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACT_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ACTCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmCap.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmTests.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AsymmetricCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AttestationCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Attest_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-AuditCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Bits.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnEccConstants.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnConvert.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMath.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMemory.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Cancel.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CapabilityCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Clock.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ClockCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandAudit.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandCodeAttributes.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandDispatcher.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ContextCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Context_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptEccData.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptSelfTest.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptUtil.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DA.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DebugHelpers.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DictionaryCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-DuplicationCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EACommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EncryptDecrypt_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entity.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Entropy.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-EphemeralCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExecCommand.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ExtraData.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Global.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Handle.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HashCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Hierarchy.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-HierarchyCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IntegrityCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-IoBuffers.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Locality.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LocalityPlat.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ManagementCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Manufacture.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Marshal.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-MathOnByteBuffers.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Memory.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvDynamic.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMem.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NvReserved.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NV_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ObjectCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Object_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PCR.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformACT.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformData.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformPcr.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Policy_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Power.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PowerPlat.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PP.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PPPlat.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PrimeData.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-PropertyCap.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RandomCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Response.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-ResponseCodeProcessing.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Session.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RunCommand.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionProcess.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SigningCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StartupCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-SymmetricCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TestingCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Ticket.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Time.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmASN1.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmBigNumThunks.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDAA.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDSA.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Schnorr.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_SM2.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Util.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Util.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Debug.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Util.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmSizeChecks.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TPMCmdp.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmFail.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unique.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Unmarshal.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-VendorInfo.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Vendor_TCG_Test.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_ECC.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_RSA.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_spt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityBitArray.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityObject.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-LibtpmsCallbacks.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMarshal.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAlgorithm.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAttributes.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeCommands.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeProfile.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-StateMarshal.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/libtpms_tpm2_la-Volatile.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-BnToOsslMath.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptCmac.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptDes.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccCrypt.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccKeyExchange.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccMain.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccSignature.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptHash.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrime.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrimeSieve.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRand.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRsa.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSmac.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSym.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-ExpDCache.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-Helpers.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslDesSupport.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslSupport.lo
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtpms_tpm12.la
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtpms_tpm2.la
Step #21 - "compile-libfuzzer-address-x86_64":   CCLD     libtpms.la
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/work/build/src'
Step #21 - "compile-libfuzzer-address-x86_64": Making all in tests
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/work/build/tests'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Nothing to be done for 'all'.
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/work/build/tests'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Entering directory '/work/build'
Step #21 - "compile-libfuzzer-address-x86_64": make[2]: Leaving directory '/work/build'
Step #21 - "compile-libfuzzer-address-x86_64": make[1]: Leaving directory '/work/build'
Step #21 - "compile-libfuzzer-address-x86_64": + make -C tests fuzz
Step #21 - "compile-libfuzzer-address-x86_64": make: Entering directory '/work/build/tests'
Step #21 - "compile-libfuzzer-address-x86_64":   CXX      fuzz-fuzz.o
Step #21 - "compile-libfuzzer-address-x86_64":   CXXLD    fuzz
Step #21 - "compile-libfuzzer-address-x86_64": make: Leaving directory '/work/build/tests'
Step #21 - "compile-libfuzzer-address-x86_64": + zip -jqr /workspace/out/libfuzzer-address-x86_64/fuzz_seed_corpus.zip /src/libtpms/tests/corpus-execute-command
Step #21 - "compile-libfuzzer-address-x86_64": + find /work/build -type f -executable -name 'fuzz*' -exec mv '{}' /workspace/out/libfuzzer-address-x86_64 ';'
Step #21 - "compile-libfuzzer-address-x86_64": + find /work/build -type f -name '*.options' -exec mv '{}' /workspace/out/libfuzzer-address-x86_64 ';'
Finished Step #21 - "compile-libfuzzer-address-x86_64"
Starting Step #22 - "build-check-libfuzzer-address-x86_64"
Step #22 - "build-check-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #22 - "build-check-libfuzzer-address-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpu8lcwz14/fuzz
Finished Step #22 - "build-check-libfuzzer-address-x86_64"
Starting Step #23
Step #23: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #23
Starting Step #24
Step #24: Already have image: gcr.io/oss-fuzz/libtpms
Step #24:   adding: fuzz (deflated 67%)
Step #24:   adding: fuzz_seed_corpus.zip (stored 0%)
Step #24:   adding: llvm-symbolizer (deflated 65%)
Finished Step #24
Starting Step #25
Step #25: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #25:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #25:                                  Dload  Upload   Total   Spent    Left  Speed
Step #25:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0     0  100   155      0    793 --:--:-- --:--:-- --:--:--   794
Finished Step #25
Starting Step #26
Step #26: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #26:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #26:                                  Dload  Upload   Total   Spent    Left  Speed
Step #26:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 14 6146k    0     0   14  912k      0  12.8M --:--:-- --:--:-- --:--:-- 12.7M100 6146k    0     0  100 6146k      0  20.6M --:--:-- --:--:-- --:--:-- 20.6M
Finished Step #26
Starting Step #27
Step #27: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #27:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #27:                                  Dload  Upload   Total   Spent    Left  Speed
Step #27:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100     5    0     0  100     5      0     24 --:--:-- --:--:-- --:--:--    24100     5    0     0  100     5      0     20 --:--:-- --:--:-- --:--:--    20
Finished Step #27
Starting Step #28
Step #28: Already have image (with digest): gcr.io/cloud-builders/curl
Step #28:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #28:                                  Dload  Upload   Total   Spent    Left  Speed
Step #28:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    32    0     0  100    32      0    156 --:--:-- --:--:-- --:--:--   156
Finished Step #28
Starting Step #29
Step #29: Already have image: gcr.io/oss-fuzz/libtpms
Finished Step #29
Starting Step #30 - "compile-libfuzzer-undefined-x86_64"
Step #30 - "compile-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #30 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-undefined-x86_64": vm.mmap_rnd_bits = 28
Step #30 - "compile-libfuzzer-undefined-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #30 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-undefined-x86_64": CC=clang
Step #30 - "compile-libfuzzer-undefined-x86_64": CXX=clang++
Step #30 - "compile-libfuzzer-undefined-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function
Step #30 - "compile-libfuzzer-undefined-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -stdlib=libc++
Step #30 - "compile-libfuzzer-undefined-x86_64": RUSTFLAGS=--cfg fuzzing -Cdebuginfo=1 -Cforce-frame-pointers
Step #30 - "compile-libfuzzer-undefined-x86_64": ---------------------------------------------------------------
Step #30 - "compile-libfuzzer-undefined-x86_64": + tests/oss-fuzz.sh
Step #30 - "compile-libfuzzer-undefined-x86_64": + export CC=clang
Step #30 - "compile-libfuzzer-undefined-x86_64": + CC=clang
Step #30 - "compile-libfuzzer-undefined-x86_64": + export CXX=clang++
Step #30 - "compile-libfuzzer-undefined-x86_64": + CXX=clang++
Step #30 - "compile-libfuzzer-undefined-x86_64": + export WORK=/work
Step #30 - "compile-libfuzzer-undefined-x86_64": + WORK=/work
Step #30 - "compile-libfuzzer-undefined-x86_64": + export OUT=/workspace/out/libfuzzer-undefined-x86_64
Step #30 - "compile-libfuzzer-undefined-x86_64": + OUT=/workspace/out/libfuzzer-undefined-x86_64
Step #30 - "compile-libfuzzer-undefined-x86_64": + CFLAGS='-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -fno-sanitize=bounds'
Step #30 - "compile-libfuzzer-undefined-x86_64": + mkdir -p /workspace/out/libfuzzer-undefined-x86_64
Step #30 - "compile-libfuzzer-undefined-x86_64": + build=/work/build
Step #30 - "compile-libfuzzer-undefined-x86_64": + rm -rf /work/build
Step #30 - "compile-libfuzzer-undefined-x86_64": + mkdir -p /work/build
Step #30 - "compile-libfuzzer-undefined-x86_64": ++ pwd
Step #30 - "compile-libfuzzer-undefined-x86_64": + export LIBTPMS=/src/libtpms
Step #30 - "compile-libfuzzer-undefined-x86_64": + LIBTPMS=/src/libtpms
Step #30 - "compile-libfuzzer-undefined-x86_64": + autoreconf -vfi
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: Entering directory `.'
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: configure.ac: not using Gettext
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: running: aclocal --force -I m4
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: configure.ac: tracing
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: running: libtoolize --copy --force
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, '.'.
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file './ltmain.sh'
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/libtool.m4'
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltoptions.m4'
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltsugar.m4'
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/ltversion.m4'
Step #30 - "compile-libfuzzer-undefined-x86_64": libtoolize: copying file 'm4/lt~obsolete.m4'
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: running: /usr/bin/autoconf --force
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: running: /usr/bin/autoheader --force
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: running: automake --add-missing --copy --force-missing
Step #30 - "compile-libfuzzer-undefined-x86_64": configure.ac:31: installing './compile'
Step #30 - "compile-libfuzzer-undefined-x86_64": configure.ac:13: installing './config.guess'
Step #30 - "compile-libfuzzer-undefined-x86_64": configure.ac:13: installing './config.sub'
Step #30 - "compile-libfuzzer-undefined-x86_64": configure.ac:14: installing './install-sh'
Step #30 - "compile-libfuzzer-undefined-x86_64": configure.ac:14: installing './missing'
Step #30 - "compile-libfuzzer-undefined-x86_64": src/Makefile.am: installing './depcomp'
Step #30 - "compile-libfuzzer-undefined-x86_64": parallel-tests: installing './test-driver'
Step #30 - "compile-libfuzzer-undefined-x86_64": autoreconf: Leaving directory `.'
Step #30 - "compile-libfuzzer-undefined-x86_64": + cd /work/build
Step #30 - "compile-libfuzzer-undefined-x86_64": + /src/libtpms/configure --disable-shared --enable-static --with-openssl --with-tpm2
Step #30 - "compile-libfuzzer-undefined-x86_64": checking build system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-undefined-x86_64": checking host system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-undefined-x86_64": checking target system type... x86_64-pc-linux-gnu
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for a BSD-compatible install... /usr/bin/install -c
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether build environment is sane... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for gawk... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for mawk... mawk
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether make sets $(MAKE)... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether make supports nested variables... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether make supports the include directive... yes (GNU style)
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for gcc... clang
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether the C compiler works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for C compiler default output file name... a.out
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for suffix of executables... 
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether we are cross compiling... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for suffix of object files... o
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... none needed
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... gcc3
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether the linker accepts -Wl,--version-script=/src/libtpms/src/test.syms... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": Building with TPM2 support
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to run the C preprocessor... clang -E
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for grep that handles long lines and -e... /usr/bin/grep
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for egrep... /usr/bin/grep -E
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ANSI C header files... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for sys/types.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for sys/stat.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for stdlib.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for string.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for memory.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for strings.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for inttypes.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for stdint.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for unistd.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for AES_set_encrypt_key in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking openssl/aes.h usability... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking openssl/aes.h presence... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for openssl/aes.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": Building with openssl crypto library
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_CIPHER_CTX_new in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_EncryptInit_ex in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_aes_128_cbc in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_des_ede3_cbc in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_camellia_128_cbc in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for DES_random_key in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_CIPHER_CTX_iv in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EC_KEY_set_group in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EC_KEY_generate_key in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EC_KEY_get0_private_key in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ECDSA_SIG_new in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ECDSA_SIG_set0 in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ECDSA_do_verify in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ECDSA_do_sign in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EC_KEY_set_group in -lcrypto... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for RSA_set0_key in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for RSA_set0_factors in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for RSA_set0_crt_params in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for RSA_generate_key_ex in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_CTX_new in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_assign in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_encrypt_init in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_encrypt in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_decrypt_init in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_decrypt in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_sign_init in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_sign in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_verify_init in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_PKEY_verify in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EVP_get_digestbyname in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether EVP_PKEY_CTX_set0_rsa_oaep_label is defined in <openssl/rsa.h>... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether EVP_PKEY_CTX_set_rsa_padding is defined in <openssl/rsa.h>... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether EVP_PKEY_CTX_set_rsa_oaep_md is defined in <openssl/rsa.h>... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether EVP_PKEY_CTX_set_signature_md is defined in <openssl/evp.h>... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether OSSL_KDF_NAME_SSKDF is defined in <openssl/core_names.h>... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for EC_POINT_get_affine_coordinates in -lcrypto... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to print strings... printf
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for a sed that does not truncate output... /usr/bin/sed
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for fgrep... /usr/bin/grep -F
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang... /usr/bin/ld
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld) is GNU ld... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
Step #30 - "compile-libfuzzer-undefined-x86_64": checking the name lister (/usr/bin/nm -B) interface... BSD nm
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether ln -s works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking the maximum length of command line arguments... 1572864
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to x86_64-pc-linux-gnu format... func_convert_file_noop
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to convert x86_64-pc-linux-gnu file names to toolchain format... func_convert_file_noop
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for /usr/bin/ld option to reload object files... -r
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for objdump... objdump
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to recognize dependent libraries... pass_all
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for dlltool... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to associate runtime and link libraries... printf %s\n
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ar... ar
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for archiver @FILE support... @
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for strip... strip
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ranlib... ranlib
Step #30 - "compile-libfuzzer-undefined-x86_64": checking command to parse /usr/bin/nm -B output from clang object... ok
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for sysroot... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for a working dd... /usr/bin/dd
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to truncate binary pipes... /usr/bin/dd bs=4096 count=1
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for mt... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if : is a manifest tool... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for dlfcn.h... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for objdir... .libs
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -fno-rtti -fno-exceptions... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for clang option to produce PIC... -fPIC -DPIC
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang PIC flag -fPIC -DPIC works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang static flag -static works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang supports -c -o file.o... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether the clang linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking dynamic linker characteristics... GNU/Linux ld.so
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to hardcode library paths into programs... immediate
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether stripping libraries is possible... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if libtool supports shared libraries... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether to build shared libraries... no
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether to build static libraries... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for gcc... (cached) clang
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C compiler... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether clang accepts -g... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for clang option to accept ISO C89... (cached) none needed
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether clang understands -c and -o together... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang... (cached) gcc3
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether we are using the GNU C++ compiler... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether clang++ accepts -g... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking dependency style of clang++... gcc3
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to run the C++ preprocessor... clang++ -E
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for ld used by clang++... /usr/bin/ld -m elf_x86_64
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for clang++ option to produce PIC... -fPIC -DPIC
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang++ PIC flag -fPIC -DPIC works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang++ static flag -static works... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang++ supports -c -o file.o... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking if clang++ supports -c -o file.o... (cached) yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether the clang++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking dynamic linker characteristics... (cached) GNU/Linux ld.so
Step #30 - "compile-libfuzzer-undefined-x86_64": checking how to hardcode library paths into programs... immediate
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for an ANSI C-conforming const... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for inline... inline
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for size_t... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking for clock_gettime in -lc... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether linker supports -Wl,-z,relro... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking whether linker supports -Wl,-z,now... yes
Step #30 - "compile-libfuzzer-undefined-x86_64": checking that generated files are newer than configure... done
Step #30 - "compile-libfuzzer-undefined-x86_64": configure: creating ./config.status
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating dist/libtpms.spec
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/libtpms/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating include/libtpms/tpm_library.h
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating man/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating man/man3/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating src/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating libtpms.pc
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating tests/Makefile
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: creating config.h
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: executing depfiles commands
Step #30 - "compile-libfuzzer-undefined-x86_64": config.status: executing libtool commands
Step #30 - "compile-libfuzzer-undefined-x86_64": 
Step #30 - "compile-libfuzzer-undefined-x86_64": AM_CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unsigned-integer-overflow,unreachable,vla-bound,vptr -fno-sanitize-recover=array-bounds,bool,builtin,enum,function,integer-divide-by-zero,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound,vptr -fsanitize=fuzzer-no-link -fno-sanitize=function -fno-sanitize=bounds -DUSE_OPENSSL_FUNCTIONS_SYMMETRIC=1 -DUSE_OPENSSL_FUNCTIONS_EC=1 -DUSE_OPENSSL_FUNCTIONS_ECDSA=1 -DUSE_OPENSSL_FUNCTIONS_RSA=1 -DUSE_OPENSSL_FUNCTIONS_SSKDF=0 -DUSE_EC_POINT_GET_AFFINE_COORDINATES_API=1  -Wall -Werror -Wshadow -Wreturn-type -Wsign-compare -Wno-self-assign -Wmissing-prototypes
Step #30 - "compile-libfuzzer-undefined-x86_64": HARDENING_CFLAGS=-fstack-protector-strong  -D_FORTIFY_SOURCE=2
Step #30 - "compile-libfuzzer-undefined-x86_64": HARDENING_LDFLAGS= -Wl,-z,relro -Wl,-z,now
Step #30 - "compile-libfuzzer-undefined-x86_64": AM_LDFLAGS= 
Step #30 - "compile-libfuzzer-undefined-x86_64": 
Step #30 - "compile-libfuzzer-undefined-x86_64": Version to build        : 0.11.0
Step #30 - "compile-libfuzzer-undefined-x86_64": Crypto library          : openssl
Step #30 - "compile-libfuzzer-undefined-x86_64": Debug build             : 
Step #30 - "compile-libfuzzer-undefined-x86_64": With TPM1.2 support     : yes
Step #30 - "compile-libfuzzer-undefined-x86_64": With TPM2 support       : yes
Step #30 - "compile-libfuzzer-undefined-x86_64": HAVE_VERSION_SCRIPT     : yes
Step #30 - "compile-libfuzzer-undefined-x86_64": Use openssl crypto for  : symmetric (AES, TDES) general elliptic curve (EC) elliptic curve (ECDSA) RSA 
Step #30 - "compile-libfuzzer-undefined-x86_64": Test coverage           : 
Step #30 - "compile-libfuzzer-undefined-x86_64": Static build            : yes
Step #30 - "compile-libfuzzer-undefined-x86_64": Statically linked tests : yes
Step #30 - "compile-libfuzzer-undefined-x86_64": 
Step #30 - "compile-libfuzzer-undefined-x86_64": 
Step #30 - "compile-libfuzzer-undefined-x86_64": ++ nproc
Step #30 - "compile-libfuzzer-undefined-x86_64": + make -j32
Step #30 - "compile-libfuzzer-undefined-x86_64": make  all-recursive
Step #30 - "compile-libfuzzer-undefined-x86_64": make[1]: Entering directory '/work/build'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in include
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/work/build/include'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in libtpms
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/work/build/include/libtpms'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/work/build/include/libtpms'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/work/build/include'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/work/build/include'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/work/build/include'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in man
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/work/build/man'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in man3
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/work/build/man/man3'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/work/build/man/man3'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Entering directory '/work/build/man'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Nothing to be done for 'all-am'.
Step #30 - "compile-libfuzzer-undefined-x86_64": make[3]: Leaving directory '/work/build/man'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/work/build/man'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in src
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/work/build/src'
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_la-disabled_interface.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_la-tpm_debug.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_la-tpm_library.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_la-tpm_nvfile.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_la-tpm_memory.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_interface.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_tpm12_la-tpm_tpm12_tis.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_interface.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       libtpms_tpm2_la-tpm_tpm2_tis.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_admin.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_audit.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_auth.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_cryptoh.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_counter.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_daa.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_delegate.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_digest.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_error.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_global.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_identity.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_init.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_libtpms_io.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_key.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_load.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_maint.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_migration.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nvram.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_nonce.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_openssl_helpers.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_owner.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_pcr.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_permanent.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_platform.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_process.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_secret.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_session.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_sizedbuffer.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_startup.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_store.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_storage.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ticks.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_time.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_transport.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_ver.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_svnrevision.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm12/libtpms_tpm12_la-tpm_crypto.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ACT_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ACTCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmCap.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-AlgorithmTests.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-AsymmetricCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-AttestationCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Attest_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-AuditCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Bits.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BnEccConstants.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BnConvert.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMath.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BnMemory.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Cancel.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CapabilityCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Clock.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ClockCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandAudit.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandCodeAttributes.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CommandDispatcher.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ContextCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Context_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptEccData.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptSelfTest.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-CryptUtil.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-DA.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-DebugHelpers.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-DictionaryCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-DuplicationCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-EACommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-EncryptDecrypt_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Entity.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Entropy.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-EphemeralCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ExecCommand.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ExtraData.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Global.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Handle.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-HashCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Hierarchy.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-HierarchyCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-IntegrityCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-IoBuffers.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Locality.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-LocalityPlat.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ManagementCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Manufacture.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Marshal.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-MathOnByteBuffers.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Memory.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NVCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NvDynamic.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMem.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NvReserved.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NV_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Object.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ObjectCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Object_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PCR.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformACT.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformData.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PlatformPcr.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Policy_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Power.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PowerPlat.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PP.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PPPlat.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PrimeData.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-PropertyCap.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RandomCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Response.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-ResponseCodeProcessing.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RunCommand.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Session.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-SessionProcess.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-SigningCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-StartupCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-SymmetricCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TestingCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Ticket.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Time.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmASN1.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmBigNumThunks.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDAA.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_ECDSA.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Schnorr.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_SM2.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Signature_Util.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmEcc_Util.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Debug.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmMath_Util.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmSizeChecks.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TPMCmdp.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-TpmFail.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Unique.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Unmarshal.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-VendorInfo.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Vendor_TCG_Test.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_ECC.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_RSA.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-X509_spt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityBitArray.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-BackwardsCompatibilityObject.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-LibtpmsCallbacks.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-NVMarshal.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAlgorithm.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeAttributes.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeCommands.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-RuntimeProfile.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-StateMarshal.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/libtpms_tpm2_la-Volatile.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-BnToOsslMath.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptCmac.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptDes.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccCrypt.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccKeyExchange.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccMain.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptEccSignature.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptHash.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrime.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptPrimeSieve.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRand.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptRsa.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSmac.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-CryptSym.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-ExpDCache.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-Helpers.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslDesSupport.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CC       tpm2/crypto/openssl/libtpms_tpm2_la-TpmToOsslSupport.lo
Step #30 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtpms_tpm12.la
Step #30 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtpms_tpm2.la
Step #30 - "compile-libfuzzer-undefined-x86_64":   CCLD     libtpms.la
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/work/build/src'
Step #30 - "compile-libfuzzer-undefined-x86_64": Making all in tests
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/work/build/tests'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Nothing to be done for 'all'.
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/work/build/tests'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Entering directory '/work/build'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[2]: Leaving directory '/work/build'
Step #30 - "compile-libfuzzer-undefined-x86_64": make[1]: Leaving directory '/work/build'
Step #30 - "compile-libfuzzer-undefined-x86_64": + make -C tests fuzz
Step #30 - "compile-libfuzzer-undefined-x86_64": make: Entering directory '/work/build/tests'
Step #30 - "compile-libfuzzer-undefined-x86_64":   CXX      fuzz-fuzz.o
Step #30 - "compile-libfuzzer-undefined-x86_64":   CXXLD    fuzz
Step #30 - "compile-libfuzzer-undefined-x86_64": make: Leaving directory '/work/build/tests'
Step #30 - "compile-libfuzzer-undefined-x86_64": + zip -jqr /workspace/out/libfuzzer-undefined-x86_64/fuzz_seed_corpus.zip /src/libtpms/tests/corpus-execute-command
Step #30 - "compile-libfuzzer-undefined-x86_64": + find /work/build -type f -executable -name 'fuzz*' -exec mv '{}' /workspace/out/libfuzzer-undefined-x86_64 ';'
Step #30 - "compile-libfuzzer-undefined-x86_64": + find /work/build -type f -name '*.options' -exec mv '{}' /workspace/out/libfuzzer-undefined-x86_64 ';'
Finished Step #30 - "compile-libfuzzer-undefined-x86_64"
Starting Step #31 - "build-check-libfuzzer-undefined-x86_64"
Step #31 - "build-check-libfuzzer-undefined-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #31 - "build-check-libfuzzer-undefined-x86_64": INFO: performing bad build checks for /tmp/not-out/tmpkq7o3p78/fuzz
Finished Step #31 - "build-check-libfuzzer-undefined-x86_64"
Starting Step #32
Step #32: Already have image (with digest): gcr.io/oss-fuzz-base/base-runner
Finished Step #32
Starting Step #33
Step #33: Already have image: gcr.io/oss-fuzz/libtpms
Step #33:   adding: fuzz (deflated 67%)
Step #33:   adding: fuzz_seed_corpus.zip (stored 0%)
Step #33:   adding: llvm-symbolizer (deflated 65%)
Finished Step #33
Starting Step #34
Step #34: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #34:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #34:                                  Dload  Upload   Total   Spent    Left  Speed
Step #34:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0     0  100   155      0    790 --:--:-- --:--:-- --:--:--   790100   155    0     0  100   155      0    790 --:--:-- --:--:-- --:--:--   790
Finished Step #34
Starting Step #35
Step #35: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #35:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #35:                                  Dload  Upload   Total   Spent    Left  Speed
Step #35:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 5072k    0     0  100 5072k      0  18.3M --:--:-- --:--:-- --:--:-- 18.2M100 5072k    0     0  100 5072k      0  18.3M --:--:-- --:--:-- --:--:-- 18.2M
Finished Step #35
Starting Step #36
Step #36: Already have image (with digest): gcr.io/oss-fuzz-base/uploader
Step #36:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #36:                                  Dload  Upload   Total   Spent    Left  Speed
Step #36:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100     5    0     0  100     5      0     19 --:--:-- --:--:-- --:--:--    19
Finished Step #36
Starting Step #37
Step #37: Already have image (with digest): gcr.io/cloud-builders/curl
Step #37:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
Step #37:                                  Dload  Upload   Total   Spent    Left  Speed
Step #37:   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    34    0     0  100    34      0    177 --:--:-- --:--:-- --:--:--   177
Finished Step #37
Starting Step #38
Step #38: Already have image: gcr.io/oss-fuzz/libtpms
Finished Step #38
PUSH
DONE
