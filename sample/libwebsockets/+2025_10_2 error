starting build "3e424ce8-37ea-4ce2-a8f9-3022e2b6baa9"

FETCHSOURCE
BUILD
Starting Step #0
Step #0: Already have image (with digest): gcr.io/cloud-builders/git
Step #0: Cloning into 'oss-fuzz'...
Finished Step #0
Starting Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e"
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Already have image (with digest): gcr.io/cloud-builders/docker
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Sending build context to Docker daemon   7.68kB
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 1/6 : FROM gcr.io/oss-fuzz-base/base-builder
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": latest: Pulling from oss-fuzz-base/base-builder
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b549f31133a9: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": f902dcb2c452: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b96a3ee92563: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 79d32170ccec: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6ee90e19cd9c: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c3e6adb72e0c: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": fab86c6c3424: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7b0e3f58fc04: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b9438328c831: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 81b84f0c96e3: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 170eb5da4377: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": eddf06c463f2: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0e5b7c3079bb: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 4830da2e4635: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 06acda231297: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 961dfab508d8: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 5a12c3a2ed08: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3aca20a4a787: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 98f79320a850: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0b1c3cbe7734: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3e56728204c1: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6134384fed17: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 382d2b100069: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 69f84a8cf9f5: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c6c4c842caf9: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ff5833ff55bb: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ffaac41201fd: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 2ff31941802d: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 1cda0edabc71: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7819a2b3f0e3: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6ee90e19cd9c: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 76903adbb826: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c9ee201624c1: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c3e6adb72e0c: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 576def9df37b: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b976cacb8b98: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": fab86c6c3424: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b73b515d3165: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ba1389cc3414: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 91645af8fc67: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7b0e3f58fc04: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 85032a5424f4: Pulling fs layer
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b9438328c831: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 81b84f0c96e3: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 06acda231297: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 170eb5da4377: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 961dfab508d8: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": eddf06c463f2: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 79d32170ccec: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 2ff31941802d: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 1cda0edabc71: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7819a2b3f0e3: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 382d2b100069: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 69f84a8cf9f5: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 5a12c3a2ed08: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3e56728204c1: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6134384fed17: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c6c4c842caf9: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 76903adbb826: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0b1c3cbe7734: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0e5b7c3079bb: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 4830da2e4635: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 98f79320a850: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ffaac41201fd: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ff5833ff55bb: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 91645af8fc67: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 85032a5424f4: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c9ee201624c1: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 576def9df37b: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b73b515d3165: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b976cacb8b98: Waiting
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b96a3ee92563: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b96a3ee92563: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b549f31133a9: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b549f31133a9: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6ee90e19cd9c: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": f902dcb2c452: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": f902dcb2c452: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": fab86c6c3424: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": fab86c6c3424: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7b0e3f58fc04: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7b0e3f58fc04: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b549f31133a9: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b9438328c831: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b9438328c831: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 81b84f0c96e3: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 81b84f0c96e3: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 170eb5da4377: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 170eb5da4377: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": eddf06c463f2: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": eddf06c463f2: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c3e6adb72e0c: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c3e6adb72e0c: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0e5b7c3079bb: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0e5b7c3079bb: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 4830da2e4635: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": f902dcb2c452: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 06acda231297: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 06acda231297: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b96a3ee92563: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 961dfab508d8: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 5a12c3a2ed08: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 5a12c3a2ed08: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3aca20a4a787: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3aca20a4a787: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 98f79320a850: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0b1c3cbe7734: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0b1c3cbe7734: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3e56728204c1: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3e56728204c1: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6134384fed17: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6134384fed17: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 382d2b100069: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 382d2b100069: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 69f84a8cf9f5: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 69f84a8cf9f5: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c6c4c842caf9: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c6c4c842caf9: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 79d32170ccec: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 79d32170ccec: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ffaac41201fd: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 2ff31941802d: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 2ff31941802d: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 1cda0edabc71: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 1cda0edabc71: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 76903adbb826: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 76903adbb826: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7819a2b3f0e3: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7819a2b3f0e3: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c9ee201624c1: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c9ee201624c1: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 576def9df37b: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b976cacb8b98: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ba1389cc3414: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ba1389cc3414: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b73b515d3165: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 91645af8fc67: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 91645af8fc67: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 85032a5424f4: Verifying Checksum
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 85032a5424f4: Download complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 79d32170ccec: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6ee90e19cd9c: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c3e6adb72e0c: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": fab86c6c3424: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7b0e3f58fc04: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b9438328c831: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 81b84f0c96e3: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 170eb5da4377: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": eddf06c463f2: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0e5b7c3079bb: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 4830da2e4635: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 06acda231297: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 961dfab508d8: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 5a12c3a2ed08: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3aca20a4a787: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 98f79320a850: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0b1c3cbe7734: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 3e56728204c1: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 6134384fed17: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 382d2b100069: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 69f84a8cf9f5: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c6c4c842caf9: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ff5833ff55bb: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ffaac41201fd: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 2ff31941802d: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 1cda0edabc71: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 7819a2b3f0e3: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 76903adbb826: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": c9ee201624c1: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 576def9df37b: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b976cacb8b98: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": b73b515d3165: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": ba1389cc3414: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 91645af8fc67: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 85032a5424f4: Pull complete
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Digest: sha256:f2a3bf09b4ea280b4c04f5d2fee5aba6ef652c94327af9077a34ef365268b1a5
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Status: Downloaded newer image for gcr.io/oss-fuzz-base/base-builder:latest
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> b415eb24371a
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 2/6 : RUN apt-get update && apt-get install -y libssl-dev
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> Running in f1d1466ee174
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Reading package lists...
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Reading package lists...
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Building dependency tree...
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Reading state information...
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": libssl-dev is already the newest version (1.1.1f-1ubuntu2.24).
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": The following packages were automatically installed and are no longer required:
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":   autotools-dev libsigsegv2 m4
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Use 'apt autoremove' to remove them.
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Removing intermediate container f1d1466ee174
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> 3ac6b343e658
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 3/6 : RUN git clone --depth 1 https://github.com/warmcat/libwebsockets.git
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> Running in 275085df8c08
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": [91mCloning into 'libwebsockets'...
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": [0mRemoving intermediate container 275085df8c08
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> c01e62ea1a94
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 4/6 : COPY build.sh $SRC
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> ca2eebebdc62
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 5/6 : COPY lws_upng_inflate_fuzzer.cpp $SRC/libwebsockets/
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> 42c01335a016
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Step 6/6 : WORKDIR $SRC/libwebsockets
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> Running in a76f1143b054
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Removing intermediate container a76f1143b054
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e":  ---> d491fa5a32b8
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Successfully built d491fa5a32b8
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Successfully tagged gcr.io/oss-fuzz/libwebsockets:latest
Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e": Successfully tagged us-central1-docker.pkg.dev/oss-fuzz/unsafe/libwebsockets:latest
Finished Step #1 - "build-ac622352-79f6-46a0-a7fb-f5799f322b6e"
Starting Step #2 - "srcmap"
Step #2 - "srcmap": Already have image: gcr.io/oss-fuzz/libwebsockets
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + SRCMAP=/tmp/filenAyAnM
Step #2 - "srcmap": + echo '{}'
Step #2 - "srcmap": + PATHS_TO_SCAN=/src
Step #2 - "srcmap": + [[ c == \g\o ]]
Step #2 - "srcmap": ++ find /src -name .git -type d
Step #2 - "srcmap": + for DOT_GIT_DIR in $(find $PATHS_TO_SCAN -name ".git" -type d)
Step #2 - "srcmap": ++ dirname /src/libwebsockets/.git
Step #2 - "srcmap": + GIT_DIR=/src/libwebsockets
Step #2 - "srcmap": + cd /src/libwebsockets
Step #2 - "srcmap": ++ git config --get remote.origin.url
Step #2 - "srcmap": + GIT_URL=https://github.com/warmcat/libwebsockets.git
Step #2 - "srcmap": ++ git rev-parse HEAD
Step #2 - "srcmap": + GIT_REV=f2dcc4eaadf4b35ffeee9de2bc44088f3accbf6e
Step #2 - "srcmap": + jq_inplace /tmp/filenAyAnM '."/src/libwebsockets" = { type: "git", url: "https://github.com/warmcat/libwebsockets.git", rev: "f2dcc4eaadf4b35ffeee9de2bc44088f3accbf6e" }'
Step #2 - "srcmap": ++ tempfile
Step #2 - "srcmap": + F=/tmp/fileBu4m4b
Step #2 - "srcmap": + cat /tmp/filenAyAnM
Step #2 - "srcmap": + jq '."/src/libwebsockets" = { type: "git", url: "https://github.com/warmcat/libwebsockets.git", rev: "f2dcc4eaadf4b35ffeee9de2bc44088f3accbf6e" }'
Step #2 - "srcmap": + mv /tmp/fileBu4m4b /tmp/filenAyAnM
Step #2 - "srcmap": ++ find /src -name .svn -type d
Step #2 - "srcmap": ++ find /src -name .hg -type d
Step #2 - "srcmap": + '[' '' '!=' '' ']'
Step #2 - "srcmap": + cat /tmp/filenAyAnM
Step #2 - "srcmap": + rm /tmp/filenAyAnM
Step #2 - "srcmap": {
Step #2 - "srcmap":   "/src/libwebsockets": {
Step #2 - "srcmap":     "type": "git",
Step #2 - "srcmap":     "url": "https://github.com/warmcat/libwebsockets.git",
Step #2 - "srcmap":     "rev": "f2dcc4eaadf4b35ffeee9de2bc44088f3accbf6e"
Step #2 - "srcmap":   }
Step #2 - "srcmap": }
Finished Step #2 - "srcmap"
Starting Step #3 - "compile-libfuzzer-address-x86_64"
Step #3 - "compile-libfuzzer-address-x86_64": Already have image (with digest): gcr.io/cloud-builders/docker
Step #3 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-libfuzzer-address-x86_64": vm.mmap_rnd_bits = 28
Step #3 - "compile-libfuzzer-address-x86_64": Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
Step #3 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-libfuzzer-address-x86_64": CC=clang
Step #3 - "compile-libfuzzer-address-x86_64": CXX=clang++
Step #3 - "compile-libfuzzer-address-x86_64": CFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
Step #3 - "compile-libfuzzer-address-x86_64": CXXFLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
Step #3 - "compile-libfuzzer-address-x86_64": RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
Step #3 - "compile-libfuzzer-address-x86_64": ---------------------------------------------------------------
Step #3 - "compile-libfuzzer-address-x86_64": + DIR=/src/libwebsockets/
Step #3 - "compile-libfuzzer-address-x86_64": + cd /src/libwebsockets/
Step #3 - "compile-libfuzzer-address-x86_64": + sed -i s/-Werror//g ./CMakeLists.txt
Step #3 - "compile-libfuzzer-address-x86_64": + mkdir build
Step #3 - "compile-libfuzzer-address-x86_64": + cd build
Step #3 - "compile-libfuzzer-address-x86_64": + cmake '-DCMAKE_C_FLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link' '-DCMAKE_CXX_FLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++' '-DCMAKE_EXE_LINKER_FLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link' '-DCMAKE_SHARED_LINKER_FLAGS=-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=unknown-warning-option   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link' ..
Step #3 - "compile-libfuzzer-address-x86_64": -- The C compiler identification is Clang 22.0.0
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting C compiler ABI info - done
Step #3 - "compile-libfuzzer-address-x86_64": -- Check for working C compiler: /usr/local/bin/clang - skipped
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting C compile features - done
Step #3 - "compile-libfuzzer-address-x86_64": -- Compiled with LWS_WITH_DIR and LWS_WITH_LEJP_CONF
Step #3 - "compile-libfuzzer-address-x86_64": -- Found Git: /usr/bin/git (found version "2.25.1")
Step #3 - "compile-libfuzzer-address-x86_64": [0mGit commit hash: f2dcc4e[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_inline
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_inline - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE___inline__
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE___inline__ - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE___inline
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE___inline - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_TRIM
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_TRIM - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_USABLE_SIZE
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_USABLE_SIZE - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for fork
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for fork - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getenv
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getenv - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for malloc
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for malloc - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for memset
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for memset - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for realloc
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for realloc - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for socket
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for socket - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for strerror
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for strerror - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for vfork
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for vfork - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for execvpe
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for execvpe - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getifaddrs
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getifaddrs - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for snprintf
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for snprintf - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _snprintf
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _snprintf - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _vsnprintf
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _vsnprintf - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getloadavg
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getloadavg - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for atoll
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for atoll - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _atoi64
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _atoi64 - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _stat32i64
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for _stat32i64 - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for clock_gettime
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for clock_gettime - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for localtime_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for localtime_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for gmtime_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for gmtime_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for ctime_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for ctime_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getgrgid_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getgrgid_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getgrnam_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getgrnam_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getpwuid_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getpwuid_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getpwnam_r
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for getpwnam_r - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for timegm
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for timegm - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_IN6ADDR_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_IN6ADDR_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MEMORY_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MEMORY_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NETINET_IN_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NETINET_IN_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STDINT_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STDINT_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STDLIB_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STDLIB_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STRINGS_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STRINGS_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STRING_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_STRING_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_PRCTL_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_PRCTL_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_SOCKET_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_SOCKET_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_SOCKIO_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_SOCKIO_H - Failed
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_STAT_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_STAT_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_TYPES_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_TYPES_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_UNISTD_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_UNISTD_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_VFORK_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_VFORK_H - Failed
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_CAPABILITY_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_CAPABILITY_H - Failed
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_MALLOC_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_PTHREAD_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_PTHREAD_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_INTTYPES_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_INTTYPES_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_RESOURCE_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYS_RESOURCE_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_LINUX_IPV6_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_LINUX_IPV6_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NET_IF_ETHER_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NET_IF_ETHER_H - Failed
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NET_ETHERNET_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_NET_ETHERNET_H - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYSTEMD_H
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SYSTEMD_H - Failed
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for cap_set_flag in cap
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for cap_set_flag in cap - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for 3 include files stdlib.h, ..., string.h
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for 3 include files stdlib.h, ..., string.h - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_INTPTR_T
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_INTPTR_T - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_PTHREAD_SETNAME_NP
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_PTHREAD_SETNAME_NP - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_GETOPT_LONG
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAS_GETOPT_LONG - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_RTA_PREF
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_RTA_PREF - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SUSECONDS_T
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SUSECONDS_T - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_VISIBILITY
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_VISIBILITY - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_IGNORED_QUALIFIERS
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_IGNORED_QUALIFIERS - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_TYPE_LIMITS
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_TYPE_LIMITS - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_NO_DEPRECATED_DECLARATIONS
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_GCC_HAS_NO_DEPRECATED_DECLARATIONS - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for eventfd_read
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for eventfd_read - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_PIPE2
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_PIPE2 - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_TCP_USER_TIMEOUT
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_TCP_USER_TIMEOUT - Success
Step #3 - "compile-libfuzzer-address-x86_64": [0mCompiling with SSL support[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")
Step #3 - "compile-libfuzzer-address-x86_64": [0mOpenSSL include dir: /usr/include[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mOpenSSL libraries: /usr/lib/x86_64-linux-gnu/libssl.so;/usr/lib/x86_64-linux-gnu/libcrypto.so[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for openssl/ecdh.h
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for openssl/ecdh.h - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set1_param
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set1_param - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_set_info_callback
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_set_info_callback - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for X509_VERIFY_PARAM_set1_host
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for X509_VERIFY_PARAM_set1_host - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for RSA_set0_key
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for RSA_set0_key - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for X509_get_key_usage
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for X509_get_key_usage - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_EVP_PKEY_new_raw_private_key
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_EVP_PKEY_new_raw_private_key - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_get0_certificate
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_get0_certificate - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_get0_alpn_selected
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_get0_alpn_selected - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_set_alpn_protos
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_set_alpn_protos - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_cfb8
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_cfb8 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_cfb128
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_cfb128 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_192_cfb8
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_192_cfb8 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_192_cfb128
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_192_cfb128 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_256_cfb8
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_256_cfb8 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_256_cfb128
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_256_cfb128 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_xts
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_xts - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ofb
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ofb - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ecb
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ecb - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ctr
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_ctr - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for RSA_verify_pss_mgf1
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for RSA_verify_pss_mgf1 - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for HMAC_CTX_new
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for HMAC_CTX_new - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set_ciphersuites
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set_ciphersuites - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_PKEY_new_raw_private_key
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_PKEY_new_raw_private_key - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_SESSION_set_time
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_SESSION_set_time - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_SESSION_up_ref
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_SESSION_up_ref - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set_keylog_callback
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_set_keylog_callback - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EC_KEY_new_by_curve_name
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EC_KEY_new_by_curve_name - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SSL_EXTRA_CHAIN_CERTS
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SSL_EXTRA_CHAIN_CERTS - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_EVP_MD_CTX_free
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_EVP_MD_CTX_free - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_OPENSSL_STACK
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_OPENSSL_STACK - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SSL_CTX_SET_ECDH_AUTO
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test LWS_HAVE_SSL_CTX_SET_ECDH_AUTO - Success
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for ECDSA_SIG_set0
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for ECDSA_SIG_set0 - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for BN_bn2binpad
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for BN_bn2binpad - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_wrap
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EVP_aes_128_wrap - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EC_POINT_get_affine_coordinates
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for EC_POINT_get_affine_coordinates - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_load_verify_file
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_load_verify_file - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_load_verify_dir
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for SSL_CTX_load_verify_dir - not found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for TLS_client_method
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for TLS_client_method - found
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for TLSv1_2_client_method
Step #3 - "compile-libfuzzer-address-x86_64": -- Looking for TLSv1_2_client_method - found
Step #3 - "compile-libfuzzer-address-x86_64": [0mSearching for OpenSSL executable and dlls[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mOpenSSL executable: /usr/bin/openssl[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0m GENCERTS = 1[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mGenerating SSL Certificates for the test-server...[0m
Step #3 - "compile-libfuzzer-address-x86_64": Generating a RSA private key
Step #3 - "compile-libfuzzer-address-x86_64": ...............+++++
Step #3 - "compile-libfuzzer-address-x86_64": .................................+++++
Step #3 - "compile-libfuzzer-address-x86_64": writing new private key to '/src/libwebsockets/build/libwebsockets-test-server.key.pem'
Step #3 - "compile-libfuzzer-address-x86_64": -----
Step #3 - "compile-libfuzzer-address-x86_64": You are about to be asked to enter information that will be incorporated
Step #3 - "compile-libfuzzer-address-x86_64": into your certificate request.
Step #3 - "compile-libfuzzer-address-x86_64": What you are about to enter is what is called a Distinguished Name or a DN.
Step #3 - "compile-libfuzzer-address-x86_64": There are quite a few fields but you can leave some blank
Step #3 - "compile-libfuzzer-address-x86_64": For some fields there will be a default value,
Step #3 - "compile-libfuzzer-address-x86_64": If you enter '.', the field will be left blank.
Step #3 - "compile-libfuzzer-address-x86_64": -----
Step #3 - "compile-libfuzzer-address-x86_64": Country Name (2 letter code) [AU]:State or Province Name (full name) [Some-State]:Locality Name (eg, city) []:Organization Name (eg, company) [Internet Widgits Pty Ltd]:Organizational Unit Name (eg, section) []:Common Name (e.g. server FQDN or YOUR name) []:Email Address []:[0mSUCCESSFULLY generated SSL certificate[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mDIR /src/libwebsockets/build CMP /src/libwebsockets/cmake[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/client/binance[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/client/hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/client/hello_world-policy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/client/http-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test HAS_LWS_WITH_SECURE_STREAMS_PROXY_API
Step #3 - "compile-libfuzzer-address-x86_64": -- Performing Test HAS_LWS_WITH_SECURE_STREAMS_PROXY_API - Failed
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/client/ws-echo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/server/hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/sink/hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/ssproxy/ssproxy-custom-transport-uart[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples/ssproxy/ssproxy-socket[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-async-dns[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-backtrace[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-cose[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-dhcpc[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-dir[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-fts[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-gencrypto[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-gunzip[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-jose[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-jpeg[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-jrpc[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- The CXX compiler identification is Clang 22.0.0
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compiler ABI info - done
Step #3 - "compile-libfuzzer-address-x86_64": -- Check for working CXX compiler: /usr/local/bin/clang++ - skipped
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features
Step #3 - "compile-libfuzzer-address-x86_64": -- Detecting CXX compile features - done
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lecp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lejp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lhp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lhp-dlo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_cache[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_dsh[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_map[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_smd[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_spawn[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_struct-json[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_struct_sqlite[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_tokenize[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lwsac[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-secure-streams[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-smtp_client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-ssjpeg[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-upng[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/client-server/minimal-ws-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-cose-key[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-cose-sign[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-jwe[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-jwk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-jws[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/crypto/minimal-crypto-x509[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/dbus-client/minimal-dbus-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/dbus-client/minimal-dbus-ws-proxy-testclient[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/dbus-server/minimal-dbus-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/dbus-server/minimal-dbus-ws-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/gtk/minimal-gtk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mFI 0[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0m... NO LWS_WITH_SYS_FAULT_INJECTION[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0m... skipping mbedtls wrong CA test[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-attach[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-captive-portal[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-certinfo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-custom-headers[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-h2-rxflow[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-hugeurl[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-jit-trust[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-multi[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-basicauth[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-cgi[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-custom-headers[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-deaddrop[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-dynamic[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-custom[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-demos[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-foreign[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mExtra libs: [0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-get[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-post-file[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-post-lwsac[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-fulltext-search[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-h2-long-poll[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-mimetypes[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-multivhost[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-sse[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-sse-ring[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-systemd-socketact[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-tls[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-tls-80[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-tls-mem[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/mqtt-client/minimal-mqtt-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/mqtt-client/minimal-mqtt-client-multi[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-adopt-tcp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-adopt-udp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-audio[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-fallback-http-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-file[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-netcat[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-proxy-fallback[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-serial[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-vhost[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-wol[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-alexa[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-avs[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-binance[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-blob[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-client-tx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-cpp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-custom-client-transport[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-hugeurl[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-metadata[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-mqtt[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-perf[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-policy2c[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server-raw[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-sigv4[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-smd[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-staticpolicy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-stress[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-testsfail[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-threads[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-binance[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-echo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-ping[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-pmd-bulk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-rx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-spam[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-spam-tx-rx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-client/minimal-ws-client-tx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-broker[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-echo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd-bulk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd-corner[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-ring[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threadpool[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threads[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threads-foreign-libuv-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threads-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [0mProcessing /src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-timer[0m
Step #3 - "compile-libfuzzer-address-x86_64": -- Configuring done (28.5s)
Step #3 - "compile-libfuzzer-address-x86_64": -- Generating done (0.4s)
Step #3 - "compile-libfuzzer-address-x86_64": -- Build files have been written to: /src/libwebsockets/build
Step #3 - "compile-libfuzzer-address-x86_64": + make -j8
Step #3 - "compile-libfuzzer-address-x86_64": [  0%] [34m[1mCreating build include dir[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  0%] Built target GENHDR
Step #3 - "compile-libfuzzer-address-x86_64": [  0%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-caps.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-caps.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-misc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-init.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-misc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  1%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-pipe.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  2%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-init.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-service.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-sockets.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets.dir/plat/unix/unix-fds.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-pipe.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  3%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/tls.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  4%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/tls-network.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  4%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-service.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-sockets.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/tls-sessions.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/plat/unix/unix-fds.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/tls.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-tls.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  5%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-x509.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-ssl.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-session.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/lws-genhash.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/lws-genrsa.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/tls-network.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/tls-sessions.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  6%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/lws-genaes.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/lws-genec-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/lws-genec.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/lws-gencrypto.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  7%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/tls-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  8%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-tls.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-x509.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/tls-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/openssl/openssl-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [  9%] [32mBuilding C object lib/CMakeFiles/websockets.dir/tls/lws-gencrypto-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/lws_dll2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/alloc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-ssl.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/buflist.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/context.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/lws_map.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 10%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-session.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/libwebsockets.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/logs.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core/vfs.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 11%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/base64-decode.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/prng.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 12%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lws-ring.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/lws-genhash.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/cache-ttl/lws-cache-ttl.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 13%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/cache-ttl/heap.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/cache-ttl/file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/upng-gzip.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/upng.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/lws-genrsa.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 14%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/jpeg.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-rect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-font-mcufont.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/lws-genaes.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-text.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 15%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-png.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-jpeg.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/lws-genec-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dlo/dlo-lhp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 16%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/jrpc/jrpc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/dir.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lwsac/lwsac.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lwsac/cached-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 17%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/sha-1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 18%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/lws-genec.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lejp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lhp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding C object lib/CMakeFiles/websockets.dir/misc/lhp-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding C object lib/CMakeFiles/websockets.dir/system/system.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 19%] [32mBuilding C object lib/CMakeFiles/websockets.dir/system/smd/smd.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/dummy-callback.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/lws-gencrypto.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/output.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/close.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/network.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 20%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/tls-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/vhost.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/pollfd.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/service.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 21%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/sorted-usec-list.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/wsi.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/wsi-timeout.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/adopt.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/pipe/ops-pipe.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 22%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/tls-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/state.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/route.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/wol.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 23%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 24%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/openssl/openssl-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 24%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/connect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/connect2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/connect3.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/connect4.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 25%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/sort-dns.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding C object lib/CMakeFiles/websockets.dir/core-net/client/conmon.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/header.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/date.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/tls/lws-gencrypto-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 26%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/parsers.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/server/server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/server/lws-spa.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/cookie.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/server/lejp-conf.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 27%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/h1/ops-h1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/h2/http2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/lws_dll2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/h2/hpack.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/h2/ops-h2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/alloc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 28%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/ws/ops-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 29%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/ws/client-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 29%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/ws/client-parser-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/buflist.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/ws/server-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 30%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/raw-skt/ops-raw-skt.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/raw-file/ops-raw-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/listen/ops-listen.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/http/client/client-http.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/context.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 31%] [32mBuilding C object lib/CMakeFiles/websockets.dir/roles/netlink/ops-netlink.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding C object lib/CMakeFiles/websockets.dir/event-libs/poll/poll.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/policy-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/system/captive-portal-detect/captive-portal-detect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 32%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/protocols/ss-raw.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/policy-json.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/system/fetch-policy/fetch-policy.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/protocols/ss-h1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 33%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/protocols/ss-h2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding C object lib/CMakeFiles/websockets.dir/secure-streams/protocols/ss-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/lws_map.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 34%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/libwebsockets.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/logs.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core/vfs.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/base64-decode.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 35%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/prng.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lws-ring.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/cache-ttl/lws-cache-ttl.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32m[1mLinking C static library libwebsockets.a[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] Built target websockets
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/cache-ttl/heap.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/cache-ttl/file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 36%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/upng-gzip.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/upng.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/jpeg.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 37%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-rect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-font-mcufont.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-text.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 38%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-png.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-jpeg.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dlo/dlo-lhp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/jrpc/jrpc.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/dir.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 39%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lwsac/lwsac.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lwsac/cached-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/sha-1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lejp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 40%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lhp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/misc/lhp-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/system/system.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/system/smd/smd.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 41%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/dummy-callback.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/output.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/close.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/network.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 42%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/vhost.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/pollfd.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/service.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/sorted-usec-list.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/wsi.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 43%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/wsi-timeout.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/adopt.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/pipe/ops-pipe.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/state.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 44%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/route.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/wol.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/connect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 45%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/connect2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/connect3.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/connect4.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/sort-dns.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/core-net/client/conmon.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 46%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/header.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/date.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/parsers.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/server/server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 47%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/server/lws-spa.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/cookie.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/server/lejp-conf.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/h1/ops-h1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 48%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/h2/http2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 49%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/h2/hpack.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 49%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/h2/ops-h2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 49%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/ws/ops-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 49%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/ws/client-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/ws/client-parser-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/ws/server-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/raw-skt/ops-raw-skt.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/raw-file/ops-raw-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 50%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/listen/ops-listen.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/http/client/client-http.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/roles/netlink/ops-netlink.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/event-libs/poll/poll.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 51%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/policy-common.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/system/captive-portal-detect/captive-portal-detect.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/protocols/ss-raw.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 52%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/policy-json.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/system/fetch-policy/fetch-policy.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/protocols/ss-h1.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/protocols/ss-h2.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 53%] [32mBuilding C object lib/CMakeFiles/websockets_shared.dir/secure-streams/protocols/ss-ws.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 54%] [32mBuilding C object minimal-examples/client/hello_world/CMakeFiles/lws-minimal-ss-hello_world.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 54%] [32mBuilding C object minimal-examples/client/hello_world/CMakeFiles/lws-minimal-ss-hello_world.dir/hello_world-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 54%] [32mBuilding C object minimal-examples/client/hello_world-policy/CMakeFiles/lws-minimal-ss-hello_world-policy.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/client/hello_world-policy/CMakeFiles/lws-minimal-ss-hello_world-policy.dir/hello_world-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/client/http-post/CMakeFiles/lws-minimal-ss-http-post.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/client/http-post/CMakeFiles/lws-minimal-ss-http-post.dir/http-post-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/client/ws-echo/CMakeFiles/lws-minimal-ss-ws-echo.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/server/hello_world/CMakeFiles/lws-minimal-ss-server-hello_world.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32mBuilding C object minimal-examples/server/hello_world/CMakeFiles/lws-minimal-ss-server-hello_world.dir/ss-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 55%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-hello_world-policy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 56%] [32m[1mLinking C shared library libwebsockets.so[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 57%] [32mBuilding C object minimal-examples/client/ws-echo/CMakeFiles/lws-minimal-ss-ws-echo.dir/ws-echo-ss.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 58%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-http-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 58%] [32mBuilding C object minimal-examples/sink/hello_world/CMakeFiles/lws-minimal-ss-sink-hello_world.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples/sink/hello_world/CMakeFiles/lws-minimal-ss-sink-hello_world.dir/ss-sink.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-server-hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-ws-echo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] Built target lws-minimal-ss-hello_world
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-dir/CMakeFiles/lws-api-test-dir.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples/sink/hello_world/CMakeFiles/lws-minimal-ss-sink-hello_world.dir/ss-source.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] Built target websockets_shared
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-gunzip/CMakeFiles/lws-api-test-gunzip.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-jpeg/CMakeFiles/lws-api-test-jpeg.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] Built target lws-minimal-ss-hello_world-policy
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-jrpc/CMakeFiles/lws-api-test-jrpc.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32m[1mLinking C executable ../../../bin/lws-minimal-ss-sink-hello_world[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32m[1mLinking C executable ../../../bin/lws-api-test-dir[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] Built target lws-minimal-ss-http-post
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lejp/CMakeFiles/lws-api-test-lejp.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 59%] [32m[1mLinking C executable ../../../bin/lws-api-test-jpeg[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 60%] [32m[1mLinking C executable ../../../bin/lws-api-test-gunzip[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 60%] Built target lws-minimal-ss-server-hello_world
Step #3 - "compile-libfuzzer-address-x86_64": [ 60%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lhp/CMakeFiles/lws-api-test-lhp.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 60%] Built target lws-minimal-ss-ws-echo
Step #3 - "compile-libfuzzer-address-x86_64": [ 61%] [32m[1mLinking C executable ../../../bin/lws-api-test-jrpc[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 61%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lhp-dlo/CMakeFiles/lws-api-test-lhp-dlo.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 61%] [32m[1mLinking C executable ../../../bin/lws-api-test-lejp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 62%] [32m[1mLinking C executable ../../../bin/lws-api-test-lhp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 62%] Built target lws-minimal-ss-sink-hello_world
Step #3 - "compile-libfuzzer-address-x86_64": [ 62%] Built target lws-api-test-dir
Step #3 - "compile-libfuzzer-address-x86_64": [ 62%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lws_cache/CMakeFiles/lws-api-test-lws_cache.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 63%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lws_map/CMakeFiles/lws-api-test-lws_map.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 63%] Built target lws-api-test-jpeg
Step #3 - "compile-libfuzzer-address-x86_64": [ 63%] Built target lws-api-test-gunzip
Step #3 - "compile-libfuzzer-address-x86_64": [ 63%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lws_smd/CMakeFiles/lws-api-test-lws_smd.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lws_tokenize/CMakeFiles/lws-api-test-lws_tokenize.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32m[1mLinking C executable ../../../bin/lws-api-test-lhp-dlo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] Built target lws-api-test-jrpc
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-lwsac/CMakeFiles/lws-api-test-lwsac.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32m[1mLinking C executable ../../../bin/lws-api-test-lws_map[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32m[1mLinking C executable ../../../bin/lws-api-test-lws_smd[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] [32m[1mLinking C executable ../../../bin/lws-api-test-lws_cache[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 64%] Built target lws-api-test-lejp
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-secure-streams/CMakeFiles/lws-api-test-secure-streams.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] [32m[1mLinking C executable ../../../bin/lws-api-test-lwsac[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] Built target lws-api-test-lhp
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-ssjpeg/CMakeFiles/lws-api-test-ssjpeg.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] [32m[1mLinking C executable ../../../bin/lws-api-test-lws_tokenize[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 65%] Built target lws-api-test-lhp-dlo
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/api-tests/api-test-upng/CMakeFiles/lws-api-test-upng.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32m[1mLinking C executable ../../../bin/lws-api-test-secure-streams[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32m[1mLinking C executable ../../../bin/lws-api-test-ssjpeg[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] Built target lws-api-test-lws_map
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/client-server/minimal-ws-proxy/CMakeFiles/lws-minimal-ws-proxy.dir/minimal-ws-proxy.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] Built target lws-api-test-lws_smd
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32m[1mLinking C executable ../../../bin/lws-api-test-upng[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] Built target lws-api-test-lws_cache
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client/CMakeFiles/lws-minimal-http-client.dir/minimal-http-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-attach/CMakeFiles/lws-minimal-http-client-attach.dir/minimal-http-client-attach.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] Built target lws-api-test-lwsac
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-captive-portal/CMakeFiles/lws-minimal-http-client-captive-portal.dir/minimal-http-client-captive-portal.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] Built target lws-api-test-lws_tokenize
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-certinfo/CMakeFiles/lws-minimal-http-client-certinfo.dir/minimal-http-client-certinfo.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 66%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-attach[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] Built target lws-api-test-secure-streams
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-custom-headers/CMakeFiles/lws-minimal-http-client-custom-headers.dir/minimal-http-client-custom-headers.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-captive-portal[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] Built target lws-api-test-ssjpeg
Step #3 - "compile-libfuzzer-address-x86_64": [ 67%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-h2-rxflow/CMakeFiles/lws-minimal-http-client-h2-rxflow.dir/minimal-http-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 68%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-certinfo[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 68%] Built target lws-api-test-upng
Step #3 - "compile-libfuzzer-address-x86_64": [ 68%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-hugeurl/CMakeFiles/lws-minimal-http-client-hugeurl.dir/minimal-http-client-hugeurl.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 68%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-custom-headers[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 69%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-h2-rxflow[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 69%] Built target lws-minimal-ws-proxy
Step #3 - "compile-libfuzzer-address-x86_64": [ 69%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-hugeurl[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 69%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-multi/CMakeFiles/lws-minimal-http-client-multi.dir/minimal-http-client-multi.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 69%] Built target lws-minimal-http-client-attach
Step #3 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding C object minimal-examples-lowlevel/http-client/minimal-http-client-post/CMakeFiles/lws-minimal-http-client-post.dir/minimal-http-client-post.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 70%] Built target lws-minimal-http-client
Step #3 - "compile-libfuzzer-address-x86_64": [ 70%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server/CMakeFiles/lws-minimal-http-server.dir/minimal-http-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 70%] Built target lws-minimal-http-client-captive-portal
Step #3 - "compile-libfuzzer-address-x86_64": [ 71%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-basicauth/CMakeFiles/lws-minimal-http-server-basicauth.dir/minimal-http-server-basicauth.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 71%] Built target lws-minimal-http-client-certinfo
Step #3 - "compile-libfuzzer-address-x86_64": [ 71%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-custom-headers/CMakeFiles/lws-minimal-http-server-custom-headers.dir/minimal-http-server-custom-headers.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 71%] Built target lws-minimal-http-client-custom-headers
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-deaddrop/CMakeFiles/lws-minimal-http-server-deaddrop.dir/minimal-http-server-deaddrop.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-basicauth[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-client-multi[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] Built target lws-minimal-http-client-h2-rxflow
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-dynamic/CMakeFiles/lws-minimal-http-server-dynamic.dir/minimal-http-server-dynamic.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-custom-headers[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 72%] Built target lws-minimal-http-client-hugeurl
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-eventlib/CMakeFiles/lws-minimal-http-server-eventlib.dir/minimal-http-server-eventlib.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-dynamic[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-eventlib[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-deaddrop[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] Built target lws-minimal-http-server
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] Built target lws-minimal-http-client-post
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-custom/CMakeFiles/lws-minimal-http-server-eventlib-custom.dir/minimal-http-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-demos/CMakeFiles/lws-minimal-http-server-eventlib-demos.dir/minimal-http-server-eventlib-demos.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] Built target lws-minimal-http-server-basicauth
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-smp/CMakeFiles/lws-minimal-http-server-eventlib-smp.dir/minimal-http-server-eventlib-smp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] Built target lws-minimal-http-client-multi
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-form-get/CMakeFiles/lws-minimal-http-server-form-get.dir/minimal-http-server-form-get.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] Built target lws-minimal-http-server-custom-headers
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-form-post/CMakeFiles/lws-minimal-http-server-form-post.dir/minimal-http-server-form-post.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-eventlib-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 73%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-eventlib-custom[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 74%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-form-get[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 74%] Built target lws-minimal-http-server-dynamic
Step #3 - "compile-libfuzzer-address-x86_64": [ 74%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-form-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 74%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-form-post-file/CMakeFiles/lws-minimal-http-server-form-post-file.dir/minimal-http-server-form-post-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 74%] Built target lws-minimal-http-server-eventlib
Step #3 - "compile-libfuzzer-address-x86_64": [ 75%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-eventlib-demos[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 75%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-form-post-lwsac/CMakeFiles/lws-minimal-http-server-form-post-lwsac.dir/minimal-http-server-form-post.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 75%] Built target lws-minimal-http-server-deaddrop
Step #3 - "compile-libfuzzer-address-x86_64": [ 75%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-h2-long-poll/CMakeFiles/lws-minimal-http-server-h2-long-poll.dir/minimal-http-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 76%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-form-post-file[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 76%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-form-post-lwsac[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 76%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-h2-long-poll[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 76%] Built target lws-minimal-http-server-eventlib-smp
Step #3 - "compile-libfuzzer-address-x86_64": [ 77%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-mimetypes/CMakeFiles/lws-minimal-http-server-mimetypes.dir/minimal-http-server-mimetypes.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 77%] Built target lws-minimal-http-server-eventlib-custom
Step #3 - "compile-libfuzzer-address-x86_64": [ 77%] Built target lws-minimal-http-server-form-get
Step #3 - "compile-libfuzzer-address-x86_64": [ 77%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-multivhost/CMakeFiles/lws-minimal-http-server-multivhost.dir/minimal-http-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 78%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-smp/CMakeFiles/lws-minimal-http-server-smp.dir/minimal-http-server-smp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 78%] Built target lws-minimal-http-server-form-post
Step #3 - "compile-libfuzzer-address-x86_64": [ 78%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-sse/CMakeFiles/lws-minimal-http-server-sse.dir/minimal-http-server-sse.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 78%] Built target lws-minimal-http-server-eventlib-demos
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-sse-ring/CMakeFiles/lws-minimal-http-server-sse-ring.dir/minimal-http-server-sse-ring.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-mimetypes[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-multivhost[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-sse[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] Built target lws-minimal-http-server-form-post-file
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-tls/CMakeFiles/lws-minimal-http-server-tls.dir/minimal-http-server-tls.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] Built target lws-minimal-http-server-form-post-lwsac
Step #3 - "compile-libfuzzer-address-x86_64": [ 79%] Built target lws-minimal-http-server-h2-long-poll
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-tls-80/CMakeFiles/lws-minimal-http-server-tls-80.dir/minimal-http-server-tls-80.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/http-server/minimal-http-server-tls-mem/CMakeFiles/lws-minimal-http-server-tls-mem.dir/minimal-http-server-tls-mem.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-sse-ring[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-tls[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-tls-80[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32m[1mLinking C executable ../../../bin/lws-minimal-http-server-tls-mem[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] Built target lws-minimal-http-server-mimetypes
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-adopt-tcp/CMakeFiles/lws-minimal-raw-adopt-tcp.dir/minimal-raw-adopt-tcp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] Built target lws-minimal-http-server-multivhost
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-adopt-udp/CMakeFiles/lws-minimal-raw-adopt-udp.dir/minimal-raw-adopt-udp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] Built target lws-minimal-http-server-smp
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-client/CMakeFiles/lws-minimal-raw-client.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] Built target lws-minimal-http-server-sse
Step #3 - "compile-libfuzzer-address-x86_64": [ 80%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-fallback-http-server/CMakeFiles/lws-minimal-raw-fallback-http-server.dir/minimal-raw-fallback-http-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 81%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-adopt-tcp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 81%] Built target lws-minimal-http-server-sse-ring
Step #3 - "compile-libfuzzer-address-x86_64": [ 81%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-file/CMakeFiles/lws-minimal-raw-file.dir/minimal-raw-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 81%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-adopt-udp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-fallback-http-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] Built target lws-minimal-http-server-tls
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-netcat/CMakeFiles/lws-minimal-raw-netcat.dir/minimal-raw-netcat.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] Built target lws-minimal-http-server-tls-80
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] Built target lws-minimal-http-server-tls-mem
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-serial/CMakeFiles/lws-minimal-raw-serial.dir/minimal-raw-file.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 82%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-vhost/CMakeFiles/lws-minimal-raw-vhost.dir/minimal-raw-vhost.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 83%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-file[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 83%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-netcat[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 83%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-vhost[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 83%] Built target lws-minimal-raw-adopt-tcp
Step #3 - "compile-libfuzzer-address-x86_64": [ 84%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-serial[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 84%] [32mBuilding C object minimal-examples-lowlevel/raw/minimal-raw-wol/CMakeFiles/lws-minimal-raw-wol.dir/minimal-raw-wol.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 84%] Built target lws-minimal-raw-adopt-udp
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams/CMakeFiles/lws-minimal-secure-streams.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-client
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-avs/CMakeFiles/lws-minimal-secure-streams-avs.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-fallback-http-server
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-blob/CMakeFiles/lws-minimal-secure-streams-blob.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32m[1mLinking C executable ../../../bin/lws-minimal-raw-wol[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-file
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-hugeurl/CMakeFiles/lws-minimal-secure-streams-hugeurl.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-avs/CMakeFiles/lws-minimal-secure-streams-avs.dir/avs.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-blob[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-netcat
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-metadata/CMakeFiles/lws-minimal-secure-streams-metadata.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-vhost
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-perf/CMakeFiles/lws-minimal-secure-streams-perf.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 85%] Built target lws-minimal-raw-serial
Step #3 - "compile-libfuzzer-address-x86_64": [ 86%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-post/CMakeFiles/lws-minimal-secure-streams-post.dir/minimal-secure-streams-post.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 87%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-hugeurl[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-avs[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-metadata[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-raw-wol
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server/CMakeFiles/lws-minimal-secure-streams-server.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-perf[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-post[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-secure-streams
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server-raw/CMakeFiles/lws-minimal-secure-streams-server-raw.dir/main.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-secure-streams-blob
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-smd/CMakeFiles/lws-minimal-secure-streams-smd.dir/minimal-secure-streams-smd.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server/CMakeFiles/lws-minimal-secure-streams-server.dir/ss-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-secure-streams-hugeurl
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-stress/CMakeFiles/lws-minimal-secure-streams-stress.dir/minimal-secure-streams.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server-raw/CMakeFiles/lws-minimal-secure-streams-server-raw.dir/ss-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-secure-streams-avs
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-testsfail/CMakeFiles/lws-minimal-secure-streams-testsfail.dir/minimal-secure-streams-testsfail.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-smd[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] Built target lws-minimal-secure-streams-metadata
Step #3 - "compile-libfuzzer-address-x86_64": [ 88%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-threads/CMakeFiles/lws-minimal-secure-streams-threads.dir/minimal-secure-streams-threads.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 89%] [32mBuilding C object minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server/CMakeFiles/lws-minimal-secure-streams-server.dir/ss-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 89%] Built target lws-minimal-secure-streams-perf
Step #3 - "compile-libfuzzer-address-x86_64": [ 90%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client/CMakeFiles/lws-minimal-ws-client.dir/minimal-ws-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 91%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-server-raw[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 91%] Built target lws-minimal-secure-streams-post
Step #3 - "compile-libfuzzer-address-x86_64": [ 91%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-ping/CMakeFiles/lws-minimal-ws-client-ping.dir/minimal-ws-client-ping.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-stress[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-testsfail[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-threads[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-secure-streams-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-ping[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 92%] Built target lws-minimal-secure-streams-smd
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-pmd-bulk/CMakeFiles/lws-minimal-ws-client-pmd-bulk.dir/minimal-ws-client-pmd-bulk.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-secure-streams-server-raw
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-rx/CMakeFiles/lws-minimal-ws-client-rx.dir/minimal-ws-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-secure-streams-stress
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-spam/CMakeFiles/lws-minimal-ws-client-spam.dir/minimal-ws-client-spam.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-secure-streams-threads
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-secure-streams-testsfail
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-spam-tx-rx/CMakeFiles/lws-minimal-ws-client-spam-tx-rx.dir/minimal-ws-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-client/minimal-ws-client-tx/CMakeFiles/lws-minimal-ws-client-tx.dir/minimal-ws-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-secure-streams-server
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-pmd-bulk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-broker/CMakeFiles/lws-minimal-ws-broker.dir/minimal-ws-broker.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-ws-client
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-rx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-raw-proxy/CMakeFiles/lws-minimal-ws-raw-proxy.dir/minimal-ws-raw-proxy.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] Built target lws-minimal-ws-client-ping
Step #3 - "compile-libfuzzer-address-x86_64": [ 93%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server/CMakeFiles/lws-minimal-ws-server.dir/minimal-ws-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 94%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-spam[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 94%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-spam-tx-rx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 95%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-client-tx[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 95%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-broker[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 95%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 96%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-raw-proxy[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 96%] Built target lws-minimal-ws-client-pmd-bulk
Step #3 - "compile-libfuzzer-address-x86_64": [ 96%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd-bulk/CMakeFiles/lws-minimal-ws-server-pmd-bulk.dir/minimal-ws-server-pmd-bulk.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 96%] Built target lws-minimal-ws-client-rx
Step #3 - "compile-libfuzzer-address-x86_64": [ 97%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server-ring/CMakeFiles/lws-minimal-ws-server-ring.dir/minimal-ws-server-ring.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 97%] Built target lws-minimal-ws-client-spam
Step #3 - "compile-libfuzzer-address-x86_64": [ 97%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server-threads/CMakeFiles/lws-minimal-ws-server-threads.dir/minimal-ws-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 97%] Built target lws-minimal-ws-client-spam-tx-rx
Step #3 - "compile-libfuzzer-address-x86_64": [ 98%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server-threads-smp/CMakeFiles/lws-minimal-ws-server-threads-smp.dir/minimal-ws-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 98%] Built target lws-minimal-ws-client-tx
Step #3 - "compile-libfuzzer-address-x86_64": [ 98%] [32mBuilding C object minimal-examples-lowlevel/ws-server/minimal-ws-server-timer/CMakeFiles/lws-minimal-ws-server-timer.dir/minimal-ws-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 98%] Built target lws-minimal-ws-broker
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32mBuilding C object test-apps/CMakeFiles/test-server.dir/test-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server-pmd-bulk[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] Built target lws-minimal-ws-server
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] Built target lws-minimal-ws-raw-proxy
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32mBuilding C object test-apps/CMakeFiles/test-server-extpoll.dir/test-server.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server-ring[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32mBuilding C object test-apps/CMakeFiles/test-lejp.dir/test-lejp.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server-threads[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server-timer[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../../../bin/lws-minimal-ws-server-threads-smp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../bin/libwebsockets-test-lejp[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] [32m[1mLinking C executable ../bin/libwebsockets-test-server[0m
Step #3 - "compile-libfuzzer-address-x86_64": [ 99%] Built target lws-minimal-ws-server-pmd-bulk
Step #3 - "compile-libfuzzer-address-x86_64": [100%] [32mBuilding C object test-apps/CMakeFiles/test-client.dir/test-client.c.o[0m
Step #3 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking C executable ../bin/libwebsockets-test-server-extpoll[0m
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target lws-minimal-ws-server-ring
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target lws-minimal-ws-server-threads
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target lws-minimal-ws-server-timer
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target lws-minimal-ws-server-threads-smp
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target test-lejp
Step #3 - "compile-libfuzzer-address-x86_64": [100%] [32m[1mLinking C executable ../bin/libwebsockets-test-client[0m
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target test-server
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target test-server-extpoll
Step #3 - "compile-libfuzzer-address-x86_64": [100%] Built target test-client
Step #3 - "compile-libfuzzer-address-x86_64": + cd /src/libwebsockets/
Step #3 - "compile-libfuzzer-address-x86_64": + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -Wno-error=incompatible-function-pointer-types -Wno-error=int-conversion -Wno-error=deprecated-declarations -Wno-error=implicit-function-declaration -Wno-error=implicit-int -Wno-error=unknown-warning-option -Wno-error=vla-cxx-extension -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -I/src/libwebsockets//build/include -o /workspace/out/libfuzzer-address-x86_64/lws_upng_inflate_fuzzer lws_upng_inflate_fuzzer.cpp -L/src/libwebsockets//build/lib -l:libwebsockets.a -L/usr/lib/x86_64-linux-gnu/ -l:libssl.so -l:libcrypto.so
Step #3 - "compile-libfuzzer-address-x86_64": In file included from lws_upng_inflate_fuzzer.cpp:17:
Step #3 - "compile-libfuzzer-address-x86_64": In file included from /src/libwebsockets//build/include/libwebsockets.h:739:
Step #3 - "compile-libfuzzer-address-x86_64": [1m/src/libwebsockets//build/include/libwebsockets/lws-write.h:238:5: [0m[0;1;31merror: [0m[1massigning to 'enum lws_write_protocol' from incompatible type 'int'[0m
Step #3 - "compile-libfuzzer-address-x86_64":   238 |                 r |= LWS_WRITE_NO_FIN;[0m
Step #3 - "compile-libfuzzer-address-x86_64":       | [0;1;32m                  ^  ~~~~~~~~~~~~~~~~
Step #3 - "compile-libfuzzer-address-x86_64": [0m1 error generated.
Step #3 - "compile-libfuzzer-address-x86_64": ********************************************************************************
Step #3 - "compile-libfuzzer-address-x86_64": Failed to build.
Step #3 - "compile-libfuzzer-address-x86_64": To reproduce, run:
Step #3 - "compile-libfuzzer-address-x86_64": python infra/helper.py build_image libwebsockets
Step #3 - "compile-libfuzzer-address-x86_64": python infra/helper.py build_fuzzers --sanitizer address --engine libfuzzer --architecture x86_64 libwebsockets
Step #3 - "compile-libfuzzer-address-x86_64": ********************************************************************************
Finished Step #3 - "compile-libfuzzer-address-x86_64"
ERROR
ERROR: build step 3 "gcr.io/cloud-builders/docker" failed: step exited with non-zero status: 1
